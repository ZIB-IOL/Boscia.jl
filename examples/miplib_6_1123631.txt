
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (6, 80, "integer")
seed = 6
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -0.8882228170251665, Inf, 3.937)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -0.1781851353873849, Inf, 6.123)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 0.5659134583937941, Inf, 8.169)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 1.302137665231607, Inf, 10.526)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 1.6256565860237633, Inf, 12.733)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 1.8669710648278368, Inf, 15.015)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 2.0487783129545485, Inf, 17.172)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 2.348614485799952, Inf, 19.51)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, 2.5405302617265244, Inf, 21.738)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, 2.7075141650660486, Inf, 24.091)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, 2.856175838985468, Inf, 26.174)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, 2.9773526782609534, Inf, 28.455)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, 3.104945532417994, Inf, 30.476)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, 3.1951712356367055, Inf, 32.714)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, 3.287766718134085, Inf, 34.898)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, 3.394553245826226, Inf, 37.13)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, 3.479225036196645, Inf, 39.393)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, 3.5610760018061223, Inf, 41.514)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, 3.6645304028245773, Inf, 43.797)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, 3.742437817585138, Inf, 45.952)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, 3.8086458515041706, Inf, 48.159)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, 3.914025902358696, Inf, 50.236)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, 3.990971639537245, Inf, 52.404)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, 4.077196493249873, Inf, 54.447)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, 4.16801287000316, Inf, 56.664)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, 4.244966885194441, Inf, 58.732)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, 4.3189405244172825, Inf, 60.886)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, 4.387587826306083, Inf, 62.967)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, 4.444837308972701, Inf, 64.965)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, 4.48646529050341, Inf, 67.152)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, 4.541270941671166, Inf, 69.293)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6401, 4.584430798252327, Inf, 71.474)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6601, 4.631827892465795, Inf, 73.394)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6801, 4.669440138797326, Inf, 75.617)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 6999, 4.704700290321876, 12.515710925574835, 77.644)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 7199, 4.739683139826017, 12.515710925574835, 79.957)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 7399, 4.777557149028104, 12.515710925574835, 82.112)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 7599, 4.822176500787302, 12.515710925574835, 84.223)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7797, 4.860742247802693, 12.515710925574835, 86.437)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 7997, 4.8904364231900574, 12.515710925574835, 88.522)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 8197, 4.923333671393184, 12.515710925574835, 90.604)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 8397, 4.957426564545555, 12.515710925574835, 92.511)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 8595, 5.010128588461779, 12.515710925574835, 94.649)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 8793, 5.047501378479048, 12.515710925574835, 96.705)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 8993, 5.076390759288534, 12.515710925574835, 98.742)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 9187, 5.1209558906942, 12.515710925574835, 100.786)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 9381, 5.150995649029472, 12.515710925574835, 102.802)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 9575, 5.184695957955092, 12.515710925574835, 104.864)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 9769, 5.214878432280341, 12.515710925574835, 106.808)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 9955, 5.243194328594486, 5.506135330382042, 108.927)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 10013, 5.274181292274523, 5.506135330382042, 110.91)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 10081, 5.304407087843727, 5.506135330382042, 112.926)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 10131, 5.330480974324898, 5.506135330382042, 115.118)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 10187, 5.358425962638778, 5.506135330382042, 117.118)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 10243, 5.385284045024471, 5.506135330382042, 119.261)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 10297, 5.4142044269835194, 5.506135330382042, 121.314)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 10341, 5.444908091333317, 5.506135330382042, 123.332)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 10383, 5.465176043900215, 5.506135330382042, 125.58)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 10401, 5.499948639568346, 5.506135330382042, 127.615)
build optimizer
