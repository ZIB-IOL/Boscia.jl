
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (9, 120, "integer")
seed = 9
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -0.6066393832263641, Inf, 2.85)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -0.12635105051458653, Inf, 4.176)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 1.2898887404764843, Inf, 5.722)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 2.3570544031285463, Inf, 7.599)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 2.9300773197251555, Inf, 9.496)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 3.3462442829639643, Inf, 11.365)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 3.7114713270461364, Inf, 13.221)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 3.9082763569287553, Inf, 15.061)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, 4.069220212225004, Inf, 16.896)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, 4.21097328811251, Inf, 18.723)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, 4.372171595295852, Inf, 20.488)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, 4.5031029995484575, Inf, 22.249)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, 4.743656585103777, Inf, 23.937)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, 4.9155196079832635, Inf, 25.707)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, 5.054630626282637, Inf, 27.413)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, 5.182713290282449, Inf, 29.139)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, 5.257664807360234, Inf, 30.871)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, 5.364377580732962, Inf, 32.554)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, 5.435114184246487, Inf, 34.3)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, 5.51973829881454, Inf, 35.933)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, 5.606907627147028, Inf, 37.665)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, 5.700060869818122, Inf, 39.337)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, 5.780825572397951, Inf, 41.003)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, 5.852071724280475, Inf, 42.656)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, 5.9200239662498495, Inf, 44.276)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, 6.005361831194372, Inf, 45.876)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, 6.07876931762203, Inf, 47.401)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, 6.165286942474621, Inf, 49.061)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, 6.238405279909694, Inf, 50.671)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, 6.294313432687259, Inf, 52.282)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, 6.383135886287175, Inf, 53.868)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6401, 6.461493002898797, Inf, 55.498)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6601, 6.526804317016099, Inf, 57.164)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6801, 6.566909288432327, Inf, 58.827)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 7001, 6.620084236728722, Inf, 60.359)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 7201, 6.672839395697083, Inf, 62.071)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 7401, 6.7347076912356405, Inf, 63.665)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 7569, 6.789137132740996, 10.375196076848798, 65.175)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7685, 6.843003228949896, 10.375196076848798, 66.663)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 7791, 6.88400535115534, 10.375196076848798, 68.251)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 7907, 6.9334617460528545, 10.375196076848798, 69.909)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 8023, 6.975519849744151, 10.375196076848798, 71.448)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 8139, 7.011816934898052, 10.375196076848798, 73.052)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 8255, 7.061253718246978, 10.375196076848798, 74.685)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 8363, 7.099456534139317, 10.375196076848798, 76.325)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 8483, 7.139194609180037, 10.375196076848798, 77.939)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 8601, 7.181672318279484, 10.375196076848798, 79.556)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 8711, 7.221014815303339, 10.375196076848798, 81.122)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 8817, 7.255414135805105, 10.375196076848798, 82.783)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 8923, 7.2913475150919655, 10.375196076848798, 84.325)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 9035, 7.329446639012648, 10.375196076848798, 85.825)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 9147, 7.3681262715689675, 10.375196076848798, 87.365)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 9263, 7.4133903192428905, 10.375196076848798, 89.012)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 9375, 7.445593140908257, 10.375196076848798, 90.638)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 9481, 7.484865464847702, 10.375196076848798, 92.304)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 9591, 7.512621039402269, 10.375196076848798, 93.814)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 9697, 7.551451390140116, 10.375196076848798, 95.302)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 9805, 7.5871156776737365, 10.375196076848798, 96.873)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 9909, 7.613369396622685, 10.375196076848798, 98.405)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 10019, 7.648799561339678, 10.375196076848798, 99.984)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 10125, 7.68831494058075, 10.375196076848798, 101.502)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 10233, 7.718485149566396, 10.375196076848798, 103.188)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 10343, 7.759148596436134, 10.375196076848798, 104.832)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 10451, 7.787397341312911, 10.375196076848798, 106.484)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 10557, 7.820235588284, 10.375196076848798, 108.158)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 10657, 7.849229854103383, 10.375196076848798, 109.736)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 10767, 7.8796612166396445, 10.375196076848798, 111.357)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 10879, 7.901487094867057, 10.375196076848798, 113.088)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 10985, 7.93612558406963, 10.375196076848798, 114.632)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 11095, 7.962622974038669, 10.375196076848798, 116.16)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 11197, 7.992925008800031, 10.375196076848798, 117.64)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7200, 11303, 8.027777172718526, 10.375196076848798, 119.218)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7300, 11387, 8.066553588439309, 8.285442312775947, 120.802)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7400, 11449, 8.097640095688904, 8.285442312775947, 122.224)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7500, 11503, 8.13352344468301, 8.285442312775947, 123.802)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7600, 11557, 8.16975150794297, 8.285442312775947, 125.432)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7700, 11623, 8.192781263886102, 8.285442312775947, 127.035)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7800, 11677, 8.216652438472897, 8.285442312775947, 128.552)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7900, 11727, 8.248342475905552, 8.285442312775947, 130.048)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8000, 11777, 8.268885388587586, 8.285442312775947, 131.629)
build optimizer
