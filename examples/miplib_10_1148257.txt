
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, M, k, var_A) = (10, 15, 1.0, 15.0, 1)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 193, 0.5998224218838928, 0.6731495504308073, 17.517)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 371, 0.5998494267604988, 0.6658263801187924, 34.331)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 559, 0.5999809456312601, 0.6656024527407561, 51.335)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 739, 0.6000061567132179, 0.6656024527407561, 68.685)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 905, 0.6003134955011241, 0.663988854359137, 85.533)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1093, 0.6003266521258758, 0.663988854359137, 102.649)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1245, 0.6004540862739229, 0.6631758639933656, 119.818)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1427, 0.6004667725669393, 0.6631758639933656, 136.766)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1611, 0.600483074957423, 0.6631758639933656, 154.109)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1789, 0.6005355604687316, 0.6631758639933656, 171.038)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 1979, 0.6005499790520008, 0.6631758639933656, 188.24)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2147, 0.6005726773199123, 0.6631758639933656, 205.664)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2293, 0.6006919530635044, 0.6631758639933656, 222.345)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2477, 0.600702767829082, 0.6631758639933656, 239.46)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2643, 0.6007175381366866, 0.6631758639933656, 256.574)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2803, 0.6007350449629938, 0.6631758639933656, 273.857)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2973, 0.6007570059583377, 0.6631758639933656, 291.372)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3159, 0.6007652204675161, 0.6631758639933656, 308.869)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3337, 0.6007825793969057, 0.6631758639933656, 326.298)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 3505, 0.6008148378664788, 0.6631758639933656, 343.622)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 3679, 0.6008254453847168, 0.6631758639933656, 360.981)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 3831, 0.6008710309829026, 0.6631758639933656, 378.331)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 3991, 0.6009036627939922, 0.6631758639933656, 395.878)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4175, 0.6009210788294931, 0.6631758639933656, 413.536)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 4361, 0.6009268046263161, 0.6631758639933656, 430.889)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 4535, 0.6009391220924829, 0.6631758639933656, 448.161)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 4689, 0.6009532347372264, 0.6631758639933656, 465.25)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 4865, 0.6009672270996421, 0.6631758639933656, 482.358)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5053, 0.6009719153032568, 0.6631758639933656, 499.63)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 5237, 0.6009772250334826, 0.6631758639933656, 516.951)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 5415, 0.6009833927004815, 0.6631758639933656, 534.338)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 5587, 0.600989540501679, 0.6631758639933656, 552.134)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 5755, 0.6010002223926724, 0.6631758639933656, 569.555)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 5925, 0.6010277436743139, 0.6631758639933656, 586.886)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 6105, 0.6010385344546914, 0.6631758639933656, 603.988)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 6275, 0.6010485210556891, 0.6630604819279045, 621.175)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 6425, 0.6010644373388025, 0.6630604819279045, 638.254)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 6565, 0.6011052505484981, 0.6630604819279045, 655.214)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 6723, 0.601124264981706, 0.6630604819279045, 672.452)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 6905, 0.6011307408570306, 0.6630604819279045, 689.958)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 7083, 0.6011372866713026, 0.6630604819279045, 707.175)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 7257, 0.6011461245268066, 0.6630604819279045, 724.846)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 7421, 0.6011568496476165, 0.6630604819279045, 742.068)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 7567, 0.6011733630828879, 0.6630604819279045, 759.109)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 7733, 0.6011828962856234, 0.6630604819279045, 776.112)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 7911, 0.6011890006908248, 0.6630604819279045, 793.216)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 8085, 0.6012000331836886, 0.6630604819279045, 810.297)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 8243, 0.6012119186745478, 0.6630604819279045, 827.135)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 8395, 0.6012227328166864, 0.6630604819279045, 844.182)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 8551, 0.6012357337463639, 0.6630604819279045, 861.49)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 8713, 0.6012528528136654, 0.6630604819279045, 878.923)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 8891, 0.6012620146431094, 0.6630604819279045, 896.037)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 9057, 0.6012718211670811, 0.6630604819279045, 912.991)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 9221, 0.6012811299449987, 0.6630604819279045, 929.968)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 9365, 0.6012944779059578, 0.6630604819279045, 946.766)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 9519, 0.6013085589759628, 0.6630604819279045, 963.686)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 9681, 0.6013163622847898, 0.6630604819279045, 980.807)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 9849, 0.6013244689878129, 0.6630604819279045, 997.944)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 10005, 0.6013342331113303, 0.6630604819279045, 1015.251)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 10169, 0.6013425570383393, 0.6630604819279045, 1032.49)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 10331, 0.6013519327031239, 0.6574644798984897, 1051.012)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 10493, 0.6013652539079121, 0.6574644798984897, 1068.373)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 10641, 0.6013745716416057, 0.6574644798984897, 1085.91)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 10797, 0.6013821789642266, 0.6574644798984897, 1103.34)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 10953, 0.6013898208274809, 0.6574644798984897, 1120.794)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 11113, 0.6014001148800158, 0.6574644798984897, 1138.096)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 11279, 0.6014086198000101, 0.6574644798984897, 1155.368)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 11449, 0.6014165945760113, 0.6574644798984897, 1172.611)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 11623, 0.601424901773375, 0.6574644798984897, 1189.659)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 11785, 0.6014311625286693, 0.6574644798984897, 1206.581)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 11945, 0.6014395219908788, 0.6573690940062172, 1223.917)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7200, 12097, 0.6014484392458057, 0.6573690940062172, 1241.011)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7300, 12249, 0.6014578371502174, 0.6573690940062172, 1258.304)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7400, 12415, 0.6014637542861156, 0.6573690940062172, 1275.624)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7500, 12595, 0.6014670959959088, 0.6573690940062172, 1292.869)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7600, 12763, 0.6014727299497238, 0.6572733592169736, 1310.128)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7700, 12947, 0.6014746348066475, 0.6572733592169736, 1327.57)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7800, 13119, 0.6014790919376615, 0.6572733592169736, 1344.819)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7900, 13293, 0.6014824689730638, 0.6572733592169736, 1362.347)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8000, 13469, 0.6014879452670305, 0.6572733592169736, 1379.815)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8100, 13635, 0.6014923563064759, 0.6572733592169736, 1397.444)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8200, 13805, 0.6014967216857842, 0.6572733592169736, 1415.187)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8300, 13975, 0.6015009704337038, 0.6572733592169736, 1432.606)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8400, 14141, 0.6015059494626167, 0.6572733592169736, 1449.887)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8500, 14309, 0.6015117004493513, 0.6572733592169736, 1467.197)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8600, 14467, 0.6015188692622149, 0.6572733592169736, 1484.226)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8700, 14633, 0.6015229793459115, 0.6572733592169736, 1501.582)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8800, 14799, 0.6015277649583044, 0.6572733592169736, 1518.826)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8900, 14967, 0.6015329353657431, 0.6572733592169736, 1536.276)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9000, 15121, 0.6015402155957315, 0.6572733592169736, 1553.656)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9100, 15277, 0.601544903222489, 0.6572733592169736, 1570.968)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9200, 15439, 0.6015499864847419, 0.6572733592169736, 1588.282)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9300, 15607, 0.601553262050626, 0.6572733592169736, 1605.65)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9400, 15775, 0.6015577029811607, 0.6572733592169736, 1623.064)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9500, 15945, 0.6015611572821491, 0.6572733592169736, 1640.592)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9600, 16107, 0.6015675676303426, 0.6572733592169736, 1657.984)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9700, 16259, 0.6015743246372232, 0.6572733592169736, 1675.155)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9800, 16411, 0.6015850153320421, 0.6572733592169736, 1692.353)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9900, 16551, 0.6015950322439617, 0.6572733592169736, 1709.356)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10000, 16697, 0.6016051454162104, 0.6572733592169736, 1726.59)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10100, 16847, 0.6016169631248722, 0.6572733592169736, 1743.661)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10200, 17013, 0.6016221360654113, 0.6572733592169736, 1760.925)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10300, 17175, 0.6016258273233464, 0.6572733592169736, 1778.14)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10400, 17349, 0.6016295511584686, 0.6572733592169736, 1795.326)
