
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, ns) = (5, 70, 10.0)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -18433.60752255711, Inf, 107.44)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -18433.60512799691, Inf, 218.442)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, -18433.60250425031, Inf, 327.149)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, -18433.59949475874, Inf, 436.051)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, -18433.597526783975, Inf, 533.489)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, -18433.596601702007, Inf, 631.013)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, -18433.59572780656, Inf, 720.698)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, -18433.594647990707, Inf, 807.304)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, -18433.5944256894, Inf, 893.508)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, -18433.593336068927, Inf, 981.228)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, -18433.59315381961, Inf, 1067.336)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, -18433.592781380525, Inf, 1153.33)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, -18433.592128129352, Inf, 1239.792)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, -18433.591255056846, Inf, 1325.748)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, -18433.59067156987, Inf, 1412.675)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, -18433.59023779613, Inf, 1500.971)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, -18433.589669841473, Inf, 1590.469)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, -18433.58896834869, Inf, 1677.056)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, -18433.587859442887, Inf, 1764.916)
