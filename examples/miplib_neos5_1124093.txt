
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(example, seed, num_v) = ("neos5", 1, 6)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -7.350331306957341, Inf, 2.466)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -7.176975920081022, Inf, 3.966)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, -7.1241442687135965, Inf, 5.511)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, -7.0757012783528515, Inf, 6.976)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, -7.03747350249114, Inf, 8.424)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, -6.997948513326036, Inf, 9.976)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, -6.963600497482147, Inf, 11.403)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, -6.942527942280915, Inf, 12.91)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, -6.920456911298974, Inf, 14.344)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, -6.905195848217503, Inf, 15.762)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, -6.888910462008192, Inf, 17.268)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, -6.877861654035344, Inf, 18.68)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, -6.864206301705676, Inf, 20.175)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, -6.8536325966163325, Inf, 21.61)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, -6.844518862227716, Inf, 23.027)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, -6.834658070854967, Inf, 24.521)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, -6.825389852770334, Inf, 25.934)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, -6.817587907349484, Inf, 27.429)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, -6.808977388188738, Inf, 28.863)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, -6.80018275836423, Inf, 30.296)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, -6.793144723611121, Inf, 31.793)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, -6.785533063842557, Inf, 33.222)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, -6.777480787297881, Inf, 34.64)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, -6.769642533423764, Inf, 36.133)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, -6.763001916568597, Inf, 37.559)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, -6.756423895551447, Inf, 39.046)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, -6.749795829703959, Inf, 40.481)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, -6.742919750131777, Inf, 41.903)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, -6.735978633716468, Inf, 43.4)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, -6.728999807808694, Inf, 44.825)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, -6.722875923655517, Inf, 46.236)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6401, -6.717488401103391, Inf, 47.746)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6601, -6.711537986085978, Inf, 49.168)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6801, -6.705934577868496, Inf, 50.662)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 7001, -6.699940479130625, Inf, 52.075)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 7201, -6.693607765958505, Inf, 53.493)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 7401, -6.687690901387267, Inf, 54.98)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 7601, -6.682043670231885, Inf, 56.393)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7801, -6.678426892663967, Inf, 57.799)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 8001, -6.672793441374273, Inf, 59.287)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 8201, -6.668022229674912, Inf, 60.694)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 8401, -6.6630287211034025, Inf, 62.097)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 8601, -6.657783455313223, Inf, 63.59)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 8801, -6.653371876553469, Inf, 64.98)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 9001, -6.648318505001984, Inf, 66.454)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 9201, -6.6437938746108145, Inf, 67.871)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 9401, -6.6399619687631235, Inf, 69.276)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 9601, -6.635867558145, Inf, 70.763)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 9801, -6.632647734915806, Inf, 72.166)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 10001, -6.628694137158537, Inf, 73.562)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 10201, -6.624751917112168, Inf, 75.05)
