
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension) = (4, 20)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, 5.2946683700467645, Inf, 5.23)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 5.379368785017773, Inf, 8.868)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 5.407182467669331, Inf, 12.693)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 5.429591057990688, Inf, 16.451)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 5.449300548281652, Inf, 20.25)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 5.467904968292584, Inf, 23.996)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 5.486728632692243, Inf, 27.717)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 5.495761274728628, Inf, 31.555)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, 5.508503979907915, Inf, 35.378)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, 5.515583449167378, Inf, 39.278)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, 5.523237622863203, Inf, 43.276)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, 5.528727801422791, Inf, 47.235)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, 5.534140434420918, Inf, 51.021)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, 5.538795590234067, Inf, 55.037)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, 5.543920417359063, Inf, 59.085)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, 5.549350111080489, Inf, 62.994)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, 5.554797081202534, Inf, 66.836)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3593, 5.561132545435037, 5.887234949382749, 70.667)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3749, 5.564858019520326, 5.837028341984558, 74.534)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 3887, 5.569343798806583, 5.837028341984558, 78.354)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4019, 5.573068038332185, 5.837028341984558, 82.214)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4155, 5.579555526161154, 5.837028341984558, 86.168)
(status, bnb_model.incumbent) = ("Optimal", 5.580431926551832)
