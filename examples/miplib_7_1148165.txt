
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, M, k, var_A) = (7, 5, 1.0, 5.0, 1)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 149, 0.5897300725601773, 0.6381830959157929, 7.467)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 301, 0.5934632538308489, 0.6302835154885138, 10.595)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 445, 0.5961235626273836, 0.6302835154885138, 13.465)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 561, 0.5973429594533597, 0.6302835154885138, 16.271)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 707, 0.5978281406391134, 0.6302835154885138, 19.195)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 833, 0.5987211298990665, 0.6302835154885138, 22.035)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 977, 0.5991506340221293, 0.6302835154885138, 24.925)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1087, 0.6012813739533098, 0.6302835154885138, 27.617)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1201, 0.6030112800717699, 0.6302835154885138, 30.38)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1333, 0.603380650351699, 0.6302835154885138, 33.178)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 1473, 0.6039496919181928, 0.6236465617892774, 35.996)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 1625, 0.6043490117985773, 0.6236465617892774, 38.779)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 1769, 0.6048247072537709, 0.6236465617892774, 41.565)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 1899, 0.6053745102086474, 0.6236465617892774, 44.333)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2039, 0.605688457677196, 0.6236465617892774, 47.116)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2185, 0.605899961294138, 0.6236465617892774, 49.922)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2329, 0.6060909772819465, 0.6236465617892774, 52.703)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 2451, 0.6065872620342001, 0.6236465617892774, 55.389)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 2571, 0.6069588787217465, 0.6236465617892774, 58.052)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 2693, 0.6074965652542602, 0.6236465617892774, 60.707)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 2813, 0.6077609003277623, 0.6236465617892774, 63.406)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 2941, 0.607917791181804, 0.6236465617892774, 66.076)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 3053, 0.6084664437948579, 0.6236465617892774, 68.727)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 3175, 0.6086793631924123, 0.6236465617892774, 71.411)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 3291, 0.6089154479356563, 0.6236465617892774, 74.069)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 3423, 0.6091264655331905, 0.6236465617892774, 76.797)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 3553, 0.6093621142113252, 0.6236465617892774, 79.484)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 3681, 0.6095958885160229, 0.6236465617892774, 82.201)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 3799, 0.6100227084373481, 0.6236465617892774, 84.889)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 3921, 0.6102653816117342, 0.6236465617892774, 87.593)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 4069, 0.6104358935452799, 0.6236465617892774, 90.395)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 4201, 0.6106760911590068, 0.6236465617892774, 93.143)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 4321, 0.6108884660428215, 0.6236465617892774, 95.857)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 4445, 0.61098801343846, 0.6236465617892774, 98.534)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 4579, 0.6112454360288967, 0.6236465617892774, 101.235)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 4683, 0.6119730645980272, 0.6236465617892774, 103.848)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 4789, 0.6122804123822816, 0.6236465617892774, 106.502)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 4905, 0.6125282511940798, 0.6236465617892774, 109.177)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 5013, 0.6130686728299473, 0.6236465617892774, 111.821)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 5109, 0.6133137400498291, 0.6236465617892774, 114.534)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 5201, 0.6138831981429603, 0.6236465617892774, 117.151)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 5287, 0.6141735471470944, 0.6236465617892774, 119.796)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 5415, 0.6144838937486022, 0.6236465617892774, 122.495)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 5503, 0.6147451447517457, 0.6236465617892774, 125.161)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 5591, 0.614917368001076, 0.6236465617892774, 127.826)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 5679, 0.6150653702161167, 0.6236465617892774, 130.533)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 5775, 0.6154146895218574, 0.6236465617892774, 133.195)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 5869, 0.6156241317965594, 0.6236465617892774, 135.845)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 5959, 0.6157564087523503, 0.6236465617892774, 138.517)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 6077, 0.6159001840795002, 0.6236465617892774, 141.197)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 6181, 0.6160409040596995, 0.6236465617892774, 143.897)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 6271, 0.6162536704805304, 0.6236465617892774, 146.517)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 6379, 0.6164530242083927, 0.6236465617892774, 149.198)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 6483, 0.616575888422867, 0.6236465617892774, 151.9)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 6595, 0.6166998985643712, 0.6236465617892774, 154.684)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 6699, 0.6167826094995319, 0.6236465617892774, 157.423)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 6803, 0.6169789636876375, 0.6236465617892774, 160.101)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 6875, 0.6172017912717642, 0.6236465617892774, 162.717)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 6967, 0.6173231262587533, 0.6236465617892774, 165.344)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 7075, 0.6174026120603111, 0.6236465617892774, 168.079)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 7179, 0.6175198060367489, 0.6236465617892774, 170.816)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 7297, 0.6175710685490592, 0.6236465617892774, 173.575)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 7421, 0.6176962700165971, 0.6236465617892774, 176.397)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 7537, 0.6178391349535748, 0.6236465617892774, 179.167)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 7623, 0.6179861882888856, 0.6236465617892774, 181.831)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 7729, 0.618088305609649, 0.6236465617892774, 184.536)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 7821, 0.6182294655762639, 0.6236465617892774, 187.216)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 7925, 0.6183489842453392, 0.6236465617892774, 189.928)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 8043, 0.6184328539578381, 0.6236465617892774, 192.676)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 8153, 0.6186004956188202, 0.6236465617892774, 195.415)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 8251, 0.6187175142562544, 0.6236465617892774, 198.12)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7200, 8345, 0.6190443605835744, 0.6236465617892774, 200.797)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7300, 8425, 0.6192601798115148, 0.6236465617892774, 203.432)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7400, 8509, 0.6193943642689858, 0.6236465617892774, 206.135)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7500, 8583, 0.6195493692837456, 0.6236465617892774, 208.79)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7600, 8689, 0.6196783587035994, 0.6236465617892774, 211.527)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7700, 8789, 0.6198216315616182, 0.6236465617892774, 214.188)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7800, 8869, 0.6200447590364025, 0.6236465617892774, 216.836)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7900, 8947, 0.6201456733815606, 0.6236465617892774, 219.559)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8000, 9031, 0.6202685542153992, 0.6236465617892774, 222.25)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8100, 9099, 0.62038526458239, 0.6236465617892774, 224.93)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8200, 9195, 0.6204453017849306, 0.6236465617892774, 227.692)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8300, 9283, 0.6205522065219031, 0.6236465617892774, 230.359)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8400, 9411, 0.6206726493172438, 0.6236465617892774, 233.157)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8500, 9517, 0.6208127634891365, 0.6236465617892774, 235.863)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8600, 9599, 0.6209093314683028, 0.6236465617892774, 238.566)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8700, 9681, 0.6210140675081611, 0.6236465617892774, 241.252)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8800, 9755, 0.6211076437903235, 0.6236465617892774, 243.967)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8900, 9795, 0.6212408846086238, 0.6236465617892774, 246.573)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9000, 9859, 0.6214155671725432, 0.6236465617892774, 249.2)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9100, 9935, 0.6216279928543273, 0.6236465617892774, 251.822)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9200, 10003, 0.6217843080211415, 0.6236465617892774, 254.41)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9300, 10071, 0.6218971392809025, 0.6236465617892774, 257.081)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9400, 10139, 0.6219948935190212, 0.6236465617892774, 259.736)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9500, 10221, 0.6220827267091106, 0.6236465617892774, 262.424)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9600, 10281, 0.6221739046960212, 0.6236465617892774, 265.161)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9700, 10327, 0.6223663361427321, 0.6236465617892774, 267.739)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9800, 10375, 0.622572660975233, 0.6236465617892774, 270.36)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9900, 10405, 0.6226467126320744, 0.6236465617892774, 272.998)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10000, 10449, 0.6227377696221864, 0.6236465617892774, 275.669)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10100, 10509, 0.6227997126098168, 0.6236465617892774, 278.365)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10200, 10549, 0.6228539175413313, 0.6236465617892774, 281.027)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10300, 10605, 0.6228900338625671, 0.6236465617892774, 283.722)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10400, 10659, 0.6229932798884447, 0.6236465617892774, 286.44)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10500, 10717, 0.6230432134218187, 0.6236465617892774, 289.14)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10600, 10775, 0.6231275410734302, 0.6236465617892774, 291.858)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10700, 10821, 0.6233449975523111, 0.6236465617892774, 294.469)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10800, 10859, 0.6235232941967674, 0.6236465617892774, 297.093)
