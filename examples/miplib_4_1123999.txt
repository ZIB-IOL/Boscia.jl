
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension) = (4, 22)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, 5.024300162678746, Inf, 5.144)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 5.0620883938049674, Inf, 9.309)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 5.112248417729721, Inf, 13.617)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 5.134269502221577, Inf, 18.015)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 5.143227453570938, Inf, 22.212)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 5.158579170409445, Inf, 26.579)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 5.168011532004622, Inf, 30.709)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 5.176524569117999, Inf, 35.188)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, 5.182497863566386, Inf, 39.664)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, 5.188382072005054, Inf, 44.029)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2195, 5.19512220864598, 5.341878716971279, 48.542)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2303, 5.204656036644623, 5.341878716971279, 53.039)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2407, 5.215255024515532, 5.341878716971279, 57.366)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2507, 5.219348009855964, 5.341878716971279, 61.796)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2609, 5.222369599312247, 5.341878716971279, 66.148)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2711, 5.230647755899178, 5.341878716971279, 70.627)
(status, bnb_model.incumbent) = ("Optimal", 5.233153359173945)
