
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (4, 90, "integer")
seed = 4
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -0.041401775479960365, Inf, 2.209)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 10.277679252572945, Inf, 3.146)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 14.924087408872127, Inf, 4.438)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 785, 16.390156192356518, 27.39022294872422, 5.645)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 901, 18.066414047454046, 27.39022294872422, 6.846)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1009, 18.954338639919715, 27.39022294872422, 8.077)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1115, 19.63270326836368, 27.39022294872422, 9.244)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1223, 20.529363051187588, 27.39022294872422, 10.33)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1325, 21.20636711467323, 27.39022294872422, 11.452)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1423, 21.542275934300065, 27.39022294872422, 12.578)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 1527, 22.065385985647687, 27.39022294872422, 13.626)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 1627, 22.569647886625997, 27.39022294872422, 14.735)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 1727, 22.9531439699031, 27.39022294872422, 15.845)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 1827, 23.347277088052355, 27.39022294872422, 16.918)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 1927, 23.759589986482908, 27.39022294872422, 17.954)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2023, 24.168271982261253, 27.39022294872422, 18.984)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2123, 24.466070755957713, 27.39022294872422, 20.028)
build optimizer
