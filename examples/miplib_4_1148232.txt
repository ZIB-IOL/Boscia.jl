
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, M, k, var_A) = (4, 15, 0.1, 15.0, 5)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, 0.2163261336117142, Inf, 27.273)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 0.21745524201698263, Inf, 51.585)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 0.21789803991677312, Inf, 75.581)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 0.21861274493881622, Inf, 100.043)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 0.21896532132453764, Inf, 124.252)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 0.21952309509497428, Inf, 148.462)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 0.2200792917175861, Inf, 172.653)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 0.2204675214497292, Inf, 196.843)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, 0.2207262436922503, Inf, 220.473)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, 0.22098293101325822, Inf, 243.198)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, 0.221447180070458, Inf, 266.224)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, 0.2217346189796477, Inf, 289.089)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, 0.22192420705436228, Inf, 311.833)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, 0.22209984150986092, Inf, 334.764)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, 0.22228363015492225, Inf, 357.817)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, 0.22247575972064623, Inf, 380.848)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, 0.22262369455840603, Inf, 403.83)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, 0.22279979439901512, Inf, 426.846)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, 0.2229256768043154, Inf, 449.84)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, 0.2230485995385647, Inf, 472.739)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, 0.22318494551393592, Inf, 495.751)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, 0.22332955520310446, Inf, 518.837)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, 0.22343389212370351, Inf, 541.778)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, 0.22353320071562408, Inf, 564.814)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, 0.2236314802162573, Inf, 587.773)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, 0.2237332993944962, Inf, 610.973)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, 0.22385096414665367, Inf, 634.202)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, 0.22396315603655356, Inf, 657.322)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, 0.22405311694321195, Inf, 681.785)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, 0.22415302262302605, Inf, 705.13)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, 0.22422873090916662, Inf, 728.649)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6401, 0.22430575613486436, Inf, 752.155)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6601, 0.2244181342811129, Inf, 775.435)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6801, 0.22449226858797222, Inf, 798.705)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 7001, 0.2245640877318919, Inf, 822.024)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 7201, 0.2246524020149511, Inf, 845.323)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 7401, 0.22471717757995102, Inf, 868.41)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 7601, 0.22477881587432544, Inf, 891.691)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7801, 0.2248616265462768, Inf, 915.009)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 8001, 0.22496175140287422, Inf, 938.264)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 8201, 0.2250298851459216, Inf, 961.5)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 8401, 0.22509788805926145, Inf, 984.731)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 8601, 0.22516151511208843, Inf, 1007.976)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 8801, 0.22522361111680067, Inf, 1031.316)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 9001, 0.22528452144098127, Inf, 1054.565)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 9201, 0.2253243997347936, Inf, 1077.848)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 9401, 0.22538115932038918, Inf, 1101.187)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 9601, 0.22545216932716666, Inf, 1124.307)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 9801, 0.2255152592306851, Inf, 1147.548)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 10001, 0.22557075537059518, Inf, 1170.673)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 10201, 0.22560951035448343, Inf, 1193.952)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 10401, 0.2256603694424441, Inf, 1217.129)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 10601, 0.22571934684027062, Inf, 1240.101)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 10801, 0.22576760457703016, Inf, 1263.231)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 11001, 0.22582478540464362, Inf, 1286.305)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 11201, 0.22587882607349652, Inf, 1309.475)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 11401, 0.2259148688579448, Inf, 1332.57)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 11601, 0.22595719956081795, Inf, 1355.698)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 11801, 0.22599971655853485, Inf, 1378.675)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 12001, 0.2260502051331773, Inf, 1401.778)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 12201, 0.22608962258359327, Inf, 1424.7)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 12401, 0.22613037801532204, Inf, 1447.73)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 12601, 0.2261696016033334, Inf, 1470.661)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 12801, 0.22620860538290039, Inf, 1493.532)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 13001, 0.22623726990658904, Inf, 1516.524)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 13201, 0.22628178891096257, Inf, 1539.606)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 13401, 0.22631188537052513, Inf, 1562.538)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 13601, 0.2263576842472251, Inf, 1585.381)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 13801, 0.22638742540595513, Inf, 1608.364)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 14001, 0.22643384722681503, Inf, 1631.353)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 14201, 0.22647451606916674, Inf, 1654.251)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7200, 14401, 0.22650969205352028, Inf, 1677.189)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7300, 14601, 0.22654995255894525, Inf, 1700.125)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7400, 14801, 0.22657419573297838, Inf, 1723.245)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7500, 15001, 0.2266119417495876, Inf, 1746.321)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7600, 15201, 0.2266542947808473, Inf, 1769.346)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7700, 15401, 0.22669458273394721, Inf, 1792.3)
