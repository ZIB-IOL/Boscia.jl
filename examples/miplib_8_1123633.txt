
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (8, 80, "integer")
seed = 8
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -0.6624126646607865, Inf, 2.161)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 0.195691571248917, Inf, 3.236)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 1.3360899270426954, Inf, 4.364)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 1.681497619142744, Inf, 5.664)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 2.0002497317621444, Inf, 6.764)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 2.3220712958497267, Inf, 7.929)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 2.5502444369760697, Inf, 9.013)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 2.8485861396238326, Inf, 10.176)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, 3.1274262044667167, Inf, 11.229)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, 3.2774141930969627, Inf, 12.364)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, 3.4269998628339664, Inf, 13.448)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, 3.5734226024801274, Inf, 14.543)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, 3.7079901551157075, Inf, 15.632)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, 3.825819379054698, Inf, 16.75)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, 3.936952363059269, Inf, 17.772)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, 4.044129922815198, Inf, 18.897)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, 4.186732628182843, Inf, 19.965)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, 4.278838574937802, Inf, 20.999)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, 4.4020814345388315, Inf, 22.096)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, 4.485626945826763, Inf, 23.096)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4177, 4.566596775880989, 9.531409367988344, 24.248)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4333, 4.639588433304403, 9.531409367988344, 25.275)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4491, 4.6958324745478865, 9.531409367988344, 26.394)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4649, 4.763582070891897, 9.531409367988344, 27.415)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 4815, 4.8351275441763075, 9.531409367988344, 28.546)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 4977, 4.891315001570851, 9.531409367988344, 29.593)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5137, 4.942139769715126, 9.531409367988344, 30.731)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5305, 5.016941962526292, 9.531409367988344, 31.746)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5459, 5.101130743265073, 9.531409367988344, 32.752)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 5603, 5.156187289465429, 9.531409367988344, 33.784)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 5743, 5.190394251970203, 9.531409367988344, 34.759)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 5891, 5.248813291095825, 9.531409367988344, 35.861)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6041, 5.304955704751267, 9.531409367988344, 36.886)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6183, 5.360024146763757, 9.531409367988344, 37.958)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 6333, 5.4103671410455885, 9.531409367988344, 38.932)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 6479, 5.461507682793029, 9.531409367988344, 39.948)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 6615, 5.508703182696472, 9.531409367988344, 41.041)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 6755, 5.5677260198301015, 9.531409367988344, 42.08)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 6899, 5.612519490504421, 9.531409367988344, 43.175)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 7043, 5.656810041579897, 9.531409367988344, 44.22)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 7183, 5.7009118232550815, 9.531409367988344, 45.299)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 7335, 5.742772623983572, 9.531409367988344, 46.346)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 7479, 5.777910193078355, 9.531409367988344, 47.359)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 7605, 5.811062870441915, 9.531409367988344, 48.414)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 7743, 5.852014111769418, 9.531409367988344, 49.476)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 7875, 5.885423162576211, 9.531409367988344, 50.548)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 8019, 5.918427225506393, 9.531409367988344, 51.573)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 8153, 5.947842620462651, 9.531409367988344, 52.673)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 8291, 5.981217201650179, 9.531409367988344, 53.679)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 8427, 6.010784308507551, 9.531409367988344, 54.669)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 8567, 6.042997767025739, 9.531409367988344, 55.742)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 8707, 6.077871868926585, 9.531409367988344, 56.745)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 8849, 6.100578069976036, 9.531409367988344, 57.859)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 8983, 6.1343055259229065, 9.531409367988344, 58.893)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 9119, 6.169654099246308, 9.531409367988344, 59.899)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 9257, 6.196949375482258, 9.531409367988344, 60.988)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 9393, 6.237265843033456, 9.531409367988344, 61.982)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 9541, 6.267972967502745, 9.531409367988344, 63.106)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 9673, 6.303613580961346, 9.531409367988344, 64.119)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 9803, 6.332449589770527, 9.531409367988344, 65.099)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 9929, 6.356553889604133, 9.531409367988344, 66.131)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 10067, 6.394676903262404, 9.531409367988344, 67.141)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 10191, 6.426995337894537, 9.531409367988344, 68.221)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 10309, 6.465693102622546, 9.531409367988344, 69.239)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 10443, 6.496653813165065, 9.531409367988344, 70.217)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 10561, 6.521056208144929, 9.531409367988344, 71.306)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 10687, 6.545280828684814, 9.531409367988344, 72.296)
build optimizer
