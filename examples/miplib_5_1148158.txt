
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, M, k, var_A) = (5, 5, 1.0, 5.0, 5)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 143, 0.2113082284130699, 0.3327356018643895, 7.705)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 289, 0.21274375381062333, 0.32611806610618693, 10.933)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 445, 0.21443557369939903, 0.32611806610618693, 13.988)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 601, 0.21530415664045766, 0.32611806610618693, 16.987)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 729, 0.21823920698335725, 0.27058378338832423, 19.864)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 867, 0.22016520943556445, 0.2705562812138304, 22.743)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 993, 0.2271872220813426, 0.2653917556331187, 25.491)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1145, 0.22774858537718365, 0.2653917556331187, 28.565)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1297, 0.2280865576830402, 0.2653917556331187, 31.65)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1451, 0.22911221812752577, 0.2653917556331187, 34.607)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 1605, 0.22968218609049118, 0.2653917556331187, 37.569)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 1771, 0.23003193630116825, 0.2653917556331187, 40.532)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 1931, 0.2303594747395013, 0.2653917556331187, 43.407)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2081, 0.23080419907386052, 0.2653917556331187, 46.263)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2207, 0.2344428654332668, 0.2653917556331187, 48.979)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2275, 0.23506218897730402, 0.2653917556331187, 51.784)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2363, 0.23651008413661057, 0.2653917556331187, 54.638)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 2459, 0.23698875973199449, 0.2653917556331187, 57.518)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 2577, 0.23736678020275542, 0.2653917556331187, 60.424)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 2673, 0.23801701379597362, 0.2653917556331187, 63.178)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 2751, 0.2394525852829079, 0.2653917556331187, 65.852)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 2827, 0.24045219010425053, 0.2653917556331187, 68.485)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 2937, 0.24228830139320848, 0.2653917556331187, 71.244)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 3043, 0.2441777727102312, 0.2653917556331187, 73.903)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 3153, 0.24564450206500488, 0.2653917556331187, 76.626)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 3241, 0.2468168625457736, 0.2653917556331187, 79.41)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 3329, 0.24788166905873082, 0.2653917556331187, 82.016)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 3419, 0.24862335666319488, 0.2653917556331187, 84.819)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 3507, 0.24912938150504482, 0.26174986795257144, 87.586)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 3587, 0.24967410780142832, 0.26174986795257144, 90.312)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 3683, 0.24997483452807012, 0.26174986795257144, 93.025)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 3777, 0.250573853632447, 0.26174986795257144, 95.707)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 3875, 0.2512885443938996, 0.26174986795257144, 98.371)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 3971, 0.2528153907072937, 0.26174986795257144, 100.922)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 4063, 0.2537537761539268, 0.26174986795257144, 103.466)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 4157, 0.25463863344741205, 0.26174986795257144, 106.091)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 4221, 0.25583793431490837, 0.26174986795257144, 108.785)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 4275, 0.256468527115545, 0.26174986795257144, 111.501)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 4321, 0.2572240492751693, 0.26174986795257144, 114.232)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 4353, 0.2580884665800805, 0.26174986795257144, 116.955)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 4401, 0.2589711323857984, 0.26174986795257144, 119.704)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 4451, 0.25970954880310426, 0.26174986795257144, 122.473)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 4509, 0.2601817797811635, 0.26174986795257144, 125.283)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 4545, 0.260810574190408, 0.26174986795257144, 128.021)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 4571, 0.2613748213914582, 0.26174986795257144, 130.707)
