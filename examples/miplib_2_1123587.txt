
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (2, 60, "integer")
seed = 2
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -0.33968486922354546, Inf, 1.931)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 0.47190907645468727, Inf, 2.85)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 0.8191738109798642, Inf, 3.702)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 1.0913664954510387, Inf, 4.618)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 1.286479039317369, Inf, 5.433)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 1.4935039870885896, Inf, 6.292)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1393, 1.6544960939142745, 5.486683368786075, 7.106)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1591, 1.8281913205238032, 5.486683368786075, 7.995)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1783, 1.930521418842704, 5.486683368786075, 8.787)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1971, 2.049172767970337, 5.486683368786075, 9.564)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2147, 2.115920826820944, 5.486683368786075, 10.408)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2325, 2.2058541496415014, 5.486683368786075, 11.2)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2507, 2.2693403453920657, 5.486683368786075, 12.028)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2683, 2.3331673553314207, 5.486683368786075, 12.81)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2861, 2.3971350699609686, 5.486683368786075, 13.606)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3033, 2.4566612836881747, 5.486683368786075, 14.466)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3205, 2.5088519185860436, 5.486683368786075, 15.249)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3293, 2.5790773154629303, 2.6138727871343734, 16.1)
build optimizer
