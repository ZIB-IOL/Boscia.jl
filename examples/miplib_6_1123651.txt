
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (6, 90, "integer")
seed = 6
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -0.12418886802628365, Inf, 2.226)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 399, 6.7599574208630555, 26.921269578282843, 3.234)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 557, 10.847376981973865, 23.662117368383885, 4.574)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 695, 12.252735130281435, 23.662117368383885, 5.791)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 809, 12.942243997417025, 23.662117368383885, 6.992)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 931, 13.676959500770202, 23.662117368383885, 8.199)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1037, 14.17049672702765, 23.662117368383885, 9.359)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1141, 14.643724466935348, 23.662117368383885, 10.427)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1247, 15.289828175201848, 23.662117368383885, 11.634)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1357, 15.906679819841786, 23.662117368383885, 12.845)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 1459, 16.305119153446284, 23.662117368383885, 13.953)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 1563, 16.855671869448106, 23.662117368383885, 15.028)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 1667, 17.1409157907646, 23.662117368383885, 16.206)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 1773, 17.56176053335021, 23.662117368383885, 17.376)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 1877, 17.941439332557408, 23.662117368383885, 18.522)
build optimizer
