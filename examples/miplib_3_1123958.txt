
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension) = (3, 18)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, 2.90229985209909, Inf, 4.304)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 2.9725972408840198, Inf, 7.967)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 2.995943759616299, Inf, 11.498)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 3.0210477827563977, Inf, 15.094)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 3.0310458453496243, Inf, 18.625)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 3.0440424229449543, Inf, 22.132)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 3.0534643713040324, Inf, 25.732)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 3.0630600895903153, Inf, 29.216)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, 3.0691413644302523, Inf, 32.819)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, 3.0758608866633073, Inf, 36.499)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, 3.088258700025719, Inf, 40.245)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, 3.094596297206606, Inf, 43.759)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, 3.0972840561326267, Inf, 47.288)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, 3.1011011290604973, Inf, 50.918)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, 3.108068934794394, Inf, 54.515)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, 3.111961173829472, Inf, 58.207)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, 3.1152237897012345, Inf, 61.793)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, 3.1176796194202123, Inf, 65.64)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, 3.1235828072852967, Inf, 69.258)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, 3.126881926166013, Inf, 72.84)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, 3.129736673818426, Inf, 76.509)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, 3.13476381131426, Inf, 80.076)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, 3.1395483848989434, Inf, 83.914)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, 3.143141859315567, Inf, 87.711)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, 3.1469471384474006, Inf, 91.361)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, 3.1512333436773927, Inf, 95.041)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, 3.1551045354093015, Inf, 98.726)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, 3.1580300358514157, Inf, 102.373)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, 3.1606438020385936, Inf, 106.178)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, 3.1628807036895235, Inf, 109.974)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6197, 3.1652163115823893, 3.474522528288195, 113.822)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6313, 3.1671727641417955, 3.377986302576825, 117.452)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6431, 3.1695198243853193, 3.377986302576825, 121.256)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6545, 3.1717105198633315, 3.377986302576825, 124.949)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 6661, 3.174046552166448, 3.377986302576825, 128.735)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 6767, 3.1774233846432547, 3.377986302576825, 132.371)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 6875, 3.1789968772736636, 3.377986302576825, 136.046)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 6987, 3.1807829895583444, 3.377986302576825, 139.786)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7097, 3.1828472303417032, 3.377986302576825, 143.435)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 7203, 3.18582596856561, 3.377986302576825, 147.139)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 7311, 3.1874621885992815, 3.377986302576825, 150.813)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 7415, 3.18886142001012, 3.377986302576825, 154.582)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 7521, 3.1904160298438904, 3.377986302576825, 158.155)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 7627, 3.1928046386939295, 3.377986302576825, 162.039)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 7735, 3.1948168631279112, 3.377986302576825, 165.866)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 7835, 3.1960453022585686, 3.377986302576825, 169.788)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 7947, 3.1976173096513727, 3.377986302576825, 173.631)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 8057, 3.199468741771023, 3.377986302576825, 177.507)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 8161, 3.201166578657286, 3.377986302576825, 181.16)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 8271, 3.2029623855605105, 3.377986302576825, 184.986)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 8379, 3.205394426403732, 3.377986302576825, 188.811)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 8485, 3.20668250914971, 3.377986302576825, 192.547)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 8591, 3.2089604760454025, 3.377986302576825, 196.249)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 8697, 3.21040703803452, 3.377986302576825, 200.075)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 8803, 3.21276975362157, 3.374443191743312, 203.89)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 8905, 3.2136806861997544, 3.374443191743312, 207.565)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 9011, 3.2144403352361954, 3.374443191743312, 211.361)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 9117, 3.215481018666606, 3.374443191743312, 215.135)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 9221, 3.2170891499292322, 3.368080482070603, 218.755)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 9327, 3.2184529570636844, 3.368080482070603, 222.438)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 9431, 3.2196278028045353, 3.368080482070603, 226.176)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 9537, 3.2208341155734326, 3.368080482070603, 229.889)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 9643, 3.2220007018412216, 3.368080482070603, 233.682)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 9749, 3.223244718627828, 3.368080482070603, 237.551)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 9851, 3.22445934036848, 3.368080482070603, 241.304)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 9951, 3.226316043381659, 3.368080482070603, 245.011)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 10057, 3.227574719716587, 3.368080482070603, 248.919)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 10163, 3.2285217691303827, 3.368080482070603, 252.77)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 10265, 3.2303665846990826, 3.368080482070603, 256.466)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 10369, 3.2317311831517306, 3.368080482070603, 260.349)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 10471, 3.232605178911242, 3.368080482070603, 264.031)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7200, 10571, 3.2334991179848496, 3.368080482070603, 267.751)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7300, 10673, 3.2346785265417775, 3.368080482070603, 271.543)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7400, 10775, 3.235721063923482, 3.368080482070603, 275.183)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7500, 10875, 3.2369042873213334, 3.368080482070603, 278.786)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7600, 10975, 3.238060505870842, 3.368080482070603, 282.519)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7700, 11077, 3.239139099086674, 3.368080482070603, 286.139)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7800, 11181, 3.240321305668686, 3.368080482070603, 289.976)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7900, 11287, 3.2410746679778066, 3.368080482070603, 293.917)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8000, 11389, 3.2419415404085288, 3.368080482070603, 297.611)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8100, 11489, 3.24258302317388, 3.368080482070603, 301.433)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8200, 11593, 3.243999628117703, 3.368080482070603, 305.137)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8300, 11693, 3.2451745812531354, 3.368080482070603, 308.875)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8400, 11795, 3.246157433428503, 3.368080482070603, 312.626)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8500, 11897, 3.2472635209814813, 3.368080482070603, 316.342)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8600, 12001, 3.2480262515877203, 3.368080482070603, 320.205)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8700, 12101, 3.248936231928297, 3.368080482070603, 323.932)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8800, 12203, 3.249773016702596, 3.368080482070603, 327.725)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8900, 12303, 3.2505990041643376, 3.368080482070603, 331.418)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9000, 12403, 3.2512884102287765, 3.368080482070603, 335.358)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9100, 12503, 3.2520668365864407, 3.368080482070603, 338.999)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9200, 12603, 3.253061713260358, 3.368080482070603, 342.648)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9300, 12703, 3.253900774505584, 3.368080482070603, 346.314)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9400, 12803, 3.254756373119104, 3.368080482070603, 349.945)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9500, 12905, 3.255416031288873, 3.368080482070603, 353.637)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9600, 13005, 3.2562451167905304, 3.368080482070603, 357.446)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9700, 13105, 3.256705170592788, 3.368080482070603, 361.392)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9800, 13207, 3.2576925731104347, 3.368080482070603, 365.26)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9900, 13307, 3.258966479918627, 3.368080482070603, 368.966)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10000, 13407, 3.259951192245588, 3.368080482070603, 372.605)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10100, 13509, 3.2606359321604694, 3.368080482070603, 376.269)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10200, 13613, 3.261263823158533, 3.368080482070603, 380.137)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10300, 13713, 3.2618118739903954, 3.368080482070603, 383.825)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10400, 13817, 3.2624001738611703, 3.368080482070603, 387.54)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10500, 13917, 3.26334560414221, 3.368080482070603, 390.958)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10600, 14017, 3.263820005066659, 3.368080482070603, 394.498)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10700, 14117, 3.264555884372104, 3.368080482070603, 398.033)
(status, bnb_model.incumbent) = ("Optimal", 3.2649694211023452)
