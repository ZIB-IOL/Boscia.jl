
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (3, 55, "integer")
seed = 3
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, 0.09369917432221936, Inf, 1.854)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 1.6533743093431001, Inf, 2.688)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 2.6260705743226453, Inf, 3.562)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 2.9418595270906267, Inf, 4.345)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 3.328408630662081, Inf, 5.103)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 3.618438805423909, Inf, 5.894)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 3.9092425403191546, Inf, 6.782)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 4.109509561429369, Inf, 7.54)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1735, 4.299799652513851, 7.494318911780521, 8.295)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1869, 4.4412024056480774, 7.494318911780521, 9.207)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 1993, 4.609294296767319, 7.494318911780521, 9.961)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2127, 4.722030990096409, 7.494318911780521, 10.696)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2257, 4.854623497612256, 7.494318911780521, 11.43)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2379, 4.962971322263922, 7.494318911780521, 12.308)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2497, 5.076454639078321, 7.494318911780521, 13.049)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2609, 5.227197750865611, 7.494318911780521, 13.792)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2727, 5.360263208515991, 7.494318911780521, 14.52)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 2847, 5.429258319676951, 7.494318911780521, 15.362)
build optimizer
