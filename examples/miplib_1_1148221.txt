
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, M, k, var_A) = (1, 15, 1.0, 15.0, 1)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 187, 0.6161798504037201, 0.6687832081631297, 19.243)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 375, 0.6162285855554122, 0.667183746411773, 36.186)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 557, 0.616309344677606, 0.667183746411773, 53.523)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 737, 0.6163518913550834, 0.6671768661026236, 70.524)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 915, 0.616424842689373, 0.6671768661026236, 87.7)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1093, 0.6164631852251415, 0.6671768661026236, 104.744)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1271, 0.6164945324837348, 0.6669855593418204, 121.58)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1453, 0.6165288140671126, 0.6669838642851385, 138.778)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1627, 0.6165633965845846, 0.6669838642851385, 156.056)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1795, 0.6165942945709325, 0.6669838642851385, 173.02)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 1965, 0.6166238636354162, 0.6669838642851385, 190.038)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2143, 0.6166485787743033, 0.6669507563431829, 206.967)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2317, 0.6166773146749231, 0.6669507563431829, 223.925)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2489, 0.6166973267481887, 0.6669507563431829, 241.102)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2651, 0.6167240655540325, 0.6669507563431829, 258.089)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2815, 0.6167451517971245, 0.6669507563431829, 275.166)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2983, 0.6167647181013394, 0.6648167878877291, 292.162)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3161, 0.6167826058071514, 0.6648167878877291, 309.312)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3331, 0.6168020304716989, 0.6648167878877291, 326.398)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 3495, 0.6168245916741606, 0.6648167878877291, 343.364)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 3657, 0.6168468451558135, 0.6648167878877291, 360.342)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 3811, 0.6168667515722175, 0.6648167878877291, 377.248)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 3975, 0.6168847376103052, 0.6648167878877291, 394.274)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4151, 0.6168961870845948, 0.6648167878877291, 411.392)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 4325, 0.6169057253267949, 0.6648167878877291, 428.468)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 4493, 0.616916316467687, 0.6648167878877291, 445.337)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 4659, 0.6169285331398362, 0.6648167878877291, 462.336)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 4827, 0.6169425749751533, 0.6648167878877291, 479.28)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 4999, 0.6169523308000052, 0.6648167878877291, 496.376)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 5159, 0.6169650488277126, 0.6648167878877291, 513.09)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 5321, 0.6169827289911365, 0.6648167878877291, 529.881)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 5485, 0.616993483296844, 0.6620888965600515, 546.924)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 5651, 0.6170085682051821, 0.6620888965600515, 564.102)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 5819, 0.6170165786941926, 0.6620581233408482, 581.197)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 5979, 0.6170250137838464, 0.6620581233408482, 597.964)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 6139, 0.6170338742372468, 0.6620581233408482, 614.769)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 6311, 0.6170411683882279, 0.6620581233408482, 631.772)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 6467, 0.6170490919910376, 0.6620581233408482, 648.508)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 6639, 0.6170559752473054, 0.6620581233408482, 665.621)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 6797, 0.617065914892258, 0.6620581233408482, 682.341)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 6967, 0.617071679965033, 0.6620581233408482, 699.351)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 7123, 0.6170816877678037, 0.6620581233408482, 716.044)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 7275, 0.6170945598969175, 0.6620581233408482, 732.698)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 7443, 0.6171040448979908, 0.6620581233408482, 749.661)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 7589, 0.6171175442917719, 0.6620581233408482, 766.271)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 7759, 0.617126454711645, 0.6620581233408482, 783.286)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 7917, 0.6171348512773716, 0.6620581233408482, 800.196)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 8085, 0.6171402885403843, 0.6620581233408482, 817.174)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 8247, 0.6171467594695544, 0.6620581233408482, 833.874)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 8415, 0.6171522471281937, 0.6620581233408482, 850.476)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 8577, 0.6171586525525862, 0.6620581233408482, 867.362)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 8743, 0.6171635226410038, 0.6620581233408482, 884.417)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 8911, 0.6171687688896388, 0.6620581233408482, 901.283)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 9079, 0.6171738415302941, 0.6620581233408482, 918.113)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 9237, 0.6171786626403134, 0.6620581233408482, 936.101)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 9397, 0.6171843049537238, 0.6620581233408482, 953.185)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 9563, 0.617189830428022, 0.6620581233408482, 970.316)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 9727, 0.6171945549379579, 0.6620581233408482, 987.376)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 9881, 0.6172024771819468, 0.6620581233408482, 1004.327)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 10051, 0.6172083275727539, 0.6620581233408482, 1021.445)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 10215, 0.6172113670653947, 0.6620581233408482, 1038.497)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 10359, 0.6172235817983853, 0.6620581233408482, 1055.109)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 10531, 0.6172264290144952, 0.6620581233408482, 1072.141)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 10691, 0.6172355263898227, 0.6620581233408482, 1089.175)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 10837, 0.6172436050271601, 0.6620581233408482, 1105.988)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 10993, 0.6172518290714145, 0.6620581233408482, 1122.909)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 11159, 0.6172565415289911, 0.6620581233408482, 1140.079)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 11315, 0.6172620063664831, 0.6620581233408482, 1157.059)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 11471, 0.6172678722607418, 0.6620581233408482, 1174.058)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 11627, 0.6172750121008163, 0.6620581233408482, 1190.968)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 11791, 0.617278198655771, 0.6620581233408482, 1208.002)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7200, 11951, 0.6172851323221229, 0.6620581233408482, 1224.823)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7300, 12111, 0.6172885751488674, 0.6620581233408482, 1241.856)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7400, 12275, 0.6172923781827077, 0.6620581233408482, 1258.934)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7500, 12439, 0.6172955050402235, 0.6620581233408482, 1275.951)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7600, 12605, 0.6173001727275959, 0.6620581233408482, 1292.987)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7700, 12765, 0.6173055326941178, 0.6620581233408482, 1309.876)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7800, 12931, 0.6173092332245759, 0.6620581233408482, 1326.769)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7900, 13089, 0.6173129513598796, 0.6620581233408482, 1343.692)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8000, 13255, 0.6173170130012192, 0.6620581233408482, 1360.816)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8100, 13413, 0.6173216342756211, 0.6620581233408482, 1377.574)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8200, 13579, 0.617325404838736, 0.6620581233408482, 1394.637)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8300, 13737, 0.6173299413637766, 0.6620581233408482, 1411.391)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8400, 13901, 0.6173325814682775, 0.6620581233408482, 1428.399)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8500, 14051, 0.6173392312454166, 0.6620581233408482, 1445.124)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8600, 14215, 0.6173433383239169, 0.6620581233408482, 1462.196)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8700, 14381, 0.6173477124336808, 0.6620581233408482, 1478.996)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8800, 14541, 0.6173517998581246, 0.6620581233408482, 1495.83)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8900, 14703, 0.6173564535861431, 0.6620581233408482, 1512.751)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9000, 14857, 0.617361991067967, 0.6620581233408482, 1529.475)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9100, 15033, 0.6173646256516654, 0.6620581233408482, 1546.596)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9200, 15183, 0.6173699031375888, 0.6620581233408482, 1563.284)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9300, 15337, 0.6173755289315846, 0.6620581233408482, 1580.195)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9400, 15491, 0.6173807017054341, 0.6620581233408482, 1596.881)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9500, 15665, 0.6173831315187106, 0.6620581233408482, 1614.005)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9600, 15823, 0.6173876114264295, 0.6620581233408482, 1630.888)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9700, 15977, 0.6173926821833111, 0.6620581233408482, 1647.922)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9800, 16139, 0.6173959120199113, 0.6620581233408482, 1664.925)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9900, 16289, 0.6174011148865283, 0.6620581233408482, 1681.774)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10000, 16459, 0.6174049817697734, 0.6620581233408482, 1698.975)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10100, 16625, 0.6174079328348362, 0.6620581233408482, 1715.902)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10200, 16779, 0.6174119658529533, 0.6620581233408482, 1732.651)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10300, 16941, 0.6174153035462131, 0.6620581233408482, 1749.506)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10400, 17109, 0.6174185985514092, 0.6620581233408482, 1766.649)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10500, 17263, 0.6174217280062197, 0.6620581233408482, 1783.474)
