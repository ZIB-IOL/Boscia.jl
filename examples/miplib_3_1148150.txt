
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, M, k, var_A) = (3, 5, 1.0, 5.0, 5)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 153, 0.3183110356892277, 0.4266257428624938, 6.647)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 291, 0.3232078370174533, 0.4266257428624938, 9.558)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 441, 0.3261350470113675, 0.4266257428624938, 12.338)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 585, 0.32944561031025704, 0.4266257428624938, 15.19)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 721, 0.3327512432036266, 0.40762189957786304, 18.057)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 851, 0.33588614698803115, 0.40762189957786304, 20.862)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 999, 0.3372131468754004, 0.40762189957786304, 23.574)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1125, 0.3403187341835513, 0.40762189957786304, 26.102)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1277, 0.34103753078072413, 0.40762189957786304, 28.732)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1405, 0.3434100770661889, 0.3907008657340567, 31.298)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 1549, 0.345141689742366, 0.3907008657340567, 33.889)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 1691, 0.3465693285036441, 0.3907008657340567, 36.417)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 1825, 0.3479192493367349, 0.3907008657340567, 38.959)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 1973, 0.3490359302139542, 0.3907008657340567, 41.576)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2097, 0.3505427414108094, 0.3907008657340567, 44.059)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2235, 0.35156888618639004, 0.3907008657340567, 46.62)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2365, 0.3530588499795201, 0.3907008657340567, 49.159)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 2481, 0.35473941397097253, 0.3907008657340567, 51.652)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 2611, 0.3556760128429728, 0.3907008657340567, 54.193)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 2727, 0.35675384516416186, 0.3907008657340567, 56.638)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 2837, 0.35825058722232983, 0.3907008657340567, 58.999)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 2967, 0.35891151431655294, 0.3907008657340567, 61.359)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 3073, 0.3604293479007612, 0.3907008657340567, 63.695)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 3191, 0.36115255771084076, 0.3907008657340567, 66.052)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 3315, 0.36172891577088884, 0.3907008657340567, 68.417)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 3439, 0.362711265385279, 0.3907008657340567, 70.813)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 3553, 0.3637494987698737, 0.3907008657340567, 73.122)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 3679, 0.3647035687175647, 0.3907008657340567, 75.539)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 3803, 0.3654600426467334, 0.3907008657340567, 77.947)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 3917, 0.36667666899823237, 0.3907008657340567, 80.308)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 4037, 0.36732810425170015, 0.3907008657340567, 82.724)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 4159, 0.3684378727294739, 0.3907008657340567, 85.061)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 4277, 0.3692921476496177, 0.3907008657340567, 87.426)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 4397, 0.36999065184427626, 0.3907008657340567, 89.782)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 4525, 0.3705255074240822, 0.3907008657340567, 92.187)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 4641, 0.3711135385456086, 0.3907008657340567, 94.523)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 4763, 0.37153714562629253, 0.3907008657340567, 96.891)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 4865, 0.3720372518086008, 0.3907008657340567, 99.263)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 4967, 0.3726582483371301, 0.3907008657340567, 101.588)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 5089, 0.3731419312959334, 0.3907008657340567, 103.969)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 5209, 0.37349746147104135, 0.3907008657340567, 106.328)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 5305, 0.3739910937255464, 0.3907008657340567, 108.678)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 5415, 0.3745950802529179, 0.3907008657340567, 111.081)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 5495, 0.37508772068008245, 0.3907008657340567, 113.404)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 5589, 0.37545733719583885, 0.3907008657340567, 115.776)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 5691, 0.37576212239871454, 0.3907008657340567, 118.125)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 5769, 0.3764608979168172, 0.3907008657340567, 120.483)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 5857, 0.3770375685612693, 0.3907008657340567, 122.823)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 5925, 0.3776265633668339, 0.3907008657340567, 125.177)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 6007, 0.37840334969601136, 0.3907008657340567, 127.53)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 6111, 0.3787609389403448, 0.3907008657340567, 129.921)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 6175, 0.3796894225815648, 0.3907008657340567, 132.25)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 6233, 0.38025562171510774, 0.3907008657340567, 134.602)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 6315, 0.3809063210341737, 0.3907008657340567, 136.963)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 6383, 0.3816188145149303, 0.3907008657340567, 139.297)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 6459, 0.3823255325497914, 0.3907008657340567, 141.63)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 6517, 0.38288682698331655, 0.3907008657340567, 143.977)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 6587, 0.3833212332748808, 0.3907008657340567, 146.35)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 6647, 0.3838465066521393, 0.3907008657340567, 148.727)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 6731, 0.38439159225408215, 0.3907008657340567, 151.09)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 6797, 0.38491575925441407, 0.3907008657340567, 153.448)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 6869, 0.3852005830240936, 0.3907008657340567, 155.797)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 6943, 0.3857175180715666, 0.3907008657340567, 158.132)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 7009, 0.38594643141343365, 0.3907008657340567, 160.478)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 7077, 0.386390012881504, 0.3907008657340567, 162.861)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 7145, 0.386775757683374, 0.3907008657340567, 165.214)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 7207, 0.38712550222111325, 0.3907008657340567, 167.562)
