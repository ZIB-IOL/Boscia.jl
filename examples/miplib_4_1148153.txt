
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, M, k, var_A) = (4, 5, 1.0, 5.0, 1)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 171, 0.5972041597068174, 0.6551435776818252, 7.894)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 315, 0.5999809680292614, 0.6488454832338644, 11.198)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 475, 0.6023555020603379, 0.6478610247850641, 14.41)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 633, 0.6040384328661598, 0.6478610247850641, 17.618)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 787, 0.6055540748857298, 0.6460852090524951, 20.685)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 921, 0.6067960706276445, 0.6460852090524951, 23.612)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1039, 0.6084518903889242, 0.6381062396417717, 26.528)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1161, 0.6093883858644753, 0.6381062396417717, 29.467)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1291, 0.6103611265554099, 0.6381062396417717, 32.446)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1421, 0.611206252232686, 0.6381062396417717, 35.358)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 1549, 0.6117517658521022, 0.6381062396417717, 38.29)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 1675, 0.6124011387782431, 0.6381062396417717, 41.212)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 1811, 0.6128766643836361, 0.6381062396417717, 44.141)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 1929, 0.6136956513900884, 0.6381062396417717, 47.031)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2051, 0.6141321318169717, 0.6381062396417717, 49.929)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2179, 0.6145711137979957, 0.6372009474016159, 52.951)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2311, 0.614873983677154, 0.6372009474016159, 55.89)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 2445, 0.6151455662680476, 0.6372009474016159, 58.731)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 2583, 0.6154173610657275, 0.6372009474016159, 61.602)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 2723, 0.6158685190142934, 0.6372009474016159, 64.444)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 2871, 0.6162285328907056, 0.6372009474016159, 67.34)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 3015, 0.6166235684665352, 0.6372009474016159, 70.205)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 3131, 0.6170877788896825, 0.6372009474016159, 73.005)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 3257, 0.6173936358710568, 0.6372009474016159, 75.823)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 3379, 0.6177142817746121, 0.6372009474016159, 78.592)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 3511, 0.6180333451427068, 0.6372009474016159, 81.487)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 3645, 0.6182902249772395, 0.6372009474016159, 84.326)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 3779, 0.618535070120635, 0.6372009474016159, 87.155)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 3907, 0.6189346927582439, 0.6372009474016159, 89.941)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 4033, 0.6192149947990148, 0.6372009474016159, 92.757)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 4161, 0.6194325522926252, 0.6372009474016159, 95.577)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 4279, 0.6197869077667754, 0.6372009474016159, 98.357)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 4405, 0.6200239556005079, 0.6372009474016159, 101.223)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 4531, 0.620210743689268, 0.6372009474016159, 104.004)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 4663, 0.620516327027782, 0.6372009474016159, 106.818)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 4803, 0.6207557341028859, 0.6372009474016159, 109.645)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 4945, 0.620956155869152, 0.6372009474016159, 112.534)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 5083, 0.6212315300501463, 0.6372009474016159, 115.361)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 5217, 0.6214593028241393, 0.6372009474016159, 118.157)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 5347, 0.6219182086407832, 0.6372009474016159, 120.971)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 5485, 0.6221649265299447, 0.6372009474016159, 123.792)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 5585, 0.6224731749468493, 0.630597996697847, 126.586)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 5681, 0.6226934358952595, 0.630597996697847, 129.381)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 5775, 0.6229359678025833, 0.630597996697847, 132.161)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 5877, 0.6232523162168871, 0.630597996697847, 134.975)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 5989, 0.6234346613205661, 0.630597996697847, 137.801)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 6093, 0.6236171749350765, 0.630597996697847, 140.641)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 6217, 0.6238169035367032, 0.630597996697847, 143.477)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 6321, 0.6240206401863839, 0.630597996697847, 146.292)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 6419, 0.6242672405051485, 0.630597996697847, 149.105)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 6509, 0.6245176285954465, 0.630597996697847, 151.964)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 6611, 0.6246693695251472, 0.630597996697847, 154.85)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 6701, 0.6248421172870763, 0.630597996697847, 157.645)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 6787, 0.6249972441870572, 0.630597996697847, 160.482)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 6859, 0.6251658233679249, 0.630597996697847, 163.269)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 6945, 0.6253323190681884, 0.630597996697847, 166.126)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 7027, 0.6255083163906796, 0.630597996697847, 168.947)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 7115, 0.6256837909153196, 0.630597996697847, 171.804)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 7211, 0.6258808733369149, 0.630597996697847, 174.632)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 7311, 0.6260699779868552, 0.630597996697847, 177.455)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 7395, 0.6262145035485162, 0.630597996697847, 180.309)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 7499, 0.6262961128264934, 0.630597996697847, 183.154)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 7593, 0.6265454572089645, 0.630597996697847, 186.009)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 7661, 0.6267497875700122, 0.630597996697847, 188.83)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 7727, 0.6269450666722216, 0.630597996697847, 191.692)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 7795, 0.6270932883276301, 0.630597996697847, 194.543)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 7853, 0.6272846544863873, 0.630597996697847, 197.415)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 7911, 0.6275179749059348, 0.630597996697847, 200.298)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 7949, 0.6277645694861163, 0.630597996697847, 203.148)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 7985, 0.6279760512188969, 0.630597996697847, 205.963)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 8033, 0.6282139534739133, 0.630597996697847, 208.767)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7200, 8067, 0.6284223151737324, 0.630597996697847, 211.558)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7300, 8099, 0.6286192990110044, 0.630597996697847, 214.319)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7400, 8139, 0.6289107975035546, 0.630597996697847, 217.113)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7500, 8175, 0.6291316358885781, 0.630597996697847, 219.873)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7600, 8219, 0.6293104049582022, 0.630597996697847, 222.672)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7700, 8259, 0.6295255162895329, 0.630597996697847, 225.462)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7800, 8301, 0.6297125731535343, 0.630597996697847, 228.254)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7900, 8339, 0.629975025479336, 0.630597996697847, 231.084)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8000, 8381, 0.6301395168142283, 0.630597996697847, 233.877)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8100, 8419, 0.6302910921362636, 0.630597996697847, 236.715)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8200, 8459, 0.6304140572794527, 0.630597996697847, 239.504)
