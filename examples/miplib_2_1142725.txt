
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, ns) = (2, 70, 1.0)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -2888.852350628665, Inf, 38.408)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -2888.817574605727, Inf, 76.898)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, -2888.781746841251, Inf, 115.066)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, -2888.7672762114944, Inf, 152.905)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, -2888.7450466005985, Inf, 190.692)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, -2888.7260033867296, Inf, 228.348)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, -2888.7107437485265, Inf, 265.956)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, -2888.696353624487, Inf, 303.969)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, -2888.68332933209, Inf, 341.114)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, -2888.6644735591394, Inf, 378.832)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, -2888.65379809338, Inf, 416.902)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, -2888.6429780677922, Inf, 454.438)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, -2888.6367708998314, Inf, 491.596)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, -2888.630352912874, Inf, 528.649)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, -2888.6186533584882, Inf, 565.474)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, -2888.606776464343, Inf, 602.969)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, -2888.6004416598207, Inf, 640.765)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, -2888.597169338299, Inf, 677.528)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, -2888.5931050379127, Inf, 714.13)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, -2888.5870316631285, Inf, 750.984)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, -2888.581630572241, Inf, 788.541)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, -2888.57696049805, Inf, 825.562)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, -2888.5706766539874, Inf, 862.774)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, -2888.563399996771, Inf, 900.15)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, -2888.5609303235547, Inf, 937.523)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, -2888.5585586288207, Inf, 974.363)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, -2888.5551068501177, Inf, 1011.375)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, -2888.5499954037778, Inf, 1048.468)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, -2888.544841058281, Inf, 1085.023)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, -2888.54272030984, Inf, 1122.077)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, -2888.539271498878, Inf, 1158.549)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6401, -2888.5356021318053, Inf, 1194.988)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6601, -2888.532746976385, Inf, 1232.745)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6801, -2888.5288584529944, Inf, 1269.451)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 7001, -2888.5257572346704, Inf, 1306.767)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 7201, -2888.5213598584123, Inf, 1344.358)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 7401, -2888.5172308048686, Inf, 1381.721)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 7601, -2888.5152014454825, Inf, 1418.512)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7801, -2888.5119163265117, Inf, 1455.803)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 8001, -2888.5083269098004, Inf, 1492.979)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 8201, -2888.501806963284, Inf, 1530.239)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 8401, -2888.496551127843, Inf, 1567.731)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 8601, -2888.494742885554, Inf, 1605.475)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 8801, -2888.4919346410106, Inf, 1641.675)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 9001, -2888.489769473322, Inf, 1678.762)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 9201, -2888.488765030261, Inf, 1715.375)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 9401, -2888.486311365452, Inf, 1752.285)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 9601, -2888.48278147118, Inf, 1789.148)
