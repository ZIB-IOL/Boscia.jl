
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (10, 120, "integer")
seed = 10
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -0.1940482486619449, Inf, 2.812)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 0.9983957644279599, Inf, 3.988)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 14.026115461190788, Inf, 5.519)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 15.856467703790159, Inf, 7.451)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 961, 17.092459722236676, 32.47303785627092, 9.32)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1089, 17.884561388360734, 32.47303785627092, 11.068)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1209, 18.319871281895615, 32.47303785627092, 12.774)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1319, 18.862050151858003, 32.47303785627092, 14.467)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1427, 19.49736014723406, 32.47303785627092, 16.153)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1539, 20.019470376116562, 32.47303785627092, 17.78)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 1641, 20.536808646952924, 32.47303785627092, 19.304)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 1745, 20.96734664641643, 32.47303785627092, 20.934)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 1845, 21.366411555258583, 32.47303785627092, 22.475)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 1947, 21.688820693262397, 32.47303785627092, 24.028)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2051, 21.86829638025948, 32.47303785627092, 25.598)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2151, 22.182092116257987, 32.47303785627092, 27.202)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2251, 22.455333837855605, 32.47303785627092, 28.777)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 2351, 22.61730668471856, 32.47303785627092, 30.332)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 2451, 22.860922315289017, 32.47303785627092, 31.75)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 2553, 23.163212730845007, 32.47303785627092, 33.167)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 2653, 23.318842067997192, 32.47303785627092, 34.555)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 2753, 23.543588229116455, 32.47303785627092, 36.008)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 2853, 23.81412042807753, 32.47303785627092, 37.398)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 2953, 23.968102487232184, 32.47303785627092, 38.821)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 3053, 24.11144050694594, 32.47303785627092, 40.202)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 3153, 24.323722886840944, 32.47303785627092, 41.625)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 3255, 24.517031325995973, 32.47303785627092, 42.927)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 3355, 24.69809889026566, 32.47303785627092, 44.313)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 3455, 24.885264782913097, 32.47303785627092, 45.727)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 3555, 25.00782843085001, 32.47303785627092, 47.108)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 3655, 25.20034215916664, 32.47303785627092, 48.454)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 3757, 25.42407411160333, 32.47303785627092, 49.777)
build optimizer
