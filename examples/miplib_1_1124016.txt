
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension) = (1, 24)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, 1.8954072214375837, Inf, 5.667)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 1.928175021600919, Inf, 10.24)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 1.9485486120205253, Inf, 14.731)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 1.9591658805547048, Inf, 19.21)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 1.9698344791434241, Inf, 23.62)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 1.9817534530329357, Inf, 28.059)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 1.9873100474004282, Inf, 32.688)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 1.9919326592654867, Inf, 37.284)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, 1.9956251340772695, Inf, 41.733)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1967, 1.9991983972409504, 2.122056706895144, 46.403)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2113, 2.0034804418081626, 2.122056706895144, 50.91)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2241, 2.0067280890195316, 2.122056706895144, 55.547)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2371, 2.009499091012051, 2.122056706895144, 60.098)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2495, 2.0116326851689488, 2.122056706895144, 64.538)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2613, 2.01450874639744, 2.067223153102714, 69.077)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2717, 2.0172570353868466, 2.067223153102714, 73.68)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2815, 2.0195847077158473, 2.0565345768778096, 78.196)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 2913, 2.0210539746219203, 2.0565345768778096, 82.775)
(status, bnb_model.incumbent) = ("Optimal", 2.0339481191186666)
