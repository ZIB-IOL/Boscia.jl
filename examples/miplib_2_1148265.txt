
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, M, k, var_A) = (2, 20, 1.0, 20.0, 1)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 193, 0.6293401349670981, 0.6800784662897089, 35.032)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 385, 0.629347128660715, 0.6800733608883979, 72.079)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 571, 0.6293582165618411, 0.679330204260211, 109.486)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 755, 0.629367581135222, 0.6793069311028986, 146.94)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 939, 0.62937513564396, 0.6792922452417124, 184.274)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1121, 0.6293822480911462, 0.6792917569535939, 221.673)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1301, 0.6293914621661, 0.6792778616715482, 258.899)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1485, 0.6293969287506413, 0.6792773974341717, 296.071)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1669, 0.6294014661500539, 0.6790511092332084, 333.578)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1855, 0.6294069213757915, 0.6790475402816891, 371.094)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2027, 0.6294140240173407, 0.6790475402816891, 407.991)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2207, 0.6294194263111155, 0.6790475402816891, 445.347)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2389, 0.6294228374149571, 0.6790475402816891, 482.904)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2569, 0.6294263784968338, 0.6789925374431482, 519.815)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2757, 0.6294283883289562, 0.6789925374431482, 556.955)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2939, 0.6294319336771571, 0.6789925374431482, 594.428)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3117, 0.6294357359411342, 0.6789925374431482, 631.896)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3295, 0.6294394099194466, 0.6789925374431482, 669.201)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3475, 0.6294452849397937, 0.6789925374431482, 706.548)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 3655, 0.6294472433974445, 0.6789925374431482, 743.93)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 3833, 0.629450277114384, 0.6789925374431482, 780.851)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4013, 0.6294523585552894, 0.6789925374431482, 817.619)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4197, 0.62945470853264, 0.6788532309714143, 855.021)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4377, 0.6294572061644185, 0.6788532309714143, 891.867)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 4557, 0.6294590372273219, 0.6788532309714143, 929.133)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 4741, 0.6294618419165018, 0.6788532309714143, 966.499)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 4925, 0.6294639850542217, 0.6788532309714143, 1003.74)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5097, 0.6294686292108481, 0.6788532309714143, 1040.845)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5271, 0.629469929737645, 0.6788532309714143, 1077.768)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 5453, 0.6294727928055509, 0.6788532309714143, 1114.925)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 5637, 0.6294745749971027, 0.6788532309714143, 1153.205)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 5817, 0.6294761059321202, 0.6788532309714143, 1190.311)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 5995, 0.6294784082200126, 0.6788532309714143, 1227.198)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6175, 0.629480373528449, 0.6788532309714143, 1264.396)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 6353, 0.6294815514273195, 0.6788532309714143, 1301.686)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 6531, 0.6294833378244374, 0.6788532309714143, 1339.02)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 6709, 0.629485763348931, 0.6788532309714143, 1376.608)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 6893, 0.6294870883974149, 0.6788532309714143, 1413.947)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7069, 0.6294889955696785, 0.6788532309714143, 1451.028)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 7251, 0.6294906385651093, 0.6788532309714143, 1488.564)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 7423, 0.6294928186537443, 0.6788532309714143, 1525.632)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 7595, 0.6294955965307705, 0.6788532309714143, 1562.439)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 7781, 0.6294972017765934, 0.6788532309714143, 1599.856)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 7963, 0.6294981951484367, 0.6788532309714143, 1637.273)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 8139, 0.6294999789881445, 0.6788532309714143, 1674.384)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 8321, 0.6295016306672652, 0.6788532309714143, 1711.288)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 8499, 0.6295030304907996, 0.6788532309714143, 1748.55)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 8683, 0.6295038340343183, 0.6753407425249682, 1785.839)
