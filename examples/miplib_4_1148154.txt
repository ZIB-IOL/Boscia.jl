
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, M, k, var_A) = (4, 5, 1.0, 5.0, 5)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 171, 0.21502649934807083, 0.3759322739598284, 8.1)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 321, 0.22130520782513555, 0.3457712775882842, 11.73)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 477, 0.2244187920897806, 0.3345696585829393, 15.153)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 633, 0.22810429456298387, 0.3345696585829393, 18.593)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 773, 0.23124261372192245, 0.32058221052727237, 21.869)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 921, 0.23350390027943468, 0.32058221052727237, 25.104)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1047, 0.23599135150004913, 0.32058221052727237, 28.336)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1179, 0.23801160092661838, 0.32058221052727237, 31.573)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1315, 0.24034889232217715, 0.32058221052727237, 34.801)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1435, 0.24179224381098785, 0.32058221052727237, 37.921)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 1563, 0.24360394218505788, 0.32058221052727237, 41.047)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 1687, 0.24560808884209218, 0.32058221052727237, 44.219)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 1805, 0.2466057424754277, 0.32058221052727237, 47.299)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 1937, 0.2477273944594689, 0.32058221052727237, 50.458)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2067, 0.24858008785058824, 0.32058221052727237, 53.559)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2209, 0.24953291682105994, 0.312811428625951, 56.696)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2337, 0.2505014065938538, 0.312811428625951, 59.694)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 2475, 0.2512112133272304, 0.312811428625951, 62.698)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 2605, 0.25195168753746666, 0.312811428625951, 65.656)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 2729, 0.2527803091303192, 0.312811428625951, 68.596)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 2859, 0.25340383787391735, 0.312811428625951, 71.551)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 2987, 0.25420607923430566, 0.312811428625951, 74.486)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 3107, 0.25474613540489394, 0.312811428625951, 77.413)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 3225, 0.2553409210283463, 0.312811428625951, 80.347)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 3357, 0.25582963595808655, 0.312811428625951, 83.315)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 3487, 0.25627594068838955, 0.312811428625951, 86.276)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 3621, 0.25671814384481995, 0.312811428625951, 89.228)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 3755, 0.25743403598273235, 0.312811428625951, 92.22)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 3879, 0.25799227239632333, 0.312811428625951, 95.178)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 4003, 0.2584582560953719, 0.312811428625951, 98.133)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 4139, 0.2588830532965397, 0.312811428625951, 101.141)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 4269, 0.259573705732437, 0.312811428625951, 104.095)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 4417, 0.2601636829838436, 0.312811428625951, 107.105)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 4545, 0.26080690500028963, 0.312811428625951, 110.028)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 4671, 0.2615611265772253, 0.312811428625951, 112.995)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 4803, 0.26232011573626063, 0.312811428625951, 115.958)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 4925, 0.2630213440890997, 0.312811428625951, 118.872)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 5039, 0.2640760558314821, 0.312811428625951, 121.788)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 5143, 0.26490301230644153, 0.28843564107130365, 124.707)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 5257, 0.26560754193007907, 0.28843564107130365, 127.666)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 5383, 0.2660779320177864, 0.28843564107130365, 130.629)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 5493, 0.26665820893219555, 0.28843564107130365, 133.58)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 5585, 0.26724253675997356, 0.28843564107130365, 136.524)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 5703, 0.26767422023712883, 0.28843564107130365, 139.489)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 5789, 0.26833056691941004, 0.28843564107130365, 142.451)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 5899, 0.26873218389311143, 0.28843564107130365, 145.427)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 5989, 0.2691656388681376, 0.28843564107130365, 148.383)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 6091, 0.2696275339952421, 0.28843564107130365, 151.349)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 6185, 0.2700339410975572, 0.28843564107130365, 154.367)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 6281, 0.2705253586644261, 0.28843564107130365, 157.336)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 6391, 0.27093829272854, 0.28843564107130365, 160.291)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 6493, 0.27128197250190605, 0.28843564107130365, 163.279)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 6585, 0.27160391667990025, 0.28843564107130365, 166.238)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 6683, 0.27205519652981436, 0.28843564107130365, 169.211)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 6789, 0.2724978322121444, 0.28843564107130365, 172.182)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 6889, 0.2729571708774473, 0.28843564107130365, 175.165)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 7005, 0.2732675841908263, 0.28843564107130365, 178.175)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 7111, 0.27366759710220123, 0.28843564107130365, 181.143)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 7201, 0.2740226708515096, 0.28843564107130365, 184.14)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 7299, 0.27450729454274947, 0.28843564107130365, 187.123)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 7381, 0.2752454865460547, 0.28843564107130365, 190.095)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 7467, 0.2755313852473966, 0.28843564107130365, 193.084)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 7543, 0.2758560365861568, 0.28843564107130365, 196.078)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 7631, 0.2761438300365392, 0.28843564107130365, 199.072)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 7715, 0.27651744634914566, 0.28843564107130365, 202.079)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 7797, 0.277059523204033, 0.28843564107130365, 205.08)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 7891, 0.2773992002505986, 0.28843564107130365, 208.06)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 7969, 0.27780035646524726, 0.28843564107130365, 211.053)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 8065, 0.27806705626235756, 0.28843564107130365, 214.057)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 8149, 0.27837146629422144, 0.28843564107130365, 217.085)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 8209, 0.2788954202079239, 0.28843564107130365, 220.095)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7200, 8257, 0.2793219706780654, 0.28843564107130365, 223.054)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7300, 8305, 0.27976200898624, 0.28843564107130365, 226.054)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7400, 8379, 0.2800979063894187, 0.28843564107130365, 229.068)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7500, 8421, 0.2806757870766824, 0.28843564107130365, 232.054)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7600, 8479, 0.281252237766447, 0.28843564107130365, 235.027)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7700, 8537, 0.28176624421671004, 0.28843564107130365, 238.019)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7800, 8573, 0.2822193648456121, 0.28843564107130365, 240.986)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7900, 8635, 0.2826163947813727, 0.28843564107130365, 243.973)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8000, 8695, 0.2829707815807714, 0.28843564107130365, 246.917)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8100, 8733, 0.28349793090732434, 0.28843564107130365, 249.789)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8200, 8793, 0.2839604277573251, 0.28843564107130365, 252.708)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8300, 8839, 0.2844632758466402, 0.28843564107130365, 255.598)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8400, 8885, 0.28486056393218606, 0.28843564107130365, 258.527)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8500, 8911, 0.2856959036330954, 0.28843564107130365, 261.423)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8600, 8951, 0.28614319779652175, 0.28843564107130365, 264.353)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8700, 8999, 0.2864766159358726, 0.28843564107130365, 267.266)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8800, 9025, 0.2868393857422631, 0.28843564107130365, 270.18)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8900, 9059, 0.28753638368008366, 0.28843564107130365, 273.113)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9000, 9093, 0.2880670154004084, 0.28843564107130365, 275.99)
