
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, ns) = (1, 50, 5.0)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -2731.734452340883, Inf, 14.969)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -2731.726026971178, Inf, 28.105)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, -2731.71483752797, Inf, 41.31)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, -2731.7091346892357, Inf, 54.46)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, -2731.706336042197, Inf, 67.499)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, -2731.703931948432, Inf, 80.436)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, -2731.6977202974317, Inf, 93.938)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, -2731.6897144230775, Inf, 106.833)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, -2731.6884603300946, Inf, 119.798)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, -2731.686605146023, Inf, 132.81)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, -2731.685076533192, Inf, 145.708)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, -2731.683469129977, Inf, 158.752)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, -2731.679765900889, Inf, 172.065)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, -2731.6791443758643, Inf, 184.909)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, -2731.677492185481, Inf, 197.859)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, -2731.676098958361, Inf, 210.914)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, -2731.67399350431, Inf, 223.982)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, -2731.670847735313, Inf, 237.118)
