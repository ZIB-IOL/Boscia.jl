
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, ns) = (3, 70, 1.0)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -25897.59502960511, Inf, 46.781)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -25897.192196487944, Inf, 90.752)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, -25896.97786065721, Inf, 134.58)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, -25896.77407151615, Inf, 178.098)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, -25896.665457111212, Inf, 221.613)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, -25896.564700967287, Inf, 265.1)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, -25896.470816225443, Inf, 308.616)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, -25896.39311088384, Inf, 352.065)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, -25896.322257573323, Inf, 395.785)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, -25896.26420752674, Inf, 439.439)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, -25896.22917156144, Inf, 482.926)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, -25896.176309336166, Inf, 525.888)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, -25896.135319983612, Inf, 569.374)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, -25896.09254929271, Inf, 612.442)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, -25896.056582550686, Inf, 655.382)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, -25896.01419424556, Inf, 698.681)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, -25895.978531015564, Inf, 741.699)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, -25895.9457084492, Inf, 784.927)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, -25895.912864008496, Inf, 827.903)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, -25895.870828581425, Inf, 870.982)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, -25895.832820392578, Inf, 914.022)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, -25895.801825750626, Inf, 956.914)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, -25895.772511200543, Inf, 999.873)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, -25895.7400264369, Inf, 1042.856)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, -25895.715716407532, Inf, 1086.082)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, -25895.69254911868, Inf, 1129.235)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, -25895.67133888337, Inf, 1172.443)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, -25895.642854531347, Inf, 1215.747)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, -25895.621653807026, Inf, 1259.218)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, -25895.59192387921, Inf, 1302.679)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, -25895.572044117856, Inf, 1345.606)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6401, -25895.55337874921, Inf, 1388.709)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6601, -25895.545022363385, Inf, 1431.868)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6801, -25895.527033869763, Inf, 1475.044)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 7001, -25895.50228599616, Inf, 1518.08)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 7201, -25895.491101755244, Inf, 1561.154)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 7401, -25895.473572257008, Inf, 1603.98)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 7601, -25895.45287538973, Inf, 1646.838)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7801, -25895.430704231712, Inf, 1689.551)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 8001, -25895.411831270503, Inf, 1732.782)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 8201, -25895.394152755296, Inf, 1775.432)
