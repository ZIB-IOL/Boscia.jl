
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(example, seed, num_v) = ("ran14x18-disj-8", 1, 5)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -305.26759148210226, Inf, 24.241)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -304.6834298458651, Inf, 47.88)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, -304.38041690459914, Inf, 70.979)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, -304.1465552783589, Inf, 94.155)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, -303.8674764236819, Inf, 116.74)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, -303.67046563052344, Inf, 139.754)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, -303.51446813021084, Inf, 162.882)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, -303.3669502963183, Inf, 185.944)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, -303.26092860671986, Inf, 209.517)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, -303.09860233120145, Inf, 232.43)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, -302.9982486754586, Inf, 255.118)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, -302.93471524428963, Inf, 277.968)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, -302.8578823708098, Inf, 301.28)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, -302.79269051968646, Inf, 323.835)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, -302.70626275431044, Inf, 346.436)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, -302.61459219837633, Inf, 369.623)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, -302.5687393452978, Inf, 393.017)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, -302.53222768463723, Inf, 415.594)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, -302.49240428092395, Inf, 437.9)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, -302.4557363453516, Inf, 460.433)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, -302.42820273618366, Inf, 483.308)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, -302.3955684982915, Inf, 505.977)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, -302.3496235528244, Inf, 528.858)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, -302.2969508209271, Inf, 550.965)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, -302.2702958075601, Inf, 572.755)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, -302.2508291521822, Inf, 594.644)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, -302.22128845027646, Inf, 616.835)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, -302.19361347858967, Inf, 639.191)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, -302.16382472673104, Inf, 661.518)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, -302.14336395648377, Inf, 683.558)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, -302.12480254420075, Inf, 705.325)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6401, -302.1076352450388, Inf, 726.853)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6601, -302.09633659568533, Inf, 748.721)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6801, -302.0835244181608, Inf, 770.707)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 7001, -302.0658797440228, Inf, 792.523)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 7201, -302.05232938843056, Inf, 815.15)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 7401, -302.0330026994935, Inf, 837.173)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 7601, -302.0118321039616, Inf, 859.559)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7801, -301.99396607500114, Inf, 881.641)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 8001, -301.9781537136194, Inf, 903.139)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 8201, -301.95819500095735, Inf, 924.677)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 8401, -301.9464073823307, Inf, 946.326)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 8601, -301.9348307707771, Inf, 967.989)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 8801, -301.92172805159726, Inf, 989.953)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 9001, -301.905171534, Inf, 1012.431)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 9201, -301.8967181972944, Inf, 1034.153)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 9401, -301.884526068519, Inf, 1055.787)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 9601, -301.86934230360265, Inf, 1078.142)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 9801, -301.85716969487515, Inf, 1101.041)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 10001, -301.8430145173899, Inf, 1122.521)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 10201, -301.8332150214805, Inf, 1144.49)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 10401, -301.82298049648125, Inf, 1166.776)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 10601, -301.8115880840058, Inf, 1189.019)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 10801, -301.8008681211207, Inf, 1211.09)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 11001, -301.78552654806634, Inf, 1233.184)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 11201, -301.77794090881343, Inf, 1255.11)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 11401, -301.7703630821597, Inf, 1277.444)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 11601, -301.76220070348216, Inf, 1299.747)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 11801, -301.75182140943474, Inf, 1321.888)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 12001, -301.7407548025257, Inf, 1343.806)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 12201, -301.73207328580395, Inf, 1366.026)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 12401, -301.72152950407946, Inf, 1387.972)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 12601, -301.71220411666485, Inf, 1410.632)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 12801, -301.70297174626336, Inf, 1433.152)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 13001, -301.6933174063105, Inf, 1455.511)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 13201, -301.6853926108479, Inf, 1477.653)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 13401, -301.67524144477045, Inf, 1500.055)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 13601, -301.66632471304297, Inf, 1521.825)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 13801, -301.6585681692516, Inf, 1543.579)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 14001, -301.65202074362304, Inf, 1565.379)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 14201, -301.6424723378517, Inf, 1586.598)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7200, 14401, -301.6352052952211, Inf, 1608.813)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7300, 14601, -301.62170714562103, Inf, 1630.828)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7400, 14801, -301.6093689445345, Inf, 1653.02)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7500, 15001, -301.60089925498386, Inf, 1674.602)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7600, 15201, -301.5939948113356, Inf, 1696.423)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7700, 15401, -301.58603979376954, Inf, 1718.576)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7800, 15601, -301.57676952921906, Inf, 1740.052)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7900, 15801, -301.56872733578876, Inf, 1761.896)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8000, 16001, -301.5561690985906, Inf, 1784.168)
