
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, ns) = (2, 90, 5.0)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -4017.787498281132, Inf, 132.941)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -4017.7765559500235, Inf, 295.973)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, -4017.7737070125427, Inf, 454.894)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, -4017.771563795877, Inf, 612.244)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, -4017.766490649725, Inf, 773.9)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, -4017.765142045328, Inf, 930.626)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, -4017.7633784673767, Inf, 1091.01)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, -4017.759868110788, Inf, 1253.302)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, -4017.756794577862, Inf, 1419.781)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, -4017.7544866844987, Inf, 1579.687)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, -4017.752313894031, Inf, 1741.928)
