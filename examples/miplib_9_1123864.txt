
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (9, 90, "mixed")
seed = 9
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -4.800702312644545, Inf, 2.459)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -4.3988125106377325, Inf, 3.98)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, -4.135349096024118, Inf, 5.412)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, -3.954609365043916, Inf, 6.803)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, -3.7805089203645665, Inf, 8.25)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, -3.662435811189451, Inf, 9.679)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, -3.5842273778253313, Inf, 11.059)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, -3.489470633509768, Inf, 12.465)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, -3.4146710404385696, Inf, 13.883)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, -3.3449105281297395, Inf, 15.225)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, -3.2830449156329884, Inf, 16.65)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, -3.2265008524951244, Inf, 18.048)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, -3.1592026586320334, Inf, 19.42)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, -3.1089876110041765, Inf, 20.842)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, -3.0714159149260345, Inf, 22.257)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, -3.030394653190903, Inf, 23.613)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, -2.994649537694336, Inf, 25.031)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, -2.952150109331431, Inf, 26.416)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, -2.9163268255872827, Inf, 27.776)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, -2.8831379870924345, Inf, 29.211)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, -2.8443003736263712, Inf, 30.595)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, -2.8059902949514717, Inf, 31.937)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, -2.7766251359278007, Inf, 33.324)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, -2.7461512032133455, Inf, 34.674)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, -2.7269885216791967, Inf, 36.087)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, -2.7047019032755215, Inf, 37.471)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, -2.6749144456019156, Inf, 38.825)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, -2.649271694909199, Inf, 40.246)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, -2.6175534446579123, Inf, 41.65)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, -2.593632499490709, Inf, 43.005)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, -2.571831102208956, Inf, 44.416)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6401, -2.549488598695429, Inf, 45.74)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6601, -2.531387025906695, Inf, 47.141)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6801, -2.511791339062672, Inf, 48.533)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 7001, -2.4947230974857795, Inf, 49.862)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 7201, -2.4749551358071025, Inf, 51.244)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 7401, -2.455558172124849, Inf, 52.645)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 7601, -2.437210001842533, Inf, 53.968)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7801, -2.420671159954878, Inf, 55.383)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 8001, -2.406618269086677, Inf, 56.753)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 8201, -2.391006860403832, Inf, 58.141)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 8401, -2.378467802592791, Inf, 59.551)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 8601, -2.367564353935766, Inf, 60.908)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 8801, -2.3530063062967272, Inf, 62.253)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 9001, -2.3385510870085815, Inf, 63.571)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 9201, -2.325303035719988, Inf, 64.953)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 9401, -2.3148491773862063, Inf, 66.311)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 9601, -2.300785993544582, Inf, 67.646)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 9801, -2.285833038418477, Inf, 69.01)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 10001, -2.272042168860558, Inf, 70.311)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 10201, -2.2581625510957695, Inf, 71.72)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 10401, -2.245293932570104, Inf, 73.057)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 10601, -2.23160408809549, Inf, 74.416)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 10801, -2.2181981779538837, Inf, 75.785)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 11001, -2.2057242221672926, Inf, 77.115)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 11201, -2.191913320707101, Inf, 78.516)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 11401, -2.1795236629357686, Inf, 79.871)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 11601, -2.1667580767449848, Inf, 81.255)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 11801, -2.154917865680698, Inf, 82.579)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 11975, -2.1448867289446736, -0.5213913283885666, 83.943)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 12137, -2.1353472369352495, -0.5213913283885666, 85.365)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 12289, -2.1228263257960327, -0.5213913283885666, 86.676)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 12445, -2.1115838143039847, -0.5213913283885666, 88.095)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 12607, -2.0994953670516825, -0.5213913283885666, 89.415)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 12747, -2.0884401726251074, -0.5213913283885666, 90.796)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 12905, -2.078338644504097, -0.5213913283885666, 92.092)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 13043, -2.066902864310535, -0.5213913283885666, 93.467)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 13187, -2.0592952413354744, -0.5213913283885666, 94.795)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 13323, -2.047608307603078, -0.5213913283885666, 96.159)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 13465, -2.038205399192936, -0.5213913283885666, 97.443)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 13627, -2.0287394164443042, -0.714781897021982, 98.794)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7200, 13769, -2.0197972092554557, -0.714781897021982, 100.092)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7300, 13921, -2.0089357506924643, -0.714781897021982, 101.443)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7400, 14069, -1.999415071175853, -0.714781897021982, 102.764)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7500, 14213, -1.9884158059517134, -0.714781897021982, 104.144)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7600, 14353, -1.9796515806928456, -0.714781897021982, 105.516)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7700, 14497, -1.9705563901762757, -0.714781897021982, 106.779)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7800, 14623, -1.9621195674228131, -0.714781897021982, 108.215)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7900, 14755, -1.9546528306415674, -0.714781897021982, 109.541)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8000, 14887, -1.9456806391966077, -0.714781897021982, 111.14)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8100, 15013, -1.9367913368629435, -0.714781897021982, 112.447)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8200, 15149, -1.9288436631575883, -0.714781897021982, 114.054)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8300, 15285, -1.9219191466614551, -0.714781897021982, 115.422)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8400, 15417, -1.9153396792584554, -0.714781897021982, 116.736)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8500, 15549, -1.9054499426658562, -0.714781897021982, 118.093)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8600, 15687, -1.897565008363608, -0.714781897021982, 119.444)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8700, 15791, -1.8916978615373174, -1.447070385731557, 120.796)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8800, 15883, -1.8822609366131489, -1.447070385731557, 122.099)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8900, 15977, -1.8745405126620958, -1.447070385731557, 123.445)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9000, 16067, -1.8647904711944534, -1.447070385731557, 124.768)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9100, 16151, -1.8551793226252187, -1.447070385731557, 126.11)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9200, 16243, -1.8437210234838848, -1.447070385731557, 127.383)
build optimizer
