
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (9, 115, "integer")
seed = 9
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, 0.0070486396018128285, Inf, 2.716)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 1.849386795631219, Inf, 3.809)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 19.936305452876606, Inf, 5.329)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 717, 22.171429303008207, 39.99128195211594, 7.084)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 837, 23.78089193962425, 39.99128195211594, 8.704)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 941, 24.41116594881378, 39.99128195211594, 10.399)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1041, 25.34290253733663, 39.99128195211594, 12.026)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1147, 25.988735812698923, 39.99128195211594, 13.618)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1249, 26.60932459204039, 39.99128195211594, 15.183)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1349, 27.328150595400928, 39.99128195211594, 16.713)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 1453, 28.108600832480427, 39.99128195211594, 18.213)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 1553, 28.878160992658966, 39.99128195211594, 19.732)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 1653, 29.29900270894199, 39.99128195211594, 21.214)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 1753, 29.855847026405396, 39.99128195211594, 22.696)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 1853, 30.356567849480673, 39.99128195211594, 24.103)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 1953, 30.959514371990878, 39.99128195211594, 25.558)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2053, 31.277415438203963, 39.99128195211594, 26.93)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 2153, 31.651656215882678, 39.99128195211594, 28.336)
build optimizer
