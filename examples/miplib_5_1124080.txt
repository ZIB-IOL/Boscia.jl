
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension) = (5, 30)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, 5.869138096771234, Inf, 6.617)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 5.909799291483724, Inf, 12.519)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 5.9349506159547465, Inf, 18.237)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 5.960495830176195, Inf, 24.109)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 5.979119754249449, Inf, 30.153)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 5.999652395822544, Inf, 36.278)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 6.01404041709082, Inf, 42.387)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 6.02954502231132, Inf, 48.631)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, 6.038543294721787, Inf, 55.093)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, 6.049352480166832, Inf, 61.464)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, 6.060618094088538, Inf, 67.689)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, 6.067433313099815, Inf, 74.025)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, 6.076610813781667, Inf, 80.118)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, 6.081672062428901, Inf, 86.487)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, 6.086380458969351, Inf, 93.122)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, 6.093475907715582, Inf, 99.496)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, 6.100485920974185, Inf, 105.904)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, 6.104193273884495, Inf, 111.952)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, 6.108878821856172, Inf, 118.574)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, 6.11665578136349, Inf, 124.951)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, 6.119863301833267, Inf, 131.34)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, 6.122697673941842, Inf, 137.657)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, 6.125374658535253, Inf, 143.937)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, 6.128938625304112, Inf, 150.005)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, 6.1314519418295665, Inf, 156.445)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, 6.1349287420877054, Inf, 162.661)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, 6.137695695500152, Inf, 169.022)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, 6.140610932346363, Inf, 175.228)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, 6.14275369390442, Inf, 181.635)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, 6.1454627505268205, Inf, 187.848)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, 6.14798680037245, Inf, 194.002)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6401, 6.150219575151486, Inf, 200.318)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6601, 6.152909907797362, Inf, 206.58)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6801, 6.1556108455695, Inf, 212.827)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 7001, 6.158145927784992, Inf, 218.803)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 7201, 6.160765323375199, Inf, 224.93)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 7401, 6.162320746497109, Inf, 231.275)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 7601, 6.1649606279451605, Inf, 237.387)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7801, 6.167452032334412, Inf, 243.643)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 8001, 6.169611824263643, Inf, 250.435)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 8201, 6.172020123153432, Inf, 256.773)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 8401, 6.173683033395496, Inf, 263.454)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 8601, 6.176132268031447, Inf, 269.977)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 8801, 6.177436289054813, Inf, 276.275)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 9001, 6.179328982174719, Inf, 282.359)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 9195, 6.1805302402498095, 6.552616979132757, 289.006)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 9383, 6.18172064729888, 6.551751005855157, 295.431)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 9559, 6.182892036979013, 6.551751005855157, 301.965)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 9747, 6.184991076159913, 6.551751005855157, 308.136)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 9929, 6.186305880970803, 6.551751005855157, 314.535)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 10117, 6.188445526766302, 6.551751005855157, 321.055)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 10315, 6.189958317729011, 6.551751005855157, 327.94)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 10499, 6.191192960146665, 6.551751005855157, 334.242)
(status, bnb_model.incumbent) = ("Optimal", 6.192059849759359)
