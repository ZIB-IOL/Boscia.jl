
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (5, 85, "integer")
seed = 5
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -0.0011453384345360925, Inf, 2.162)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 399, 8.298125761950645, 26.572753360919602, 3.154)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 597, 9.977997449708557, 24.879457168610692, 4.406)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 759, 10.98436557680458, 23.894446503376944, 5.532)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 911, 12.146937232899669, 23.894446503376944, 6.732)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1047, 12.744513922588306, 23.894446503376944, 7.798)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1189, 13.398632867744912, 23.894446503376944, 8.905)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1303, 13.910828840478823, 23.894446503376944, 10.054)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1413, 14.296903714125996, 23.894446503376944, 11.082)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1521, 14.716942750333565, 23.894446503376944, 12.1)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 1635, 15.071174011540462, 23.894446503376944, 13.079)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 1753, 15.366616784852162, 23.894446503376944, 14.172)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 1857, 15.718780053769759, 23.894446503376944, 15.117)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 1961, 15.935042586778994, 23.894446503376944, 16.169)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2069, 16.226424985143403, 23.894446503376944, 17.134)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2175, 16.44362937250858, 23.894446503376944, 18.196)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2271, 16.653717352558083, 16.990651103916136, 19.182)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 2329, 16.903102543704104, 16.990651103916136, 20.215)
build optimizer
