
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension) = (3, 16)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, 2.7081699701029534, Inf, 4.511)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 2.7466061481625097, Inf, 7.718)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 2.7698606559258026, Inf, 10.919)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 2.7846385159623277, Inf, 14.097)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 2.8013867876264564, Inf, 17.308)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 2.8167808717172846, Inf, 20.591)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 2.8324865923368314, Inf, 23.771)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 2.85345931493712, Inf, 27.101)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, 2.86694021670192, Inf, 30.379)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, 2.874561417593731, Inf, 33.583)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, 2.883565504435032, Inf, 36.894)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, 2.8927492528483882, Inf, 40.184)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, 2.8992849476063167, Inf, 43.492)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, 2.904751485297321, Inf, 46.873)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, 2.9104142069284564, Inf, 50.156)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, 2.9163632697817006, Inf, 53.435)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, 2.921678117723583, Inf, 56.713)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, 2.927036753664364, Inf, 59.889)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, 2.93093157049521, Inf, 63.366)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, 2.933931662424758, Inf, 66.611)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, 2.9377524102223473, Inf, 69.872)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, 2.9413620535604155, Inf, 73.112)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, 2.9449022395320763, Inf, 76.281)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, 2.947346640447035, Inf, 79.463)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, 2.949804808633262, Inf, 82.84)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, 2.9515216126110198, Inf, 86.043)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, 2.9546500329304477, Inf, 89.182)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, 2.95686905551407, Inf, 92.528)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, 2.959505637125749, Inf, 95.839)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, 2.9623798774873813, Inf, 99.069)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, 2.964069884737238, Inf, 102.347)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6401, 2.9666965936485146, Inf, 105.594)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6601, 2.9689419865828355, Inf, 108.856)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6801, 2.971580199575414, Inf, 112.172)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 7001, 2.974888284947855, Inf, 115.398)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 7201, 2.9768071868322665, Inf, 118.71)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 7401, 2.9790167387219357, Inf, 122.105)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 7581, 2.980739843885126, 3.2250619328741856, 125.495)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7713, 2.9823773284380475, 3.1923064185964303, 128.746)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 7841, 2.9844555714733536, 3.1923064185964303, 131.994)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 7959, 2.9863706758758353, 3.1923064185964303, 135.219)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 8079, 2.9881193175763574, 3.1923064185964303, 138.535)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 8197, 2.9900736469790696, 3.163098300470768, 141.845)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 8325, 2.9916973557208193, 3.163098300470768, 145.141)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 8433, 2.9934126998727977, 3.163098300470768, 148.555)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 8539, 2.995240937504269, 3.163098300470768, 151.815)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 8653, 2.996643941483612, 3.1575907456971155, 155.019)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 8763, 2.9980069950306296, 3.1575907456971155, 158.346)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 8875, 2.99977888463427, 3.1575907456971155, 161.587)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 8981, 3.002170932304855, 3.1575907456971155, 164.857)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 9093, 3.0039592352658473, 3.1575907456971155, 168.138)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 9205, 3.0056439025187887, 3.1575907456971155, 171.447)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 9315, 3.0070632575463856, 3.1575907456971155, 174.607)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 9423, 3.0083652166519204, 3.1575907456971155, 178.005)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 9527, 3.0104893063813107, 3.1575907456971155, 181.31)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 9641, 3.0119749408825105, 3.1575907456971155, 184.615)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 9749, 3.0136133870370316, 3.1575907456971155, 187.885)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 9851, 3.0146610613837885, 3.1575907456971155, 191.243)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 9963, 3.016358086419457, 3.1575907456971155, 194.486)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 10067, 3.01741699108628, 3.1575907456971155, 197.771)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 10175, 3.018712298301705, 3.1575907456971155, 201.051)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 10281, 3.0201462891506576, 3.1575907456971155, 204.267)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 10383, 3.0213456910568985, 3.1575907456971155, 207.641)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 10487, 3.0219338071137845, 3.1575907456971155, 210.918)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 10595, 3.023351531769175, 3.1575907456971155, 214.358)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 10703, 3.024239596391724, 3.1575907456971155, 217.672)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 10807, 3.0255655673383197, 3.1575907456971155, 220.964)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 10913, 3.0264959072025643, 3.1575907456971155, 224.286)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 11019, 3.0277149988511156, 3.1575907456971155, 227.48)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 11123, 3.0286744051850722, 3.1575907456971155, 230.856)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 11227, 3.029844335109564, 3.1575907456971155, 234.233)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7200, 11333, 3.0307555123508583, 3.1575907456971155, 237.473)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7300, 11437, 3.031800550245427, 3.1575907456971155, 240.794)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7400, 11539, 3.0330148519765108, 3.1575907456971155, 244.056)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7500, 11647, 3.0340311983550605, 3.1575907456971155, 247.38)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7600, 11753, 3.0350953158023697, 3.1575907456971155, 250.747)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7700, 11859, 3.0360732178323446, 3.1575907456971155, 254.007)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7800, 11963, 3.0369563121986114, 3.1575907456971155, 257.41)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7900, 12067, 3.0379083732836776, 3.1575907456971155, 260.7)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8000, 12167, 3.0385915378167727, 3.1575907456971155, 264.028)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8100, 12273, 3.039867746761705, 3.1575907456971155, 267.465)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8200, 12373, 3.0409298931307864, 3.1575907456971155, 270.803)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8300, 12479, 3.041909097897506, 3.1575907456971155, 274.274)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8400, 12581, 3.0425723815566235, 3.1575907456971155, 277.657)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8500, 12683, 3.043833972674377, 3.1575907456971155, 281.07)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8600, 12787, 3.044882386518093, 3.1575907456971155, 284.349)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8700, 12887, 3.045747942322691, 3.1575907456971155, 287.68)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8800, 12989, 3.0466992867218385, 3.1575907456971155, 291.096)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8900, 13089, 3.047684125440676, 3.1575907456971155, 294.447)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9000, 13191, 3.0487763340446774, 3.1575907456971155, 297.781)
(status, bnb_model.incumbent) = ("Optimal", 3.0488327260777894)
