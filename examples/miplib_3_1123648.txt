
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (3, 90, "integer")
seed = 3
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -0.44753858855753126, Inf, 4.006)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 1.5963921075068783, Inf, 6.033)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 2.9249443272932587, Inf, 8.592)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 3.596022083248227, Inf, 11.059)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 4.1472054790516655, Inf, 13.602)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 4.431067142804314, Inf, 16.034)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 4.823192618022903, Inf, 18.47)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 5.120640979118176, Inf, 20.776)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, 5.347357387916219, Inf, 23.086)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, 5.607921854722771, Inf, 25.383)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, 5.797106634629655, Inf, 27.711)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, 6.005215778530209, Inf, 29.935)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, 6.1486164443422044, Inf, 32.233)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, 6.388582183163648, Inf, 34.502)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2909, 6.568540342692497, 9.798149500523547, 36.891)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3013, 6.778099669701936, 9.798149500523547, 39.09)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3121, 6.902153037112699, 9.798149500523547, 41.485)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3225, 7.0311343694544775, 9.798149500523547, 43.807)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3329, 7.134310784633187, 9.798149500523547, 45.993)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 3429, 7.240900778640415, 9.798149500523547, 48.207)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 3537, 7.337308687145082, 9.798149500523547, 50.369)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 3637, 7.430648386884828, 9.798149500523547, 52.385)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 3737, 7.546862146226314, 9.798149500523547, 54.55)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 3837, 7.628054303515596, 9.798149500523547, 56.734)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 3939, 7.718662547967946, 9.798149500523547, 58.773)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 4043, 7.7812262340502825, 9.798149500523547, 60.908)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 4143, 7.842081046213705, 9.798149500523547, 63.116)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 4243, 7.917780617618744, 9.798149500523547, 65.212)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 4343, 7.992414664127941, 9.798149500523547, 67.381)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 4443, 8.061320928791767, 9.798149500523547, 69.591)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 4543, 8.116730191963972, 9.798149500523547, 71.76)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 4643, 8.217810537477773, 9.798149500523547, 73.923)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 4741, 8.274292016073938, 9.798149500523547, 76.077)
build optimizer
