
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (6, 85, "integer")
seed = 6
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -0.22807039141014437, Inf, 2.182)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 3.7490112611872144, Inf, 3.232)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 6.256194722346941, Inf, 4.398)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 7.348718181658074, Inf, 5.625)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 997, 8.002925408197925, 18.89420701122674, 6.821)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1163, 8.4562877755525, 18.89420701122674, 7.907)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1313, 8.891302376814922, 18.89420701122674, 9.038)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1441, 9.189884688123096, 18.89420701122674, 10.051)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1601, 9.4539298229768, 18.89420701122674, 11.156)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1731, 9.688290810281659, 18.89420701122674, 12.288)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 1879, 9.897972801808056, 18.89420701122674, 13.352)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2011, 10.131741862464574, 18.89420701122674, 14.454)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2141, 10.398180688974099, 18.89420701122674, 15.456)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2263, 10.651093173270487, 18.89420701122674, 16.523)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2383, 10.832205868986122, 18.89420701122674, 17.548)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2513, 10.965153600262969, 18.89420701122674, 18.681)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2627, 11.187081224975646, 11.42831143074931, 19.692)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 2683, 11.352668566425534, 11.42831143074931, 20.79)
build optimizer
