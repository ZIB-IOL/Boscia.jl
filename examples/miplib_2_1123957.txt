
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension) = (2, 18)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, 1.6637743450803468, Inf, 4.044)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 1.7039834369735587, Inf, 7.417)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 1.7221260358961028, Inf, 10.846)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 1.737696770627109, Inf, 14.214)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 1.749254058706327, Inf, 17.559)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 1.7615985337155413, Inf, 21.01)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1359, 1.7726640365051836, 1.9460710085856818, 24.336)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1477, 1.7805705164894128, 1.9460710085856818, 27.666)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1591, 1.7853147984879214, 1.9196841104419837, 31.154)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1699, 1.790395153654596, 1.9196841104419837, 34.682)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 1815, 1.7970927498274356, 1.9196841104419837, 38.139)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 1917, 1.801088385389555, 1.908610537085859, 41.551)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2019, 1.8097417323531382, 1.908610537085859, 44.984)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2121, 1.814220654650743, 1.908610537085859, 48.398)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2221, 1.8181819578214529, 1.908610537085859, 51.758)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2321, 1.821660377659081, 1.908610537085859, 55.146)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2421, 1.8242972285515544, 1.908610537085859, 58.602)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 2523, 1.8274390914463772, 1.908610537085859, 62.046)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 2623, 1.8322400191096244, 1.908610537085859, 65.404)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 2723, 1.834887319064267, 1.908610537085859, 68.914)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 2825, 1.8384485240898139, 1.908610537085859, 72.211)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 2925, 1.8406570748234392, 1.908610537085859, 75.619)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 3025, 1.8423208234654962, 1.908610537085859, 79.027)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 3125, 1.8448584255847216, 1.908610537085859, 82.372)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 3225, 1.8474801867770267, 1.908610537085859, 85.758)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 3325, 1.8489232930833395, 1.908610537085859, 89.138)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 3425, 1.8506447311187892, 1.908610537085859, 92.583)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 3523, 1.8537842338374784, 1.908610537085859, 96.11)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 3623, 1.8557999650950587, 1.908610537085859, 99.443)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 3721, 1.8575391368235847, 1.908610537085859, 102.847)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 3819, 1.860603716034757, 1.908610537085859, 106.205)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 3919, 1.8636852689180794, 1.908610537085859, 109.634)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 4017, 1.86529694521372, 1.908610537085859, 113.079)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 4117, 1.8669891597823973, 1.908610537085859, 116.509)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 4217, 1.8686131708203135, 1.908610537085859, 119.828)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 4317, 1.8705191399118235, 1.908610537085859, 123.218)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 4417, 1.8720292616681864, 1.908610537085859, 126.608)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 4513, 1.8737527208320826, 1.908610537085859, 129.89)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 4611, 1.8755758077344398, 1.908610537085859, 133.275)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 4703, 1.8769095930474875, 1.908610537085859, 136.683)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 4803, 1.8785889447917286, 1.908610537085859, 139.988)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 4899, 1.8801757311557832, 1.908610537085859, 143.371)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 4999, 1.8813900299546056, 1.908610537085859, 146.745)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 5091, 1.8824333571459793, 1.908610537085859, 150.208)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 5185, 1.883970073941917, 1.908610537085859, 153.507)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 5279, 1.8861902355562137, 1.908610537085859, 156.919)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 5371, 1.8877843404340886, 1.908610537085859, 160.33)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 5463, 1.8891409242519082, 1.908610537085859, 163.824)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 5557, 1.890511656986941, 1.908610537085859, 167.155)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 5643, 1.8915628550548012, 1.908610537085859, 170.748)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 5731, 1.8928008574046662, 1.908610537085859, 174.209)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 5821, 1.8940123005661276, 1.908610537085859, 177.497)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 5903, 1.8953306130232175, 1.908610537085859, 180.933)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 5987, 1.8962600162894747, 1.908610537085859, 184.347)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 6073, 1.8980163604519944, 1.908610537085859, 187.857)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 6159, 1.8990742516305286, 1.908610537085859, 191.391)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 6245, 1.9003389429857895, 1.908610537085859, 194.686)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 6313, 1.901228485815973, 1.908610537085859, 198.042)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 6391, 1.9021825821597738, 1.908610537085859, 201.574)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 6475, 1.9033684765291923, 1.908610537085859, 205.06)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 6549, 1.9041667427367504, 1.908610537085859, 208.525)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 6615, 1.905239376451993, 1.908610537085859, 211.903)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 6691, 1.9060357368703746, 1.908610537085859, 215.407)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 6751, 1.9073063852360848, 1.908610537085859, 218.783)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 6811, 1.9085248058607318, 1.908610537085859, 222.256)
(status, bnb_model.incumbent) = ("Optimal", 1.908610537085859)
