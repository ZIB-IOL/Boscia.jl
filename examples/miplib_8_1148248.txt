
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, M, k, var_A) = (8, 15, 0.1, 15.0, 5)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, 0.2318313096786632, Inf, 24.395)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 0.2326721321541285, Inf, 47.272)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 0.23343652548537042, Inf, 70.155)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 0.23377064596288655, Inf, 92.977)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 0.2341059027451583, Inf, 116.088)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 0.2343728910992589, Inf, 139.149)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 0.23481385284274442, Inf, 162.419)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 0.23539705519933152, Inf, 185.665)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, 0.2359417474457844, Inf, 208.732)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, 0.23627525006444716, Inf, 231.847)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, 0.23648831013896482, Inf, 254.985)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, 0.23671266634081817, Inf, 278.031)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, 0.23696147003629148, Inf, 301.056)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, 0.23719929397971432, Inf, 324.195)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, 0.2374840106001755, Inf, 347.178)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, 0.23770283675190668, Inf, 370.301)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, 0.23793545479142142, Inf, 393.367)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, 0.23810255640190536, Inf, 416.549)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, 0.23825957503359313, Inf, 439.651)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, 0.23838660121410843, Inf, 462.832)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, 0.23852318832899144, Inf, 485.963)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, 0.23864039110535845, Inf, 509.055)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, 0.23877451968318392, Inf, 532.245)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, 0.23889619677790547, Inf, 555.466)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, 0.23901143731628538, Inf, 578.723)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, 0.23909872950612543, Inf, 601.902)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, 0.23923870770577527, Inf, 625.208)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, 0.23932664743955928, Inf, 648.474)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, 0.23948762049014688, Inf, 671.713)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, 0.2396059606329327, Inf, 694.877)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, 0.23974011793055322, Inf, 718.046)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6401, 0.23983649321143694, Inf, 741.107)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6601, 0.23995190940075245, Inf, 764.154)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6801, 0.24006296412169775, Inf, 787.205)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 7001, 0.24013133868343986, Inf, 810.199)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 7201, 0.24026820739319704, Inf, 833.08)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 7401, 0.24034805114537688, Inf, 856.032)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 7601, 0.24044320242247558, Inf, 879.057)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7801, 0.24054934089038452, Inf, 902.046)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 8001, 0.2406335867607649, Inf, 924.914)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 8201, 0.24071440837114144, Inf, 947.849)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 8401, 0.24079916383887828, Inf, 970.797)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 8601, 0.24085789917505845, Inf, 994.914)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 8801, 0.2409188953829357, Inf, 1018.066)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 9001, 0.2409891073717267, Inf, 1041.213)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 9201, 0.24105468660551024, Inf, 1064.353)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 9401, 0.24111206831065013, Inf, 1087.419)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 9601, 0.2411618244517627, Inf, 1110.708)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 9801, 0.2412039376248936, Inf, 1133.899)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 10001, 0.2412557818267094, Inf, 1157.141)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 10201, 0.24132991596217895, Inf, 1180.28)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 10401, 0.24140305199712564, Inf, 1203.517)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 10601, 0.24146170703352443, Inf, 1226.569)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 10801, 0.24151032308602155, Inf, 1249.786)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 11001, 0.24156429183450895, Inf, 1272.854)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 11201, 0.24160523414290047, Inf, 1295.878)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 11401, 0.2416804446857258, Inf, 1318.93)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 11601, 0.24173266315283018, Inf, 1341.929)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 11801, 0.2417877328264571, Inf, 1365.066)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 12001, 0.24183750320345881, Inf, 1388.011)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 12201, 0.24189206629048327, Inf, 1411.171)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 12401, 0.24194747594518884, Inf, 1434.214)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 12601, 0.24200029676497134, Inf, 1457.421)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 12801, 0.24204602755471188, Inf, 1480.565)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 13001, 0.24210919528536434, Inf, 1503.699)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 13201, 0.24215996404090762, Inf, 1526.822)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 13401, 0.24220805498763034, Inf, 1549.868)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 13601, 0.24227023857145985, Inf, 1573.078)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 13801, 0.24231559071987263, Inf, 1596.092)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 14001, 0.24236081563812298, Inf, 1619.168)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 14201, 0.24240582621463463, Inf, 1642.255)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7200, 14401, 0.24246064734797723, Inf, 1665.351)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7300, 14601, 0.2425105370615384, Inf, 1688.486)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7400, 14801, 0.24255944403512364, Inf, 1711.533)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7500, 15001, 0.24259355122778653, Inf, 1734.496)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7600, 15201, 0.24263922293121543, Inf, 1757.566)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7700, 15401, 0.24266905868319577, Inf, 1780.574)
