
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (9, 50, "integer")
seed = 9
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -3.10553962188593, Inf, 1.909)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -2.73017585442735, Inf, 2.716)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, -2.529206716665173, Inf, 3.475)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, -2.380439296252836, Inf, 4.386)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, -2.266220303558924, Inf, 5.154)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, -2.163144561383546, Inf, 5.917)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, -2.112469169727342, Inf, 6.804)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, -2.058132583677205, Inf, 7.59)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, -2.0016158737526686, Inf, 8.364)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, -1.9567259687261633, Inf, 9.126)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, -1.9060429749599077, Inf, 10.016)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, -1.8583068443148885, Inf, 10.796)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, -1.8114364811783408, Inf, 11.555)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, -1.7694723263020267, Inf, 12.425)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, -1.7258392216320404, Inf, 13.195)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, -1.6826414026050462, Inf, 13.964)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, -1.6540194435498643, Inf, 14.713)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, -1.626572567263631, Inf, 15.589)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, -1.5921446349643276, Inf, 16.342)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, -1.5696619379354737, Inf, 17.107)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, -1.5494862458255678, Inf, 17.857)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, -1.5256667828874861, Inf, 18.729)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, -1.5025409365933178, Inf, 19.509)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, -1.483979663516806, Inf, 20.273)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, -1.4645822673080984, Inf, 21.142)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, -1.442506186929386, Inf, 21.905)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, -1.4224266564429116, Inf, 22.664)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, -1.4057848964506827, Inf, 23.42)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, -1.3895649366018532, Inf, 24.3)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, -1.3770850641344956, Inf, 25.068)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, -1.3566046533420213, Inf, 25.822)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6401, -1.3403648062560953, Inf, 26.572)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6601, -1.326605941631715, Inf, 27.435)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6801, -1.3130030449643915, Inf, 28.177)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 7001, -1.2992358320471618, Inf, 28.928)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 7201, -1.284245264931093, Inf, 29.675)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 7401, -1.2690141993101027, Inf, 30.541)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 7601, -1.2542210888680048, Inf, 31.302)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7801, -1.237940170222202, Inf, 32.054)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 8001, -1.224358372243457, Inf, 32.796)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 8201, -1.2154849177238443, Inf, 33.673)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 8401, -1.204600707024152, Inf, 34.439)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 8601, -1.1929182631701871, Inf, 35.197)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 8801, -1.1813994798587562, Inf, 35.944)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 9001, -1.1722166324396621, Inf, 36.82)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 9201, -1.1604500683992462, Inf, 37.567)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 9401, -1.1503607075157711, Inf, 38.303)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 9601, -1.1414466845187103, Inf, 39.048)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 9801, -1.1324608659175848, Inf, 39.92)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 10001, -1.1227926750984287, Inf, 40.672)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 10201, -1.1141231809689933, Inf, 41.415)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 10401, -1.1031188182728335, Inf, 42.156)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 10601, -1.096314788841506, Inf, 43.037)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 10801, -1.0860471314985873, Inf, 43.778)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 11001, -1.0769545584049889, Inf, 44.509)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 11201, -1.068362617725915, Inf, 45.239)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 11401, -1.0590587125448203, Inf, 46.126)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 11601, -1.051352014215857, Inf, 46.868)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 11801, -1.0428007972842792, Inf, 47.614)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 12001, -1.0342064194990852, Inf, 48.367)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 12201, -1.0242260115434139, Inf, 49.267)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 12401, -1.0144724772224034, Inf, 50.035)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 12601, -1.0035926162595992, Inf, 50.788)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 12801, -0.9945442205468766, Inf, 51.513)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 13001, -0.9860714542270443, Inf, 52.389)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 13201, -0.9780805166844848, Inf, 53.13)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 13401, -0.9711607608116188, Inf, 53.86)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 13601, -0.9656894489142938, Inf, 54.599)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 13801, -0.9583236482268691, Inf, 55.465)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 14001, -0.9478722313722443, Inf, 56.23)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 14201, -0.9404517617407215, Inf, 56.986)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7200, 14401, -0.9328317556747021, Inf, 57.727)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7300, 14601, -0.9251140285406485, Inf, 58.595)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7400, 14801, -0.9176264170532065, Inf, 59.345)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7500, 15001, -0.9071082141791966, Inf, 60.085)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7600, 15201, -0.8986227525269685, Inf, 60.809)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7700, 15401, -0.893732773357399, Inf, 61.664)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7800, 15601, -0.8863418820929705, Inf, 62.412)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7900, 15801, -0.878412214000539, Inf, 63.154)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8000, 16001, -0.8704178610784754, Inf, 63.891)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8100, 16201, -0.8613609209592965, Inf, 64.743)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8200, 16401, -0.8542938801765279, Inf, 65.489)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8300, 16601, -0.8460542717027046, Inf, 66.242)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8400, 16801, -0.8391615534393769, Inf, 67.005)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8500, 17001, -0.8331871333686645, Inf, 67.732)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8600, 17201, -0.8277696792514844, Inf, 68.604)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8700, 17401, -0.8214084186550248, Inf, 69.345)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8800, 17601, -0.8163346690008453, Inf, 70.081)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8900, 17801, -0.8107675397344227, Inf, 70.822)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9000, 18001, -0.8042217293386881, Inf, 71.716)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9100, 18201, -0.7988556813717376, Inf, 72.456)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9200, 18401, -0.7936897005596704, Inf, 73.181)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9300, 18601, -0.7880260286594513, Inf, 73.912)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9400, 18801, -0.7828974819565655, Inf, 74.782)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9500, 19001, -0.7784823376237627, Inf, 75.534)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9600, 19201, -0.7751584479164317, Inf, 76.274)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9700, 19401, -0.7702590430829461, Inf, 77.01)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9800, 19601, -0.7648438951394188, Inf, 77.88)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9900, 19801, -0.7606995323815189, Inf, 78.616)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10000, 20001, -0.7545574111547181, Inf, 79.361)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10100, 20201, -0.7491231798428437, Inf, 80.095)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10200, 20401, -0.7439940503850659, Inf, 80.816)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10300, 20601, -0.7374369071512508, Inf, 81.688)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10400, 20801, -0.7325411489371092, Inf, 82.42)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10500, 21001, -0.7278134215719572, Inf, 83.148)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10600, 21201, -0.7236552295240753, Inf, 83.877)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10700, 21401, -0.7173992770253275, Inf, 84.761)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10800, 21601, -0.7108711552243463, Inf, 85.49)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10900, 21801, -0.7048852820004656, Inf, 86.211)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (11000, 22001, -0.6988171473558598, Inf, 86.938)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (11100, 22201, -0.6940242050880197, Inf, 87.663)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (11200, 22401, -0.6890764944485945, Inf, 88.537)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (11300, 22601, -0.6841416196156578, Inf, 89.279)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (11400, 22801, -0.6785799612949228, Inf, 90.017)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (11500, 23001, -0.673759065836119, Inf, 90.74)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (11600, 23201, -0.6695124793066456, Inf, 91.623)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (11700, 23401, -0.6647900916560127, Inf, 92.371)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (11800, 23601, -0.6606450437338284, Inf, 93.111)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (11900, 23801, -0.657345047029805, Inf, 93.818)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (12000, 24001, -0.6522961815723793, Inf, 94.525)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (12100, 24201, -0.6468934524861529, Inf, 95.402)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (12200, 24401, -0.6424832721812201, Inf, 96.136)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (12300, 24601, -0.6379690439620643, Inf, 96.863)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (12400, 24801, -0.6342829005323081, Inf, 97.582)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (12500, 25001, -0.6302788407228173, Inf, 98.295)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (12600, 25201, -0.6240172309680485, Inf, 99.208)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (12700, 25401, -0.6196297183945214, Inf, 99.949)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (12800, 25601, -0.6154947615903139, Inf, 100.67)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (12900, 25801, -0.6116478462851189, Inf, 101.396)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (13000, 26001, -0.6069611216847663, Inf, 102.265)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (13100, 26027, -0.6037537180582996, -0.5960848116050474, 103.025)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (13200, 26041, -0.5995821289516119, -0.5960848116050474, 103.754)
build optimizer
