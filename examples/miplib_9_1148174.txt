
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, M, k, var_A) = (9, 5, 1.0, 5.0, 5)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 153, 0.15751247974589844, 0.36059406395895754, 7.416)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 297, 0.1583751986432011, 0.32459746869246686, 10.616)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 443, 0.15899639934942061, 0.25873539891561015, 13.7)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 607, 0.16018329634371736, 0.2539750793894534, 16.733)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 725, 0.1665877011170857, 0.244145280223605, 19.755)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 855, 0.16785090893319032, 0.244145280223605, 22.803)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1007, 0.16907104077935864, 0.244145280223605, 25.773)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1165, 0.1697646739047787, 0.244145280223605, 28.725)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1317, 0.17071694409435462, 0.244145280223605, 31.743)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1481, 0.17130912763410772, 0.244145280223605, 34.771)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 1643, 0.17184295356448465, 0.244145280223605, 37.745)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 1801, 0.1725902651810739, 0.244145280223605, 40.729)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 1963, 0.173479707525532, 0.22650763202183194, 43.688)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2109, 0.17469081509874984, 0.22650763202183194, 46.641)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2237, 0.17641145709939998, 0.22650763202183194, 49.552)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2369, 0.17760645728519675, 0.22650763202183194, 52.483)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2501, 0.1785256012489556, 0.22650763202183194, 55.417)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 2633, 0.17915770721462518, 0.22650763202183194, 58.294)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 2765, 0.17982767755924137, 0.22650763202183194, 61.225)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 2905, 0.18050648092150268, 0.22650763202183194, 64.145)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 3063, 0.18118728738413015, 0.22650763202183194, 67.065)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 3207, 0.18213595879203137, 0.20797569285146372, 69.987)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 3333, 0.1836013945943939, 0.20797569285146372, 72.853)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 3437, 0.18515355867361247, 0.20797569285146372, 75.712)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 3535, 0.18592909159037624, 0.20797569285146372, 78.531)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 3619, 0.18677049161789794, 0.20797569285146372, 81.378)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 3731, 0.18737117542443943, 0.20797569285146372, 84.209)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 3823, 0.1883166760482357, 0.20797569285146372, 87.11)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 3923, 0.1891221423574417, 0.20797569285146372, 90.014)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 4037, 0.18977127353222134, 0.20797569285146372, 92.869)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 4149, 0.19071040309204923, 0.20797569285146372, 95.737)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 4259, 0.19157018609598098, 0.20797569285146372, 98.544)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 4379, 0.19215689358845062, 0.20393222000148017, 101.37)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 4487, 0.1929026079998645, 0.20393222000148017, 104.176)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 4579, 0.19367782620532434, 0.20393222000148017, 106.97)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 4661, 0.1945633800170502, 0.20393222000148017, 109.768)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 4723, 0.19519279944511847, 0.20393222000148017, 112.554)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 4781, 0.19593021933134996, 0.20393222000148017, 115.392)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 4833, 0.19660099117194496, 0.20393222000148017, 118.208)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 4897, 0.19722863701425503, 0.20393222000148017, 121.035)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 4965, 0.1978868590003932, 0.20393222000148017, 123.838)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 5027, 0.19853940754275695, 0.20393222000148017, 126.624)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 5087, 0.19928811398162322, 0.20393222000148017, 129.366)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 5133, 0.19990282928819283, 0.20393222000148017, 132.084)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 5187, 0.20056743426075654, 0.20393222000148017, 134.84)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 5233, 0.20113120901458792, 0.20393222000148017, 137.577)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 5269, 0.2018928733009723, 0.20393222000148017, 140.308)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 5291, 0.20261515732886007, 0.20393222000148017, 142.988)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 5323, 0.20344011567246767, 0.20393222000148017, 145.715)
