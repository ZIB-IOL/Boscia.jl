
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, M, k, var_A) = (3, 15, 0.1, 15.0, 5)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, 0.1915794271427642, Inf, 26.462)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 0.1932192571756419, Inf, 50.576)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 0.19530102215674416, Inf, 74.239)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 0.19595685910066818, Inf, 97.936)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 0.19653698664601466, Inf, 121.851)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 0.19728304999825286, Inf, 145.724)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 0.19769717998914785, Inf, 169.562)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 0.1983225979906572, Inf, 193.547)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, 0.1990252453957962, Inf, 217.422)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, 0.19970489199708144, Inf, 241.346)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, 0.20006971788905875, Inf, 265.33)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, 0.20044262510204125, Inf, 289.204)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, 0.2007000257224955, Inf, 312.944)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, 0.20099460119336124, Inf, 336.809)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, 0.2012785126828036, Inf, 360.84)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, 0.20148438070090616, Inf, 384.806)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, 0.20168295297595723, Inf, 408.733)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, 0.2019137276151477, Inf, 432.591)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, 0.20210032895877417, Inf, 456.39)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, 0.2022216920026354, Inf, 480.132)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, 0.2023936846393698, Inf, 504.169)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, 0.20256179867948668, Inf, 528.156)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, 0.20271921409160454, Inf, 551.959)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, 0.20287929318069908, Inf, 575.74)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, 0.20303601785249098, Inf, 599.525)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, 0.2031792701245814, Inf, 623.292)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, 0.20335868122199524, Inf, 647.171)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, 0.2035074700595171, Inf, 671.153)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, 0.20365485591208965, Inf, 695.246)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, 0.20381674199355382, Inf, 719.201)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, 0.20399215122365796, Inf, 743.144)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6401, 0.20411871131681172, Inf, 767.188)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6601, 0.20426719041693567, Inf, 791.158)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6801, 0.20441170526138547, Inf, 815.115)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 7001, 0.2045295867830073, Inf, 839.033)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 7201, 0.20463311282201047, Inf, 862.818)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 7401, 0.20473329361828677, Inf, 886.754)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 7601, 0.20485018701421082, Inf, 910.509)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7801, 0.20495321326189075, Inf, 935.416)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 8001, 0.20505588622698925, Inf, 959.611)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 8201, 0.20514770287127992, Inf, 983.917)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 8401, 0.20523112123104365, Inf, 1008.025)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 8601, 0.2052957255858462, Inf, 1032.148)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 8801, 0.20536034479623105, Inf, 1056.265)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 9001, 0.20543753124225686, Inf, 1080.336)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 9201, 0.20553010510315237, Inf, 1104.48)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 9401, 0.2056161322342972, Inf, 1128.668)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 9601, 0.20567713358516948, Inf, 1152.884)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 9801, 0.20574971786724855, Inf, 1176.939)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 10001, 0.2058230048569586, Inf, 1201.292)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 10201, 0.20588879028984397, Inf, 1225.576)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 10401, 0.20594217472705204, Inf, 1249.916)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 10601, 0.20601101958566373, Inf, 1274.04)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 10801, 0.206073574759556, Inf, 1298.296)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 11001, 0.20614008354794278, Inf, 1322.659)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 11201, 0.20619474103675572, Inf, 1346.943)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 11401, 0.2062635124178202, Inf, 1371.132)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 11601, 0.2063159009800818, Inf, 1395.031)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 11801, 0.20636488259575944, Inf, 1418.486)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 12001, 0.20640953977361443, Inf, 1441.917)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 12201, 0.20647097825644453, Inf, 1465.394)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 12401, 0.20651127404966063, Inf, 1488.868)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 12601, 0.20655028088619068, Inf, 1512.353)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 12801, 0.2065967489102206, Inf, 1535.558)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 13001, 0.20664844279353262, Inf, 1558.707)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 13201, 0.20669759149803088, Inf, 1581.892)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 13401, 0.2067526467570003, Inf, 1605.039)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 13601, 0.20681746060232675, Inf, 1628.35)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 13801, 0.20686889894278912, Inf, 1651.716)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 14001, 0.20692916780033482, Inf, 1674.939)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 14201, 0.20697026393393977, Inf, 1698.138)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7200, 14401, 0.2070078008540066, Inf, 1721.438)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7300, 14601, 0.20707420082353722, Inf, 1744.683)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7400, 14801, 0.2071385927967292, Inf, 1767.855)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7500, 15001, 0.20719375540993856, Inf, 1791.017)
