
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (7, 105, "integer")
seed = 7
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -0.14998207765801178, Inf, 2.497)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 5.575512021228929, Inf, 3.438)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 13.424483202582639, Inf, 4.976)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 15.590477485265081, Inf, 6.429)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 16.322856465720598, Inf, 7.858)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 16.896140994252566, Inf, 9.21)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 17.47798951428168, Inf, 10.613)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 17.969379568220102, Inf, 12.009)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1787, 18.594548983965037, 36.2845718295441, 13.41)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1927, 19.235525289774106, 36.2845718295441, 14.717)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2069, 19.887031807151953, 36.2845718295441, 15.997)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2203, 20.655433839770307, 36.2845718295441, 17.367)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2339, 21.156737319040772, 36.2845718295441, 18.749)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2461, 21.53181631871694, 36.2845718295441, 19.95)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2581, 21.971757627438826, 36.2845718295441, 21.152)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2699, 22.285616262210112, 36.2845718295441, 22.369)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2811, 22.50250668051955, 36.2845718295441, 23.601)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 2921, 22.824088268081738, 36.2845718295441, 24.825)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3031, 23.07385686346066, 36.2845718295441, 26.101)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 3147, 23.3479452742989, 36.2845718295441, 27.362)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 3233, 23.638732490621496, 23.83774853248743, 28.522)
build optimizer
