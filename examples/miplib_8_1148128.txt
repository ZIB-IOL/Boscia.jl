
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, ns) = (8, 90, 5.0)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -18855.146293890142, Inf, 83.626)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -18855.144720487846, Inf, 176.145)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, -18855.144268502012, Inf, 268.286)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, -18855.142190679904, Inf, 361.37)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, -18855.14219022134, Inf, 451.851)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, -18855.14164327936, Inf, 541.314)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, -18855.140798802324, Inf, 635.456)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, -18855.139510383407, Inf, 729.368)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, -18855.13918840189, Inf, 819.57)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, -18855.139037802433, Inf, 910.343)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, -18855.1381700808, Inf, 1002.957)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, -18855.13815523655, Inf, 1091.752)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, -18855.13793027811, Inf, 1183.888)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, -18855.1374795314, Inf, 1278.366)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, -18855.136893713992, Inf, 1372.844)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, -18855.136708734004, Inf, 1463.784)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, -18855.136226745904, Inf, 1556.244)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, -18855.13550090511, Inf, 1650.324)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, -18855.135305989457, Inf, 1746.678)
