
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, ns) = (5, 70, 1.0)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -18425.651840964427, Inf, 158.195)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -18425.60360842832, Inf, 304.555)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, -18425.58871194691, Inf, 449.714)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, -18425.56385645252, Inf, 584.348)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, -18425.559534596603, Inf, 708.906)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, -18425.536296016857, Inf, 830.629)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, -18425.521022139907, Inf, 950.166)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, -18425.50846465426, Inf, 1070.646)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, -18425.49965169942, Inf, 1190.454)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, -18425.493066890052, Inf, 1308.134)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, -18425.47733602672, Inf, 1428.024)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, -18425.469340494525, Inf, 1546.127)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, -18425.462930685255, Inf, 1665.253)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, -18425.455422697207, Inf, 1785.64)
