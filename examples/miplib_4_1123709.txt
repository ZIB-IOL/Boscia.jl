
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (4, 120, "integer")
seed = 4
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -0.3703007316393909, Inf, 2.85)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 1.0691216948184714, Inf, 4.032)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 6.679136316413472, Inf, 5.656)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 8.910249674478683, Inf, 7.646)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 10.519426347334546, Inf, 9.575)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 11.592165168076148, Inf, 11.439)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 12.364080409985501, Inf, 13.278)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 13.022608267298988, Inf, 15.08)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1785, 13.804647594727191, 32.213963984352155, 16.926)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1953, 14.378043442341893, 32.213963984352155, 18.77)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2109, 14.86740310748144, 32.213963984352155, 20.563)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2265, 15.307229319086542, 32.213963984352155, 22.283)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2417, 15.800992589195477, 32.213963984352155, 24.099)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2569, 16.151859084720165, 32.213963984352155, 25.956)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2701, 16.3867305980656, 32.213963984352155, 27.741)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2843, 16.709230019516617, 32.213963984352155, 29.493)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2995, 17.087043415435428, 32.213963984352155, 31.287)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3133, 17.60655492421221, 32.213963984352155, 33.062)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3269, 18.003344234893806, 32.213963984352155, 34.803)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 3387, 18.294437435705767, 32.213963984352155, 36.505)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 3521, 18.5468989927906, 32.213963984352155, 38.15)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 3655, 18.81173783503047, 32.213963984352155, 39.874)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 3779, 19.019957807969323, 32.213963984352155, 41.679)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 3917, 19.29401768853211, 32.213963984352155, 43.464)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 4047, 19.578950587745346, 32.213963984352155, 45.243)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 4175, 19.80709996188487, 32.213963984352155, 46.96)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 4295, 20.03248869985943, 32.213963984352155, 48.688)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 4407, 20.21394488982654, 32.213963984352155, 50.28)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 4535, 20.380962379161378, 32.213963984352155, 52.06)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 4661, 20.618343523089408, 32.213963984352155, 53.755)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 4781, 20.833719422708423, 32.213963984352155, 55.477)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 4895, 20.997038539887143, 32.213963984352155, 57.111)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 5011, 21.224883747785046, 32.213963984352155, 58.803)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 5123, 21.324922224887786, 32.213963984352155, 60.486)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 5237, 21.453118964749798, 32.213963984352155, 62.178)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 5363, 21.604787769611672, 32.213963984352155, 63.935)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 5491, 21.688898608401615, 32.213963984352155, 65.675)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 5603, 21.848335916876007, 32.213963984352155, 67.382)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 5721, 22.032823125099128, 32.213963984352155, 69.023)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 5837, 22.165840869691447, 32.213963984352155, 70.727)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 5951, 22.25629927804649, 32.213963984352155, 72.466)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 6067, 22.362283161996995, 32.213963984352155, 74.209)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 6181, 22.463884885703575, 32.213963984352155, 75.954)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 6299, 22.60743460324858, 32.213963984352155, 77.605)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 6415, 22.738404463971435, 32.213963984352155, 79.287)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 6533, 22.848533117721605, 32.213963984352155, 81.029)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 6647, 22.979726354477858, 32.213963984352155, 82.754)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 6763, 23.117091715700116, 32.213963984352155, 84.46)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 6877, 23.22271032283184, 32.213963984352155, 86.149)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 6989, 23.337834061788932, 32.213963984352155, 87.848)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 7097, 23.439416789123346, 32.213963984352155, 89.504)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 7207, 23.550952516358645, 32.213963984352155, 91.138)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 7323, 23.641118827477385, 32.213963984352155, 92.96)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 7431, 23.744546183884296, 32.213963984352155, 94.673)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 7543, 23.843687285194473, 32.213963984352155, 96.39)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 7657, 23.982940998028614, 32.213963984352155, 98.154)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 7761, 24.0627476419067, 32.213963984352155, 99.923)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 7867, 24.143213688822946, 32.213963984352155, 101.499)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 7975, 24.215654549910447, 32.213963984352155, 103.14)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 8083, 24.286662528804737, 32.213963984352155, 104.861)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 8199, 24.373294871885992, 32.213963984352155, 106.516)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 8309, 24.470848790944093, 32.213963984352155, 108.138)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 8419, 24.576249819294407, 32.213963984352155, 109.872)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 8531, 24.666333799866422, 32.213963984352155, 111.598)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 8639, 24.740241469157485, 32.213963984352155, 113.182)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 8745, 24.810525489792543, 32.213963984352155, 114.794)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 8853, 24.89382345413482, 32.213963984352155, 116.501)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 8959, 24.971655975921145, 32.213963984352155, 118.154)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 9073, 25.067844489724596, 32.213963984352155, 119.799)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 9181, 25.14569257405546, 32.213963984352155, 121.517)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 9287, 25.220788106839475, 32.213963984352155, 123.219)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7200, 9391, 25.30481917979896, 32.213963984352155, 124.888)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7300, 9507, 25.389970738103777, 32.213963984352155, 126.674)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7400, 9613, 25.489457567363004, 32.213963984352155, 128.146)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7500, 9717, 25.5656356325528, 32.213963984352155, 129.753)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7600, 9831, 25.63847305427055, 32.213963984352155, 131.483)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7700, 9935, 25.70775282097402, 32.213963984352155, 133.051)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7800, 10041, 25.78180991085113, 32.213963984352155, 134.686)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7900, 10143, 25.85848096210959, 32.213963984352155, 136.298)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8000, 10251, 25.938547448026366, 32.213963984352155, 137.993)
build optimizer
