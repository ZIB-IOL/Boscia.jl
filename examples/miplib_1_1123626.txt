
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (1, 80, "integer")
seed = 1
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, 0.045464895167299284, Inf, 2.077)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 9.230809125375965, Inf, 3.075)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 12.162273242618252, Inf, 4.144)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 799, 13.31474936693643, 42.518903870854295, 5.261)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 999, 14.212876701855944, 42.518903870854295, 6.296)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1199, 14.833417890997787, 42.518903870854295, 7.413)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1395, 15.742520802944304, 42.518903870854295, 8.433)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1591, 16.32768265818873, 42.518903870854295, 9.529)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1785, 16.74136377170602, 42.518903870854295, 10.518)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1979, 17.251057597386694, 42.518903870854295, 11.532)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2179, 17.846413229413074, 42.518903870854295, 12.568)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2363, 18.41632855374298, 42.518903870854295, 13.6)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2547, 18.746450302173137, 42.518903870854295, 14.578)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2717, 19.10708152031413, 42.518903870854295, 15.555)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2899, 19.567059884305, 42.518903870854295, 16.478)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2979, 19.983077839594927, 20.41736237781244, 17.401)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3041, 20.324261068753316, 20.41736237781244, 18.435)
build optimizer
