
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (10, 35, "integer")
seed = 10
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -2.005610375975892, Inf, 1.693)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -1.7075728288106207, Inf, 2.404)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, -1.4685662248347333, Inf, 3.037)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, -1.2838529473504512, Inf, 3.649)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, -1.1622747528395918, Inf, 4.256)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, -1.0521213513948051, Inf, 4.871)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, -0.9559243697606669, Inf, 5.691)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, -0.8688752299648691, Inf, 6.336)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, -0.812293570505229, Inf, 6.964)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, -0.7324023169990084, Inf, 7.589)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, -0.6763399211743688, Inf, 8.213)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, -0.6203295993918369, Inf, 8.811)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, -0.569762669644515, Inf, 9.611)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, -0.5222492495108209, Inf, 10.236)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, -0.48565868449654226, Inf, 10.866)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, -0.4426381336174819, Inf, 11.474)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, -0.4013835444651348, Inf, 12.086)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, -0.3630926682241991, Inf, 12.689)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, -0.31931639892605385, Inf, 13.482)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, -0.27764035966120953, Inf, 14.096)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, -0.2446883021623053, Inf, 14.714)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, -0.21645868354617165, Inf, 15.311)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, -0.19389414846113764, Inf, 15.921)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, -0.1591997146967958, Inf, 16.514)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, -0.12712542928012574, Inf, 17.306)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, -0.10198310404297944, Inf, 17.917)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, -0.07493791252454912, Inf, 18.529)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, -0.04484235218199741, Inf, 19.134)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, -0.021105044430737362, Inf, 19.759)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, 0.0032795995012351413, Inf, 20.354)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, 0.027948012428244365, Inf, 21.132)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6401, 0.04654885498157502, Inf, 21.752)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6601, 0.06603903842232528, Inf, 22.377)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6767, 0.08409069414104318, 0.13885234825055626, 22.985)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 6807, 0.10406944081637454, 0.13885234825055626, 23.575)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 6831, 0.1331733778919184, 0.13885234825055626, 24.183)
build optimizer
