
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (4, 105, "integer")
seed = 4
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -0.2664156455694767, Inf, 2.524)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 4.10564798760572, Inf, 3.474)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 13.425054423370256, Inf, 5.027)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 15.220159458991622, Inf, 6.633)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 985, 16.49137224680581, 39.319665054373715, 8.188)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1159, 17.552262619886694, 39.319665054373715, 9.625)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1327, 18.52626616723463, 39.319665054373715, 11.145)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1489, 19.278300833594106, 39.319665054373715, 12.56)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1637, 20.467970848041244, 39.319665054373715, 13.96)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1765, 21.253798554045186, 39.319665054373715, 15.334)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 1907, 21.843579299452426, 39.319665054373715, 16.741)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2037, 22.408127562391783, 39.319665054373715, 18.138)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2163, 23.017632556778715, 39.319665054373715, 19.514)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2279, 23.342963103104093, 39.319665054373715, 20.881)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2403, 23.727906670729862, 39.319665054373715, 22.303)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2519, 24.258923034195682, 39.319665054373715, 23.648)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2643, 24.79218393774112, 39.319665054373715, 25.001)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 2759, 25.11136692636904, 39.319665054373715, 26.401)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 2873, 25.492529423024266, 39.319665054373715, 27.734)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 2985, 25.902989327899476, 39.319665054373715, 29.044)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 3103, 26.216965598919014, 39.319665054373715, 30.311)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 3217, 26.54423071981627, 39.319665054373715, 31.644)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 3333, 26.768419106580385, 39.319665054373715, 33.0)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 3445, 27.1134152679404, 39.319665054373715, 34.211)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 3553, 27.386232277931715, 39.319665054373715, 35.506)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 3659, 27.528623997462454, 39.319665054373715, 36.898)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 3773, 27.66154397836405, 39.319665054373715, 38.295)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 3889, 27.845129911806257, 39.319665054373715, 39.598)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 4003, 28.05955027277754, 39.319665054373715, 40.934)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 4113, 28.240646281927244, 39.319665054373715, 42.259)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 4215, 28.491695669558986, 39.319665054373715, 43.54)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 4319, 28.65349445619785, 39.319665054373715, 44.797)
build optimizer
