
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension) = (5, 28)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, 6.016386097961124, Inf, 6.175)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 6.067303626078184, Inf, 11.778)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 6.098891724138089, Inf, 17.1)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 6.116669629111492, Inf, 22.835)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 6.131909705043677, Inf, 28.548)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 6.147556668933449, Inf, 33.926)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 6.158863187859544, Inf, 39.425)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 6.169311465973185, Inf, 45.232)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, 6.1823126232002545, Inf, 51.21)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, 6.189269874400872, Inf, 57.12)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2145, 6.197390477454177, 6.471243025907587, 62.951)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2275, 6.206040102485689, 6.471243025907587, 68.916)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2391, 6.2147654306991145, 6.471243025907587, 74.964)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2511, 6.220965776916226, 6.471243025907587, 81.126)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2635, 6.228869605901787, 6.471243025907587, 87.212)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2749, 6.234370684120219, 6.471243025907587, 93.197)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2875, 6.241353998517882, 6.471243025907587, 99.041)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 2981, 6.247209108282297, 6.471243025907587, 105.099)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3095, 6.25365323361225, 6.471243025907587, 110.966)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 3207, 6.2576138835483555, 6.471243025907587, 116.784)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 3317, 6.260410136092841, 6.471243025907587, 122.592)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 3433, 6.264415128075252, 6.471243025907587, 128.738)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 3539, 6.269794919575125, 6.460470151767154, 134.593)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 3643, 6.274355908252807, 6.460470151767154, 140.238)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 3749, 6.280498155106927, 6.460470151767154, 145.936)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 3851, 6.283608474377642, 6.460470151767154, 152.079)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 3957, 6.2866158875153095, 6.460470151767154, 158.458)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 4061, 6.289685068757838, 6.460470151767154, 164.373)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 4165, 6.2926794341230945, 6.460470151767154, 170.233)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 4271, 6.295242351469365, 6.460470151767154, 176.099)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 4371, 6.298681003624512, 6.460470151767154, 181.95)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 4471, 6.302397091996472, 6.460470151767154, 187.749)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 4573, 6.304337346175708, 6.460470151767154, 193.688)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 4675, 6.306443805232166, 6.460470151767154, 200.042)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 4777, 6.309202988887281, 6.460470151767154, 206.007)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 4879, 6.310718920631723, 6.460470151767154, 212.285)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 4981, 6.312301656335723, 6.460470151767154, 218.127)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 5081, 6.313759959670709, 6.460470151767154, 224.089)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 5183, 6.31650204076518, 6.460470151767154, 229.888)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 5285, 6.318070489798375, 6.460470151767154, 235.909)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 5385, 6.320961977301537, 6.460470151767154, 241.969)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 5489, 6.323891014331362, 6.460470151767154, 247.923)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 5589, 6.325811227789862, 6.460470151767154, 253.902)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 5689, 6.327978769447226, 6.460470151767154, 259.986)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 5789, 6.329813743122689, 6.460470151767154, 266.055)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 5893, 6.331683789162403, 6.460470151767154, 272.03)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 5993, 6.333367348153767, 6.460470151767154, 278.139)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 6093, 6.334918373564918, 6.460470151767154, 284.496)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 6193, 6.336094927394546, 6.460470151767154, 290.302)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 6297, 6.337695650058262, 6.460470151767154, 296.209)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 6397, 6.338785742804269, 6.460470151767154, 302.203)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 6497, 6.340102226465814, 6.460470151767154, 308.075)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 6597, 6.341886640054591, 6.460470151767154, 314.224)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 6697, 6.343182975021882, 6.460470151767154, 319.966)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 6797, 6.345114529871245, 6.460470151767154, 326.194)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 6901, 6.3466985576684625, 6.460470151767154, 332.367)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 7003, 6.347826324869858, 6.460470151767154, 338.584)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 7103, 6.348942308674852, 6.460470151767154, 344.516)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 7203, 6.350166245075685, 6.460470151767154, 350.55)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 7305, 6.351694551273789, 6.460470151767154, 356.714)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 7405, 6.352642551376969, 6.460470151767154, 362.97)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 7505, 6.3537487866967375, 6.460470151767154, 369.456)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 7605, 6.355084259697313, 6.460470151767154, 375.391)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 7705, 6.35599607420012, 6.460470151767154, 381.248)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 7805, 6.357332602076328, 6.460470151767154, 387.297)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 7905, 6.358099010195598, 6.460470151767154, 393.304)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 8005, 6.359217236388324, 6.460470151767154, 399.524)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 8105, 6.361376976082652, 6.460470151767154, 405.418)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 8205, 6.362622113838614, 6.460470151767154, 411.278)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 8305, 6.3639638948234545, 6.460470151767154, 417.266)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 8405, 6.365300026513367, 6.460470151767154, 423.329)
(status, bnb_model.incumbent) = ("Optimal", 6.366692038139141)
