
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, ns) = (7, 70, 1.0)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -388.60065861997896, Inf, 60.72)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -388.60042120027043, Inf, 116.328)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, -388.5999020073079, Inf, 170.63)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, -388.5993266243424, Inf, 225.917)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, -388.5981854128668, Inf, 280.806)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, -388.5976603025401, Inf, 335.419)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, -388.59713478028266, Inf, 389.437)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, -388.5966883834761, Inf, 444.77)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, -388.5957706325036, Inf, 500.229)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, -388.59555578257965, Inf, 554.032)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, -388.5954275288244, Inf, 607.34)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, -388.5949409916468, Inf, 661.392)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, -388.59459601315757, Inf, 716.436)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, -388.59419564080736, Inf, 771.566)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, -388.5936072465962, Inf, 826.351)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, -388.5927894837384, Inf, 881.395)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, -388.5923318844637, Inf, 935.969)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, -388.5918293093851, Inf, 990.276)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, -388.59143043005145, Inf, 1045.206)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, -388.59098253958234, Inf, 1100.653)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, -388.5904745305136, Inf, 1156.169)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, -388.589678543788, Inf, 1213.059)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, -388.58831409445577, Inf, 1270.936)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, -388.5875153796241, Inf, 1330.421)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, -388.58647030228127, Inf, 1390.489)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, -388.58550201505324, Inf, 1448.952)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, -388.58520971448576, Inf, 1506.116)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, -388.5849230797025, Inf, 1562.759)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, -388.5846522515862, Inf, 1619.028)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, -388.5842732436133, Inf, 1675.413)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, -388.5839795498587, Inf, 1732.062)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6401, -388.58334290561294, Inf, 1788.659)
