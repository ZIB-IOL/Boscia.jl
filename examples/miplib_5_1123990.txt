
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension) = (5, 21)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, 5.2567397669109805, Inf, 4.76)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 5.301888215728177, Inf, 8.634)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 5.32515334764548, Inf, 12.481)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 5.341924577366654, Inf, 16.536)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 5.3695429306149975, Inf, 20.516)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 5.3846825214083145, Inf, 24.688)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 5.405752721993746, Inf, 28.853)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 5.419157447783663, Inf, 33.047)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1785, 5.434537354879112, 5.732416542235532, 37.264)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1895, 5.447585916562066, 5.658508255656404, 41.384)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2003, 5.4577048828510435, 5.658508255656404, 45.537)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2111, 5.46247675288262, 5.658508255656404, 49.793)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2217, 5.470113618999376, 5.658508255656404, 53.887)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2321, 5.478852560274329, 5.658508255656404, 58.092)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2425, 5.484200967355955, 5.658508255656404, 62.281)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2525, 5.487943613611325, 5.658508255656404, 66.471)
(status, bnb_model.incumbent) = ("Optimal", 5.4892162175313475)
