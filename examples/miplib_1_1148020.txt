
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, ns) = (1, 50, 5.0)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -2731.7344523408824, Inf, 11.578)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -2731.726026971178, Inf, 21.794)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, -2731.7148375279403, Inf, 32.032)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, -2731.7091346892357, Inf, 42.188)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, -2731.706336042253, Inf, 52.267)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, -2731.703931948164, Inf, 62.599)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, -2731.6977202974326, Inf, 73.032)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, -2731.6897144230775, Inf, 82.969)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, -2731.688460330308, Inf, 92.906)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, -2731.686605146004, Inf, 102.888)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, -2731.6850765332038, Inf, 112.647)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, -2731.6834691299796, Inf, 122.718)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, -2731.679765900888, Inf, 132.838)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, -2731.6791443758643, Inf, 142.494)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, -2731.677492185481, Inf, 152.268)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, -2731.676098958284, Inf, 162.063)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, -2731.673993504309, Inf, 172.005)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, -2731.6708477353136, Inf, 182.031)
