
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, ns) = (9, 70, 5.0)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -90351.45376983641, Inf, 92.25)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -90351.43860504073, Inf, 188.517)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, -90351.4374651578, Inf, 282.329)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, -90351.4137722946, Inf, 383.709)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, -90351.40289138631, Inf, 481.537)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, -90351.39125788183, Inf, 582.006)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, -90351.38801026918, Inf, 677.706)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, -90351.38574989478, Inf, 776.384)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, -90351.38352238535, Inf, 875.433)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, -90351.37569791373, Inf, 976.351)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, -90351.37331575937, Inf, 1073.687)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, -90351.37105782058, Inf, 1172.443)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, -90351.36651996971, Inf, 1273.749)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, -90351.36474457095, Inf, 1371.818)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, -90351.36143309137, Inf, 1472.282)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, -90351.3584396048, Inf, 1575.676)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, -90351.35351593862, Inf, 1682.199)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, -90351.34902335325, Inf, 1780.659)
