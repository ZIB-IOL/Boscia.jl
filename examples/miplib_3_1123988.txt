
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension) = (3, 21)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, 3.34085465441808, Inf, 5.02)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 3.4019425926626026, Inf, 8.912)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 3.421206715584013, Inf, 12.805)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 3.4410507517797675, Inf, 16.711)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 3.467437297308149, Inf, 20.711)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 3.496038375468166, Inf, 24.73)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 3.5132795525857006, Inf, 28.735)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 3.524403155295905, Inf, 32.671)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, 3.5320295586674217, Inf, 36.638)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, 3.5377636262615075, Inf, 40.525)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, 3.5444538633551343, Inf, 44.556)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, 3.554531544778228, Inf, 48.598)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, 3.5619427897485174, Inf, 52.68)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, 3.5679128717709974, Inf, 56.649)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, 3.5744955525219453, Inf, 60.601)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, 3.5797324339216465, Inf, 64.753)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, 3.585237204595436, Inf, 68.89)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, 3.5917153258801466, Inf, 73.012)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, 3.5965739347066776, Inf, 77.272)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, 3.601989067544622, Inf, 81.383)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, 3.6087362868083046, Inf, 85.347)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, 3.6128521648724474, Inf, 89.456)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, 3.6152639959131214, Inf, 93.65)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, 3.6195968662602156, Inf, 97.771)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, 3.6247086616537105, Inf, 101.851)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, 3.627460443588522, Inf, 106.071)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, 3.6300769786796616, Inf, 110.291)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, 3.6325034738947632, Inf, 114.322)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, 3.6359517570968185, Inf, 118.331)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, 3.6380087875585483, Inf, 122.43)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, 3.6404407133421572, Inf, 126.619)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6401, 3.642312013170694, Inf, 130.728)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6559, 3.644706398803935, 3.8683179897217674, 134.782)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6703, 3.647357689562095, 3.8683179897217674, 138.718)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 6839, 3.64946471699466, 3.8683179897217674, 142.782)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 6971, 3.651243971414379, 3.8683179897217674, 146.782)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 7103, 3.652374978761658, 3.8683179897217674, 150.865)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 7241, 3.6546169977381044, 3.8683179897217674, 154.963)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7379, 3.6577123644386274, 3.8683179897217674, 158.909)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 7499, 3.659287215533804, 3.8683179897217674, 163.102)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 7623, 3.660619519377221, 3.8683179897217674, 167.083)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 7755, 3.6623772043217038, 3.8683179897217674, 171.172)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 7885, 3.6640803044247288, 3.8683179897217674, 175.061)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 8009, 3.666216984906357, 3.8683179897217674, 179.018)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 8145, 3.668391860845541, 3.8683179897217674, 182.925)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 8269, 3.669528351076274, 3.8683179897217674, 187.266)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 8395, 3.671330180445949, 3.8683179897217674, 191.526)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 8521, 3.6723222897506846, 3.8683179897217674, 195.67)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 8665, 3.674535238798081, 3.8683179897217674, 199.732)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 8793, 3.676332981718331, 3.8683179897217674, 203.795)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 8917, 3.6774181002794046, 3.8683179897217674, 207.901)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 9049, 3.679512195218616, 3.8683179897217674, 211.768)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 9175, 3.6814052368110843, 3.8683179897217674, 215.818)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 9305, 3.683102518865498, 3.8683179897217674, 220.092)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 9429, 3.684269620039092, 3.8683179897217674, 224.132)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 9545, 3.6855452959435624, 3.8683179897217674, 228.345)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 9673, 3.6872508857225346, 3.8683179897217674, 232.468)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 9797, 3.6882713659849857, 3.8683179897217674, 236.451)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 9913, 3.6896667599796475, 3.8683179897217674, 240.592)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 10029, 3.690709702245568, 3.8683179897217674, 244.604)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 10151, 3.6914519206880936, 3.8683179897217674, 248.778)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 10261, 3.693028559476331, 3.8683179897217674, 252.961)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 10377, 3.6941252536963893, 3.8683179897217674, 257.131)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 10493, 3.695710363809259, 3.8683179897217674, 261.239)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 10611, 3.6972925616922905, 3.8683179897217674, 265.309)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 10721, 3.6983566120693445, 3.8683179897217674, 269.608)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 10841, 3.6994901408740017, 3.8683179897217674, 273.608)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 10949, 3.700863742018018, 3.8683179897217674, 277.698)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 11063, 3.701964026700187, 3.8683179897217674, 281.799)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 11167, 3.70258691504248, 3.8683179897217674, 285.964)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 11281, 3.704049002324403, 3.8683179897217674, 290.17)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7200, 11393, 3.70549734466366, 3.8683179897217674, 294.169)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7300, 11505, 3.7071012687060096, 3.8683179897217674, 298.338)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7400, 11617, 3.70862479004275, 3.8683179897217674, 302.809)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7500, 11723, 3.709605176462626, 3.8683179897217674, 307.32)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7600, 11831, 3.7110442711053135, 3.8683179897217674, 311.489)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7700, 11941, 3.7123619134331935, 3.8683179897217674, 315.589)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7800, 12057, 3.7129810105977277, 3.8683179897217674, 319.704)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7900, 12161, 3.713701033183566, 3.8683179897217674, 324.016)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8000, 12269, 3.71477405366335, 3.8683179897217674, 328.286)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8100, 12373, 3.7159118513232925, 3.8683179897217674, 332.472)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8200, 12477, 3.717029489397008, 3.8683179897217674, 336.642)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8300, 12587, 3.7178937190186767, 3.8683179897217674, 340.867)
(status, bnb_model.incumbent) = ("Optimal", 3.7183878163517776)
