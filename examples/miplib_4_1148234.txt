
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, M, k, var_A) = (4, 15, 1.0, 15.0, 5)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, 0.21310478603224514, Inf, 21.53)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 0.2132260403501287, Inf, 41.687)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 0.21328395766248948, Inf, 61.922)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 0.2133723296475598, Inf, 82.072)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 0.21343577385044238, Inf, 102.186)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 0.21350810818606858, Inf, 122.781)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 0.21357107046782275, Inf, 143.164)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 0.2136141469651234, Inf, 163.401)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, 0.21366416715730355, Inf, 184.095)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, 0.21372116136469532, Inf, 204.698)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, 0.21376136788136274, Inf, 224.592)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, 0.21380366343056612, Inf, 243.657)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, 0.2138452293745386, Inf, 263.442)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, 0.21389712162824737, Inf, 283.03)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, 0.21394099889607826, Inf, 302.701)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, 0.21397168676612022, Inf, 322.569)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, 0.21400109501826894, Inf, 341.821)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, 0.21403694358275138, Inf, 361.34)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, 0.214065679691477, Inf, 381.488)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, 0.21411504308319756, Inf, 401.186)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, 0.21413211614101896, Inf, 420.456)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, 0.21415461018135995, Inf, 440.101)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, 0.21417436932851946, Inf, 459.998)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, 0.21420513484231724, Inf, 479.822)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, 0.21424245623361415, Inf, 499.754)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, 0.21425704516422855, Inf, 519.399)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, 0.21427270986580077, Inf, 539.089)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5599, 0.21428191773771754, 0.41430429842833627, 558.583)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5797, 0.21431171385003014, 0.41430429842833627, 578.265)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 5997, 0.21433154593904025, 0.41430429842833627, 598.252)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6193, 0.21435526456929369, 0.41430429842833627, 618.139)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6393, 0.21437274608980134, 0.41430429842833627, 637.929)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6593, 0.2143837133613537, 0.41430429842833627, 657.088)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6793, 0.21439086668898205, 0.41430429842833627, 676.265)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 6989, 0.2144066200565413, 0.41430429842833627, 696.013)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 7185, 0.21442838491667093, 0.41258446504387036, 716.126)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 7385, 0.2144437807665976, 0.41258446504387036, 735.55)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 7585, 0.21445848346070934, 0.41258446504387036, 755.113)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7785, 0.21447051459884964, 0.41258446504387036, 774.837)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 7979, 0.2144878969271658, 0.41258446504387036, 794.686)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 8175, 0.21450281510949692, 0.41258446504387036, 814.417)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 8373, 0.21450924786526215, 0.41258446504387036, 833.403)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 8571, 0.21451680946922091, 0.41258446504387036, 852.6)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 8769, 0.21452903451109978, 0.41258446504387036, 872.108)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 8963, 0.21453695666878547, 0.41258446504387036, 891.738)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 9155, 0.21455623099708546, 0.41258446504387036, 911.831)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 9351, 0.21457370146725757, 0.41258446504387036, 931.616)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 9547, 0.21457749652243277, 0.41258446504387036, 951.968)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 9743, 0.21458809851807836, 0.41258446504387036, 971.38)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 9941, 0.21459973693039364, 0.41258446504387036, 991.383)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 10135, 0.21461190644985803, 0.41258446504387036, 1011.209)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 10329, 0.21462239327089977, 0.41258446504387036, 1030.941)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 10523, 0.2146317045655579, 0.41258446504387036, 1050.867)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 10717, 0.21464018147854375, 0.41258446504387036, 1070.864)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 10917, 0.2146470644710785, 0.41258446504387036, 1090.165)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 11113, 0.21465827716987212, 0.41258446504387036, 1109.621)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 11303, 0.2146742148164527, 0.41258446504387036, 1129.557)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 11491, 0.214681480797362, 0.41258446504387036, 1149.352)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 11687, 0.21469082206621076, 0.41258446504387036, 1168.69)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 11885, 0.21469533881078687, 0.41258446504387036, 1187.806)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 12083, 0.21470625781537736, 0.41258446504387036, 1207.509)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 12281, 0.2147137207973231, 0.41258446504387036, 1227.058)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 12477, 0.2147214615522638, 0.41258446504387036, 1246.68)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 12673, 0.2147298981304105, 0.41258446504387036, 1266.358)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 12869, 0.2147377784859959, 0.41258446504387036, 1286.382)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 13061, 0.2147426463055912, 0.41258446504387036, 1305.782)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 13259, 0.2147543942101355, 0.41258446504387036, 1325.524)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 13445, 0.21476293431374693, 0.41258446504387036, 1345.005)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 13641, 0.21476886310416743, 0.41258446504387036, 1364.405)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 13833, 0.2147801424604988, 0.41258446504387036, 1384.221)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 14029, 0.21479085424683905, 0.4101077109046619, 1403.984)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7200, 14225, 0.21480125708670605, 0.4101077109046619, 1423.844)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7300, 14423, 0.2148077971070354, 0.4101077109046619, 1443.385)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7400, 14615, 0.21481730206653027, 0.4101077109046619, 1463.354)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7500, 14797, 0.2148242609764717, 0.4101077109046619, 1483.021)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7600, 14991, 0.21483109673031958, 0.4101077109046619, 1502.331)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7700, 15183, 0.2148367186654768, 0.4101077109046619, 1521.697)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7800, 15377, 0.21484340453994777, 0.4101077109046619, 1540.969)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7900, 15571, 0.21484705399526066, 0.4101077109046619, 1560.666)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8000, 15767, 0.21485590496223822, 0.4101077109046619, 1580.463)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8100, 15959, 0.2148638787819898, 0.4101077109046619, 1600.145)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8200, 16143, 0.2148717414162008, 0.4101077109046619, 1619.699)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8300, 16335, 0.21487766448555956, 0.4101077109046619, 1639.013)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8400, 16523, 0.21488378011455084, 0.4101077109046619, 1658.318)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8500, 16713, 0.21489155736732637, 0.4101077109046619, 1678.032)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8600, 16901, 0.21489577115159303, 0.4101077109046619, 1697.238)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8700, 17083, 0.21490546575610542, 0.4101077109046619, 1717.098)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8800, 17267, 0.21491040610184278, 0.4101077109046619, 1736.454)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8900, 17459, 0.21491564308187316, 0.4101077109046619, 1755.818)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9000, 17647, 0.21492338935550226, 0.4101077109046619, 1775.402)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9100, 17843, 0.2149269785461892, 0.4101077109046619, 1795.045)
