
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(example, seed, num_v) = ("ran14x18-disj-8", 1, 4)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -277.0701591199822, Inf, 43.708)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -276.5303456221289, Inf, 87.306)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, -276.25312815165034, Inf, 131.653)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, -276.1076733134523, Inf, 174.555)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, -275.9718829864379, Inf, 217.076)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, -275.8506777532586, Inf, 260.689)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, -275.7398328403048, Inf, 302.914)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, -275.5809140974827, Inf, 346.633)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, -275.4329292320905, Inf, 390.25)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, -275.29757852894613, Inf, 433.265)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, -275.15517361769315, Inf, 477.447)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, -275.04400890404855, Inf, 521.382)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, -274.9468513882737, Inf, 564.444)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, -274.8741358609885, Inf, 607.995)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, -274.8056158996955, Inf, 651.896)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, -274.73874217881996, Inf, 695.308)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, -274.67366104596454, Inf, 739.352)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, -274.62872214045115, Inf, 783.894)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, -274.59021488916864, Inf, 830.446)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, -274.55503229395885, Inf, 874.807)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, -274.50600456229364, Inf, 920.168)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, -274.47320152691975, Inf, 965.398)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, -274.44409512774587, Inf, 1009.805)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, -274.41165499311603, Inf, 1054.866)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, -274.3668913101591, Inf, 1098.03)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, -274.3411969472048, Inf, 1141.492)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, -274.31546995051144, Inf, 1185.049)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, -274.29102885902495, Inf, 1229.169)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, -274.26873225555363, Inf, 1274.726)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, -274.2422399888827, Inf, 1319.041)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, -274.2200894225288, Inf, 1363.684)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6401, -274.2015148056924, Inf, 1408.024)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6601, -274.1778164899501, Inf, 1452.12)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6801, -274.1559161346503, Inf, 1496.428)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 7001, -274.13702814913205, Inf, 1541.679)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 7201, -274.1147658285705, Inf, 1585.192)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 7401, -274.09374396630454, Inf, 1630.196)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 7601, -274.0715031027562, Inf, 1674.65)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7801, -274.05246299764485, Inf, 1718.19)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 8001, -274.0351137951272, Inf, 1761.967)
