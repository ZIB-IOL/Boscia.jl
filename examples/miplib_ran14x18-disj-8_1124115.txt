
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(example, seed, num_v) = ("ran14x18-disj-8", 2, 8)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -198.75525394185848, Inf, 21.809)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -198.09045548405524, Inf, 42.96)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, -197.6690186130967, Inf, 63.806)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, -197.52987156485005, Inf, 84.853)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, -197.4246891194812, Inf, 106.057)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, -197.21989881121564, Inf, 126.98)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, -197.04511321546676, Inf, 148.415)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, -196.99203820954096, Inf, 169.844)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, -196.93793344264006, Inf, 191.719)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, -196.88973241043323, Inf, 214.195)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, -196.77319275013994, Inf, 235.746)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, -196.63492070989562, Inf, 257.241)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, -196.55951786339432, Inf, 279.185)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, -196.50986523479307, Inf, 301.221)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, -196.46154646509538, Inf, 323.403)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, -196.41950794003336, Inf, 345.732)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, -196.3866716586097, Inf, 367.419)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, -196.36197688927237, Inf, 389.958)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, -196.32576761794, Inf, 411.784)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, -196.27644838087775, Inf, 433.995)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, -196.21305495753703, Inf, 456.446)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, -196.16867705164182, Inf, 479.106)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, -196.1282466076001, Inf, 501.618)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, -196.0720032937178, Inf, 523.745)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, -196.02085641753425, Inf, 545.439)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, -195.99036240905957, Inf, 567.278)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, -195.96123293625755, Inf, 588.884)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, -195.9301411494878, Inf, 610.822)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, -195.90418430531832, Inf, 632.772)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, -195.873090272475, Inf, 654.577)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, -195.85601540430216, Inf, 677.232)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6401, -195.83384254360226, Inf, 698.868)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6601, -195.81216191059175, Inf, 720.532)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6801, -195.79080423686005, Inf, 742.472)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 7001, -195.76703085830442, Inf, 764.578)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 7201, -195.73764277853846, Inf, 786.307)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 7401, -195.71615942658, Inf, 808.304)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 7601, -195.69346370058304, Inf, 829.562)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7801, -195.67510727126657, Inf, 851.241)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 8001, -195.65205574527516, Inf, 872.544)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 8201, -195.63533772978448, Inf, 894.075)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 8401, -195.61207332407363, Inf, 915.175)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 8601, -195.59496313633744, Inf, 936.918)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 8801, -195.5733285094756, Inf, 958.442)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 9001, -195.55170557286172, Inf, 980.571)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 9201, -195.53469050046323, Inf, 1002.331)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 9401, -195.512457845342, Inf, 1024.23)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 9601, -195.48963719891805, Inf, 1046.154)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 9801, -195.46926451404966, Inf, 1068.015)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 10001, -195.44339177571516, Inf, 1089.848)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 10201, -195.41971126792987, Inf, 1111.468)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 10401, -195.40385761129227, Inf, 1132.708)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 10601, -195.3819189071125, Inf, 1154.152)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 10799, -195.365934309417, Inf, 1176.502)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 10999, -195.35233260771344, Inf, 1197.768)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 11199, -195.33379214418215, Inf, 1219.857)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 11399, -195.3207629860466, Inf, 1242.033)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 11599, -195.30510611054706, Inf, 1263.424)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 11799, -195.28759472239113, Inf, 1284.57)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 11999, -195.27671979878752, Inf, 1306.562)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 12199, -195.26480349802011, Inf, 1328.403)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 12399, -195.24854381360797, Inf, 1350.129)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 12599, -195.23577634665844, Inf, 1371.997)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 12799, -195.2249637975165, Inf, 1393.771)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 12999, -195.21506059493646, Inf, 1415.471)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 13199, -195.2045332604192, Inf, 1437.393)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 13399, -195.1917719052911, Inf, 1459.313)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 13599, -195.17986210559758, Inf, 1480.77)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 13799, -195.1694424325567, Inf, 1503.005)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 13999, -195.15899851599346, Inf, 1525.017)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 14199, -195.14621201037733, Inf, 1546.529)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7200, 14399, -195.13422357038692, Inf, 1567.749)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7300, 14599, -195.12425763669393, Inf, 1589.881)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7400, 14799, -195.1113665767757, Inf, 1611.528)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7500, 14999, -195.09875072058614, Inf, 1633.266)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7600, 15199, -195.08820395722586, Inf, 1655.323)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7700, 15399, -195.07809004759756, Inf, 1676.571)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7800, 15599, -195.06668608344071, Inf, 1698.02)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7900, 15797, -195.05518226960731, Inf, 1719.757)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8000, 15995, -195.04315069022275, Inf, 1740.875)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8100, 16195, -195.03063173703308, Inf, 1763.756)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8200, 16395, -195.01982379746377, Inf, 1786.401)
