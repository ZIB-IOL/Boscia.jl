
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, ns) = (10, 70, 1.0)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -148.46029083567151, Inf, 84.26)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -148.45971704157677, Inf, 172.027)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, -148.4580100761691, Inf, 262.777)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, -148.45567306083535, Inf, 353.493)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, -148.45357701268782, Inf, 445.075)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, -148.4512964803265, Inf, 537.243)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, -148.4497716638216, Inf, 626.75)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, -148.4460461716902, Inf, 718.381)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, -148.44522772119024, Inf, 809.311)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, -148.44493488421278, Inf, 898.908)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, -148.44458829500803, Inf, 989.012)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, -148.44373495124168, Inf, 1080.04)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, -148.44359956735627, Inf, 1168.914)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, -148.4435208827065, Inf, 1258.725)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, -148.44276648281172, Inf, 1351.39)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, -148.44255285482186, Inf, 1441.061)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, -148.4419615419778, Inf, 1530.714)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, -148.44175721516763, Inf, 1622.739)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, -148.44073538049938, Inf, 1717.016)
