
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, M, k, var_A) = (9, 5, 1.0, 5.0, 1)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 157, 0.5460921145724238, 0.6456179686678492, 7.595)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 289, 0.5475513788207169, 0.6390922126107625, 10.632)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 441, 0.5487472435059865, 0.6390922126107625, 13.566)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 607, 0.5505801167692368, 0.6164268963763626, 16.522)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 745, 0.555705927049007, 0.6091011583778024, 19.527)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 885, 0.557150320897724, 0.6091011583778024, 22.523)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1031, 0.5579276318878721, 0.6091011583778024, 25.449)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1179, 0.5585860397942906, 0.6091011583778024, 28.318)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1331, 0.5591954543022545, 0.6091011583778024, 31.248)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1483, 0.5597136467409022, 0.6091011583778024, 34.169)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 1645, 0.5603519267694699, 0.6091011583778024, 37.096)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 1811, 0.561116388282488, 0.6091011583778024, 40.055)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 1981, 0.5623255489392618, 0.6091011583778024, 43.01)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2103, 0.5646509039745811, 0.6070281069066535, 45.899)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2221, 0.5656533367444753, 0.6070281069066535, 48.738)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2359, 0.5665853041748042, 0.6070281069066535, 51.687)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2509, 0.567673218306404, 0.6070281069066535, 54.613)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 2645, 0.5687478375521478, 0.6070281069066535, 57.436)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 2775, 0.5697017550065933, 0.6070281069066535, 60.211)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 2907, 0.5705665949678408, 0.6070281069066535, 63.045)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 3055, 0.5714902082692496, 0.6070281069066535, 65.928)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 3207, 0.5725715928254312, 0.5938445860621189, 68.822)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 3325, 0.5737059163789548, 0.5938445860621189, 71.687)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 3419, 0.5746544906364263, 0.5938445860621189, 74.469)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 3511, 0.5752762855861473, 0.5938445860621189, 77.242)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 3611, 0.5758502944262944, 0.5938445860621189, 80.094)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 3707, 0.5764652807820155, 0.5938445860621189, 82.871)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 3819, 0.5770263080488773, 0.5938445860621189, 85.774)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 3939, 0.5777139654563622, 0.5938445860621189, 88.662)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 4055, 0.5784136796802894, 0.5938445860621189, 91.481)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 4163, 0.5790599332930944, 0.5938445860621189, 94.303)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 4273, 0.579801546155647, 0.5938445860621189, 97.091)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 4379, 0.5804655749141915, 0.5938445860621189, 99.877)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 4491, 0.5809376697615947, 0.5938445860621189, 102.625)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 4605, 0.5815636499949148, 0.5938445860621189, 105.411)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 4725, 0.5821053857023186, 0.5938445860621189, 108.163)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 4847, 0.5827403529721398, 0.5938445860621189, 110.901)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 4953, 0.583303966476485, 0.5919991389342205, 113.623)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 5049, 0.5838292549998741, 0.5919991389342205, 116.369)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 5127, 0.5844885969611552, 0.5919991389342205, 119.086)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 5195, 0.5849208749493088, 0.5919991389342205, 121.782)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 5265, 0.5852901679690922, 0.5919991389342205, 124.506)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 5323, 0.5856960283956135, 0.5919991389342205, 127.153)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 5363, 0.586132463160436, 0.5919991389342205, 129.842)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 5409, 0.5865112056400088, 0.5919991389342205, 132.532)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 5445, 0.5868614049864938, 0.5919991389342205, 135.203)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 5503, 0.5872504524178774, 0.5919991389342205, 137.886)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 5565, 0.5875335129741226, 0.5919991389342205, 140.533)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 5617, 0.5878447128122437, 0.5919991389342205, 143.223)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 5693, 0.5881552266566916, 0.5919991389342205, 145.878)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 5765, 0.5885393159653592, 0.5919991389342205, 148.603)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 5833, 0.5887827660957156, 0.5919991389342205, 151.266)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 5903, 0.5891918828009548, 0.5919991389342205, 153.909)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 5961, 0.5895789274838594, 0.5919991389342205, 156.635)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 6001, 0.589937885356287, 0.5919991389342205, 159.251)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 6049, 0.5903086211462854, 0.5919991389342205, 161.883)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 6079, 0.5906090808117479, 0.5919991389342205, 164.439)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 6109, 0.5910231973120486, 0.5919991389342205, 167.004)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 6143, 0.5913110250097919, 0.5919991389342205, 169.583)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 6177, 0.5916111482844091, 0.5919991389342205, 172.167)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 6201, 0.5919543952642611, 0.5919991389342205, 174.763)
