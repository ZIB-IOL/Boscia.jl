
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (9, 80, "integer")
seed = 9
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -0.4676252302618502, Inf, 2.061)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 0.48284082108797716, Inf, 3.17)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 1.386741515970344, Inf, 4.246)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 1.8844303220942362, Inf, 5.447)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 2.2853687949648274, Inf, 6.514)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 2.471466457072867, Inf, 7.633)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 2.6619134921175505, Inf, 8.669)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 2.8459079649043217, Inf, 9.758)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1759, 2.985851198295865, 5.932077282566327, 10.789)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1885, 3.110373663628342, 5.932077282566327, 11.89)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2019, 3.272989906197008, 5.932077282566327, 12.939)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2133, 3.365792224058622, 5.932077282566327, 14.025)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2255, 3.4541384608389256, 5.932077282566327, 15.065)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2371, 3.520738401313968, 5.932077282566327, 16.071)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2495, 3.624561226162486, 5.932077282566327, 17.134)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2605, 3.729542534989759, 5.932077282566327, 18.112)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2731, 3.80827505670844, 5.932077282566327, 19.227)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 2849, 3.864999333489181, 5.932077282566327, 20.202)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 2967, 3.950408273714961, 5.932077282566327, 21.271)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 3071, 4.014016047298804, 5.932077282566327, 22.265)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 3183, 4.082973484340187, 5.932077282566327, 23.241)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 3287, 4.156248450654228, 5.932077282566327, 24.31)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 3397, 4.220282168354342, 5.932077282566327, 25.299)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 3503, 4.274620259060178, 5.932077282566327, 26.331)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 3611, 4.326975684067712, 5.932077282566327, 27.304)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 3715, 4.389804476568924, 5.932077282566327, 28.343)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 3823, 4.439940596821246, 5.932077282566327, 29.31)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 3931, 4.517274870678722, 5.932077282566327, 30.301)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 4031, 4.566858185469377, 5.932077282566327, 31.404)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 4137, 4.630732954168092, 5.932077282566327, 32.335)
build optimizer
