
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (1, 60, "integer")
seed = 1
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -1.0914209312688306, Inf, 2.015)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -0.5010756304553553, Inf, 2.981)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, -0.2298813023781967, Inf, 3.819)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 0.037675812490869376, Inf, 4.746)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 0.3060839181377275, Inf, 5.629)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 0.48581352327784383, Inf, 6.56)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 0.6351111610822053, Inf, 7.423)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 0.7610203785778623, Inf, 8.367)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, 0.8592682465104713, Inf, 9.2)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, 0.9538808627968693, Inf, 10.058)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, 1.0705842456488157, Inf, 10.991)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, 1.143669586124223, Inf, 11.839)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, 1.2293698931315173, Inf, 12.759)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, 1.296589508628214, Inf, 13.617)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, 1.3719012240658142, Inf, 14.452)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, 1.4487717671278708, Inf, 15.357)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, 1.5182688082763325, Inf, 16.201)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, 1.5684853626122122, Inf, 17.086)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, 1.6083051591208648, Inf, 17.918)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, 1.6589828292151656, Inf, 18.816)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, 1.696599666664027, Inf, 19.657)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, 1.7401604064826433, Inf, 20.466)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, 1.7862259057140024, Inf, 21.363)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, 1.8237936712747764, Inf, 22.188)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, 1.85219233969738, Inf, 23.074)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, 1.8854921116521173, Inf, 23.908)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, 1.9203703416462587, Inf, 24.73)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, 1.9524592497947133, Inf, 25.616)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, 1.9925372509173291, Inf, 26.426)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, 2.021857424052809, Inf, 27.333)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, 2.051620155636906, Inf, 28.145)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6401, 2.0875727054757327, Inf, 29.036)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6601, 2.1093099887868023, Inf, 29.862)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6801, 2.140682316004611, Inf, 30.694)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 7001, 2.165649512241564, Inf, 31.581)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 7201, 2.201218112890219, Inf, 32.389)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 7401, 2.225155569569849, Inf, 33.276)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 7601, 2.2508369377583346, Inf, 34.098)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7801, 2.2750029773734703, Inf, 34.895)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 8001, 2.3059832156705777, Inf, 35.786)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 8201, 2.3285156748996267, Inf, 36.596)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 8401, 2.35218230776507, Inf, 37.505)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 8601, 2.3765088833762356, Inf, 38.331)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 8801, 2.402299011770985, Inf, 39.154)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 9001, 2.4254594895307697, Inf, 40.039)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 9201, 2.444135004564753, Inf, 40.822)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 9401, 2.4668555281253526, Inf, 41.615)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 9601, 2.486608745092097, Inf, 42.541)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 9801, 2.5050485536308984, Inf, 43.374)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 10001, 2.5216361525243376, Inf, 44.25)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 10201, 2.5374063546037355, Inf, 45.023)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 10401, 2.550363688734847, Inf, 45.844)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 10601, 2.5681171009597956, Inf, 46.75)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 10801, 2.586094090625375, Inf, 47.576)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 11001, 2.6020856862233903, Inf, 48.44)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 11201, 2.620059542229782, Inf, 49.209)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 11401, 2.6360355719410586, Inf, 50.009)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 11601, 2.6530276371459065, Inf, 50.9)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 11801, 2.6689485410837026, Inf, 51.69)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 12001, 2.6830115746837238, Inf, 52.508)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 12059, 2.6962130034016925, 2.8661354800662533, 53.454)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 12117, 2.7094460260766833, 2.8661354800662533, 54.248)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 12171, 2.7272836595288084, 2.8661354800662533, 55.142)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 12235, 2.742674712373609, 2.8661354800662533, 55.978)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 12289, 2.7576736585348027, 2.8661354800662533, 56.779)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 12341, 2.7731605915901056, 2.8661354800662533, 57.683)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 12389, 2.7894327391643023, 2.8661354800662533, 58.514)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 12429, 2.8046037561379267, 2.8661354800662533, 59.298)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 12465, 2.8282079746981412, 2.8661354800662533, 60.167)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 12497, 2.8426378520211055, 2.8661354800662533, 60.968)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 12525, 2.85731809228799, 2.8661354800662533, 61.764)
build optimizer
