
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (8, 45, "integer")
seed = 8
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -16.10719020559918, Inf, 1.833)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -15.954738258834634, Inf, 2.634)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, -15.896483339443032, Inf, 3.385)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, -15.847606314003642, Inf, 4.297)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, -15.813635384049187, Inf, 5.064)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, -15.782745121296674, Inf, 5.843)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, -15.762385986166464, Inf, 6.628)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, -15.738582027389036, Inf, 7.551)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, -15.71291221722588, Inf, 8.33)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, -15.68879710824257, Inf, 9.106)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, -15.668110128477753, Inf, 9.869)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, -15.652280017733407, Inf, 10.76)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, -15.638513622649697, Inf, 11.542)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, -15.622172661627475, Inf, 12.314)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, -15.610120392603523, Inf, 13.092)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, -15.599112298233171, Inf, 13.997)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, -15.588151496895508, Inf, 14.77)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, -15.578277110674751, Inf, 15.552)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, -15.568340206181993, Inf, 16.435)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, -15.561882045763287, Inf, 17.216)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, -15.552756513882967, Inf, 18.002)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, -15.54275802787037, Inf, 18.767)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, -15.534055762761854, Inf, 19.652)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, -15.524620171873726, Inf, 20.423)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, -15.514547748812324, Inf, 21.183)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, -15.50843362743141, Inf, 21.973)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, -15.500910494769718, Inf, 22.868)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, -15.495187666496426, Inf, 23.659)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, -15.488888462996462, Inf, 24.424)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, -15.481804401484325, Inf, 25.184)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, -15.477153369557163, Inf, 26.083)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6401, -15.47161951163306, Inf, 26.842)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6601, -15.465453210868288, Inf, 27.611)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6801, -15.458922579747577, Inf, 28.393)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 7001, -15.454284360823003, Inf, 29.273)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 7201, -15.449700883807553, Inf, 30.052)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 7401, -15.44433392700421, Inf, 30.823)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 7601, -15.438548180113933, Inf, 31.591)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7801, -15.43432695301398, Inf, 32.467)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 8001, -15.42884079850101, Inf, 33.241)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 8201, -15.425928843871276, Inf, 34.004)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 8401, -15.421247892321967, Inf, 34.778)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 8601, -15.415175599249077, Inf, 35.667)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 8801, -15.409582897668914, Inf, 36.453)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 9001, -15.405171138997256, Inf, 37.222)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 9201, -15.400927012655329, Inf, 37.978)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 9401, -15.39664138640063, Inf, 38.888)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 9601, -15.391914286826562, Inf, 39.672)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 9801, -15.387655793025273, Inf, 40.447)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 10001, -15.384052695992297, Inf, 41.214)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 10201, -15.38166608310167, Inf, 41.958)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 10401, -15.378963540267206, Inf, 42.856)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 10601, -15.375096300827686, Inf, 43.618)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 10801, -15.372511278526288, Inf, 44.374)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 11001, -15.36924743999789, Inf, 45.134)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 11201, -15.366009168781977, Inf, 46.029)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 11401, -15.362801556314643, Inf, 46.798)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 11601, -15.359462176147886, Inf, 47.563)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 11801, -15.355289409796008, Inf, 48.316)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 12001, -15.351784974432173, Inf, 49.208)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 12201, -15.348665791579462, Inf, 49.975)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 12401, -15.345725096656475, Inf, 50.754)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 12601, -15.34316872251837, Inf, 51.519)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 12801, -15.340202140818318, Inf, 52.415)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 13001, -15.337415046982226, Inf, 53.188)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 13201, -15.33411906210995, Inf, 53.966)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 13401, -15.330792105760587, Inf, 54.709)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 13601, -15.32789075173407, Inf, 55.596)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 13801, -15.32388644046911, Inf, 56.371)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 14001, -15.321395263615722, Inf, 57.13)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 14201, -15.31940113184455, Inf, 57.891)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7200, 14401, -15.317360444546692, Inf, 58.663)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7300, 14601, -15.31517337377778, Inf, 59.571)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7400, 14801, -15.313402159099079, Inf, 60.349)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7500, 15001, -15.311109650588149, Inf, 61.105)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7600, 15201, -15.308767432047418, Inf, 61.853)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7700, 15401, -15.306366298028639, Inf, 62.749)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7800, 15601, -15.303495303364928, Inf, 63.517)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7900, 15801, -15.300425159050997, Inf, 64.277)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8000, 16001, -15.298445807289108, Inf, 65.031)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8100, 16201, -15.296246861034833, Inf, 65.907)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8200, 16401, -15.293483589370593, Inf, 66.693)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8300, 16601, -15.291094154345434, Inf, 67.453)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8400, 16801, -15.288637449902936, Inf, 68.22)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8500, 17001, -15.286383994289945, Inf, 68.977)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8600, 17201, -15.284592490909072, Inf, 69.875)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8700, 17401, -15.282428042009052, Inf, 70.649)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8800, 17601, -15.280099837138527, Inf, 71.412)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8900, 17801, -15.27779997536979, Inf, 72.17)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9000, 18001, -15.27599457117696, Inf, 73.058)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9100, 18201, -15.27411950851328, Inf, 73.841)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9200, 18401, -15.272370233005825, Inf, 74.61)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9300, 18601, -15.270430049621453, Inf, 75.381)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9400, 18801, -15.268680376675396, Inf, 76.245)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9500, 19001, -15.266510336267395, Inf, 77.022)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9600, 19201, -15.264857288209342, Inf, 77.793)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9700, 19401, -15.26324044523809, Inf, 78.555)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9800, 19601, -15.261282099644463, Inf, 79.327)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9900, 19801, -15.25871378679108, Inf, 80.23)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10000, 20001, -15.256650393457814, Inf, 81.013)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10100, 20201, -15.2548755982708, Inf, 81.777)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10200, 20401, -15.252699969665473, Inf, 82.535)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10300, 20601, -15.250839788022347, Inf, 83.295)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10400, 20801, -15.248613978761268, Inf, 84.218)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10500, 21001, -15.246554966481881, Inf, 84.986)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10600, 21201, -15.244442562152084, Inf, 85.743)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10700, 21401, -15.242544493413078, Inf, 86.495)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10800, 21601, -15.240831155405552, Inf, 87.392)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (10900, 21801, -15.239588827351778, Inf, 88.162)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (11000, 22001, -15.238176689719811, Inf, 88.918)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (11100, 22201, -15.235989936631908, Inf, 89.689)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (11200, 22401, -15.233983926752117, Inf, 90.45)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (11300, 22601, -15.23227046122039, Inf, 91.345)
build optimizer
