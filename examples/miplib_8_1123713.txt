
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (8, 120, "integer")
seed = 8
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -0.5657497024935983, Inf, 2.824)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, 0.0381221008497889, Inf, 4.096)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 2.101049273009752, Inf, 5.698)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 3.2736149194727493, Inf, 7.569)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 4.024754006584145, Inf, 9.444)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 4.5780203720339925, Inf, 11.256)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 5.0336681068365525, Inf, 13.136)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1577, 5.329357556764588, 13.600227530556484, 14.947)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1747, 5.585359854312952, 13.600227530556484, 16.827)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1917, 5.853756910695588, 13.600227530556484, 18.675)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2083, 6.09084898715083, 13.600227530556484, 20.54)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2257, 6.3083658552240935, 13.600227530556484, 22.358)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2399, 6.4543770027397835, 13.600227530556484, 24.067)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2541, 6.611778546669207, 13.600227530556484, 25.842)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2693, 6.789175194124969, 13.600227530556484, 27.633)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2839, 6.9269849408147035, 13.600227530556484, 29.394)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2979, 7.062220147674758, 13.600227530556484, 31.003)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3115, 7.161297373744296, 13.600227530556484, 32.719)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3251, 7.325307807197101, 13.600227530556484, 34.379)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 3391, 7.457446990666951, 13.600227530556484, 36.122)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 3511, 7.554885933024472, 13.600227530556484, 37.749)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 3641, 7.6585149618902255, 13.600227530556484, 39.447)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 3769, 7.735741145911438, 13.600227530556484, 41.124)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 3901, 7.854047619186961, 13.600227530556484, 42.83)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 4027, 7.953496340087372, 13.600227530556484, 44.5)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 4145, 8.029602692937583, 13.600227530556484, 46.155)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 4271, 8.117913536397186, 13.600227530556484, 47.83)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 4387, 8.202807050830842, 13.600227530556484, 49.486)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 4513, 8.287246645514116, 13.600227530556484, 51.168)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 4647, 8.383961234234176, 13.600227530556484, 52.911)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 4771, 8.466642899903338, 13.600227530556484, 54.585)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 4901, 8.565249867752215, 13.600227530556484, 56.329)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 5015, 8.642934440685957, 13.600227530556484, 57.941)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 5135, 8.712904986520353, 13.600227530556484, 59.608)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 5251, 8.785729000945091, 13.600227530556484, 61.202)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 5363, 8.842693992226792, 13.600227530556484, 62.745)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 5473, 8.877925275423852, 13.600227530556484, 64.357)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 5589, 8.946421478858573, 13.600227530556484, 65.991)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 5707, 9.022632642762098, 13.600227530556484, 67.628)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 5821, 9.110705589324272, 13.600227530556484, 69.157)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 5939, 9.167181860247663, 13.600227530556484, 70.732)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 6049, 9.211985833970985, 13.600227530556484, 72.405)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 6163, 9.282455925612451, 13.600227530556484, 73.965)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 6277, 9.328229333346716, 13.600227530556484, 75.599)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 6389, 9.38482041101894, 13.600227530556484, 77.245)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 6499, 9.429291243684167, 13.600227530556484, 78.89)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 6611, 9.48084157729869, 13.600227530556484, 80.52)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 6727, 9.529325066868276, 13.600227530556484, 82.154)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 6833, 9.593626566719713, 13.600227530556484, 83.746)
build optimizer
