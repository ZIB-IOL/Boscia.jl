
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, mode) = (3, 65, "integer")
seed = 3
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 201, -0.8343904767459079, Inf, 2.034)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 401, -0.3416687375182432, Inf, 3.023)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 601, 0.051461806001995514, Inf, 3.954)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 801, 0.4131882631999755, Inf, 4.945)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 1001, 0.6953735446806341, Inf, 5.891)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1201, 0.8315823041073509, Inf, 6.876)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1401, 0.9579515575231639, Inf, 7.805)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1601, 1.0467460951843874, Inf, 8.822)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1801, 1.170248667752278, Inf, 9.769)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 2001, 1.2834199759606426, Inf, 10.772)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 2201, 1.353334903348227, Inf, 11.664)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2401, 1.4137567705104188, Inf, 12.636)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2601, 1.4865971491841403, Inf, 13.545)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2801, 1.5793314004510095, Inf, 14.457)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 3001, 1.6568019527651396, Inf, 15.446)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 3201, 1.7171709635558448, Inf, 16.339)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 3401, 1.793037404291561, Inf, 17.329)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3601, 1.8453846186194913, Inf, 18.232)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3801, 1.9114657576367593, Inf, 19.216)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 4001, 1.963632935922594, Inf, 20.072)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 4201, 2.0242459624415923, Inf, 20.938)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 4401, 2.0730497723624497, Inf, 21.894)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4601, 2.113318690020573, Inf, 22.765)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4801, 2.1740447027774152, Inf, 23.745)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 5001, 2.213824911616758, Inf, 24.617)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 5201, 2.2568657507349856, Inf, 25.571)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 5401, 2.29036577101957, Inf, 26.432)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 5601, 2.343111344480782, Inf, 27.327)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5801, 2.374185084572444, Inf, 28.254)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 6001, 2.4094509168247686, Inf, 29.088)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 6201, 2.435390273554874, Inf, 30.021)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 6381, 2.4741551908977746, 4.96909491434529, 30.891)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 6523, 2.5036527069327863, 4.96909491434529, 31.748)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 6659, 2.529037137432428, 4.96909491434529, 32.694)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 6787, 2.5524705975376527, 4.96909491434529, 33.533)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 6925, 2.575882969416271, 4.96909491434529, 34.519)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 7051, 2.5987047036121647, 4.96909491434529, 35.388)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 7185, 2.623272409288698, 4.96909491434529, 36.245)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 7325, 2.648619518514451, 4.96909491434529, 37.205)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 7461, 2.6747105076695252, 4.96909491434529, 38.058)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 7595, 2.6930739492044182, 4.96909491434529, 38.981)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 7741, 2.7238973863419833, 4.96909491434529, 39.836)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 7877, 2.7492263751718062, 4.96909491434529, 40.698)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 8017, 2.77652391192202, 4.96909491434529, 41.634)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 8151, 2.80467098642564, 4.96909491434529, 42.5)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 8287, 2.8279594790341194, 4.96909491434529, 43.437)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 8407, 2.8528211428251566, 4.96909491434529, 44.293)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 8541, 2.873912687421021, 4.96909491434529, 45.139)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 8669, 2.8959236395832466, 4.96909491434529, 46.073)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 8793, 2.9210357311443538, 4.96909491434529, 46.94)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 8919, 2.937547063240417, 4.96909491434529, 47.742)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5200, 9041, 2.9640445039428487, 4.96909491434529, 48.692)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5300, 9169, 2.984312849019727, 4.96909491434529, 49.542)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5400, 9293, 3.0053747410754417, 4.96909491434529, 50.474)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5500, 9421, 3.029428878178246, 4.96909491434529, 51.325)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5600, 9553, 3.050234483155669, 4.96909491434529, 52.181)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5700, 9683, 3.0696220853269045, 4.96909491434529, 53.125)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5800, 9805, 3.089144519836557, 4.96909491434529, 53.986)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5900, 9933, 3.1105462676369853, 4.96909491434529, 54.847)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6000, 10067, 3.135984492872823, 4.96909491434529, 55.799)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6100, 10189, 3.1568142723146244, 4.96909491434529, 56.63)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6200, 10313, 3.1791746045919544, 4.96909491434529, 57.563)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6300, 10435, 3.1917574796623147, 4.96909491434529, 58.379)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6400, 10555, 3.204548819831325, 4.96909491434529, 59.21)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6500, 10681, 3.225420016570151, 4.96909491434529, 60.119)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6600, 10797, 3.2405547164266615, 4.96909491434529, 60.954)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6700, 10923, 3.25425039678982, 4.96909491434529, 61.803)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6800, 11051, 3.2764918108008807, 4.96909491434529, 62.743)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (6900, 11175, 3.2926544642035993, 4.96909491434529, 63.591)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7000, 11291, 3.305320052861638, 4.96909491434529, 64.527)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7100, 11415, 3.3250776833640705, 4.96909491434529, 65.381)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7200, 11525, 3.348619903733362, 4.96909491434529, 66.201)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7300, 11645, 3.3650422693280504, 4.96909491434529, 67.144)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7400, 11765, 3.383919067953779, 4.96909491434529, 67.985)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7500, 11883, 3.399442308432969, 4.96909491434529, 68.815)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7600, 11999, 3.4173062281006805, 4.96909491434529, 69.753)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7700, 12105, 3.4339678920154677, 4.96909491434529, 70.574)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7800, 12219, 3.4526910274706726, 4.96909491434529, 71.364)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (7900, 12331, 3.46593713015628, 4.96909491434529, 72.312)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8000, 12439, 3.4792843043553217, 4.96909491434529, 73.165)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8100, 12547, 3.491843203490594, 4.96909491434529, 74.113)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8200, 12659, 3.502438818723829, 4.96909491434529, 74.946)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8300, 12735, 3.5139298865120687, 3.692370702517437, 75.779)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8400, 12797, 3.5264959913449436, 3.692370702517437, 76.711)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8500, 12855, 3.5396988620638883, 3.692370702517437, 77.564)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8600, 12923, 3.5519759031522757, 3.692370702517437, 78.455)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8700, 12997, 3.5666850021674668, 3.692370702517437, 79.393)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8800, 13057, 3.5781559680043267, 3.692370702517437, 80.217)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (8900, 13103, 3.5896155075595786, 3.662753165239929, 81.064)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9000, 13165, 3.6009287292319394, 3.662753165239929, 82.007)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9100, 13207, 3.6149599836916506, 3.662753165239929, 82.85)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9200, 13251, 3.630170019798309, 3.662753165239929, 83.656)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9300, 13283, 3.640855082696347, 3.662753165239929, 84.542)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (9400, 13321, 3.6531456782365543, 3.662753165239929, 85.358)
build optimizer
