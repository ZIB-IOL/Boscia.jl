
******************************************************************************
This program contains Ipopt, a library for large-scale nonlinear optimization.
 Ipopt is released as open source code under the Eclipse Public License (EPL).
         For more information visit https://github.com/coin-or/Ipopt
******************************************************************************

(seed, dimension, M, k, var_A) = (8, 20, 1.0, 20.0, 5)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (100, 181, 0.30551633626400576, 0.4672327889375833, 33.012)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (200, 341, 0.3055396355006008, 0.4649014448710073, 68.698)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (300, 523, 0.305554897466638, 0.4649014448710073, 103.748)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (400, 699, 0.3055644973165283, 0.4649014448710073, 138.515)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (500, 869, 0.30557632051126243, 0.4649014448710073, 173.982)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (600, 1039, 0.30558610904810224, 0.4639620255310061, 209.662)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (700, 1211, 0.3055886275341261, 0.4639620255310061, 245.495)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (800, 1383, 0.3055965231284111, 0.4639620255310061, 281.118)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (900, 1555, 0.3056024229554536, 0.4639620255310061, 316.919)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1000, 1727, 0.30561025113390755, 0.4639620255310061, 353.086)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1100, 1899, 0.3056164572887977, 0.4639620255310061, 388.59)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1200, 2079, 0.3056190645322572, 0.4639620255310061, 423.566)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1300, 2257, 0.3056247966421713, 0.4639620255310061, 458.837)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1400, 2433, 0.3056320631904691, 0.46354113581081413, 493.677)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1500, 2609, 0.3056361643514391, 0.46354113581081413, 528.818)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1600, 2783, 0.3056399166960752, 0.4634482201867211, 564.048)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1700, 2959, 0.30564394764413305, 0.4634482201867211, 599.078)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1800, 3137, 0.305648642809148, 0.4631633334546288, 634.1)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (1900, 3315, 0.3056518170007703, 0.4631633334546288, 669.046)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2000, 3491, 0.3056554289201403, 0.4631633334546288, 704.523)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2100, 3667, 0.305658174442316, 0.4631633334546288, 739.526)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2200, 3841, 0.3056615214218391, 0.4631633334546288, 774.81)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2300, 4017, 0.30566490387924194, 0.4631633334546288, 809.973)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2400, 4191, 0.3056680054433012, 0.4631633334546288, 845.083)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2500, 4367, 0.3056714021987912, 0.4631633334546288, 879.904)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2600, 4539, 0.30567614925237696, 0.4631633334546288, 914.928)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2700, 4715, 0.30568521065923193, 0.4631633334546288, 949.63)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2800, 4883, 0.3056909026417856, 0.4631633334546288, 984.458)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (2900, 5063, 0.30569393461732725, 0.4631633334546288, 1019.49)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3000, 5243, 0.30569656267097645, 0.4631633334546288, 1054.151)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3100, 5421, 0.30569886465284957, 0.4631633334546288, 1088.818)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3200, 5591, 0.3057021279563774, 0.4631633334546288, 1123.746)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3300, 5765, 0.30570487084618897, 0.4631633334546288, 1159.3)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3400, 5947, 0.3057067756707599, 0.4631633334546288, 1193.739)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3500, 6127, 0.3057087909034666, 0.4631633334546288, 1228.621)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3600, 6301, 0.3057113986600523, 0.4631633334546288, 1263.594)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3700, 6475, 0.30571459505933046, 0.4631633334546288, 1298.395)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3800, 6647, 0.3057188979260832, 0.4631633334546288, 1333.051)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (3900, 6827, 0.305722471425541, 0.4631633334546288, 1367.785)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4000, 7003, 0.30572559404896554, 0.4631633334546288, 1402.827)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4100, 7173, 0.30572886870112115, 0.4631633334546288, 1438.311)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4200, 7347, 0.3057310106122448, 0.4631633334546288, 1473.319)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4300, 7523, 0.3057345602829876, 0.4631633334546288, 1507.916)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4400, 7699, 0.30573946345893915, 0.4631633334546288, 1542.753)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4500, 7869, 0.30574201088859876, 0.4631633334546288, 1577.568)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4600, 8039, 0.30574448578495045, 0.4631633334546288, 1612.603)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4700, 8213, 0.3057462216835557, 0.4631633334546288, 1647.47)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4800, 8387, 0.30574927390009043, 0.4631633334546288, 1682.484)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (4900, 8563, 0.305754119288169, 0.4631633334546288, 1717.398)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5000, 8739, 0.3057561676097037, 0.4631633334546288, 1752.136)
(iteration, tree.num_nodes, tree.lb, tree.incumbent, time / 1000) = (5100, 8913, 0.30575785852973486, 0.46208567302766157, 1786.977)
