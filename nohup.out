┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
(seed, dimension) = (1, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (4, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (5, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (4, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (5, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (4, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (5, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 25)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 25)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 25)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (4, 25)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (5, 25)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 30)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 30)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 30)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (4, 30)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (5, 30)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (4, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (5, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (4, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (5, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (4, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (5, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 25)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 25)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 25)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (4, 25)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (5, 25)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 30)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 30)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 30)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (4, 30)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (5, 30)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (4, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (5, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (4, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (5, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (4, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (5, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 25)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 25)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 25)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (4, 25)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (5, 25)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 30)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 30)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 30)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (4, 30)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (5, 30)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (4, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (5, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (4, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (5, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (4, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (5, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 25)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 25)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 25)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (4, 25)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (5, 25)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 30)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 30)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 30)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (4, 30)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (5, 30)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 10)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (2, 10)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (3, 10)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (4, 10)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (5, 10)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (1, 15)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (2, 15)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (3, 15)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (4, 15)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (5, 15)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (1, 20)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (2, 20)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (3, 20)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (4, 20)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (5, 20)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (1, 25)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (2, 25)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (3, 25)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (4, 25)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (5, 25)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (1, 30)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (2, 30)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (3, 30)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (4, 30)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (5, 30)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (1, 50)
Away FW: true

Away FW: false

(seed, dimension) = (2, 50)
Away FW: true

Away FW: false

(seed, dimension) = (3, 50)
Away FW: true

Away FW: false

(seed, dimension) = (4, 50)
Away FW: true

Away FW: false

(seed, dimension) = (5, 50)
Away FW: true

Away FW: false

(seed, dimension) = (6, 50)
Away FW: true

Away FW: false

(seed, dimension) = (7, 50)
Away FW: true

Away FW: false

(seed, dimension) = (8, 50)
Away FW: true

Away FW: false

(seed, dimension) = (9, 50)
Away FW: true

Away FW: false

(seed, dimension) = (10, 50)
Away FW: true

Away FW: false

(seed, dimension) = (1, 60)
Away FW: true

Away FW: false

(seed, dimension) = (2, 60)
Away FW: true

Away FW: false

(seed, dimension) = (3, 60)
Away FW: true

Away FW: false

(seed, dimension) = (4, 60)
Away FW: true

Away FW: false

(seed, dimension) = (5, 60)
Away FW: true

Away FW: false

(seed, dimension) = (6, 60)
Away FW: true

Away FW: false

(seed, dimension) = (7, 60)
Away FW: true

Away FW: false

(seed, dimension) = (8, 60)
Away FW: true

Away FW: false

(seed, dimension) = (9, 60)
Away FW: true

Away FW: false

(seed, dimension) = (10, 60)
Away FW: true

Away FW: false

(seed, dimension) = (1, 70)
Away FW: true

Away FW: false

(seed, dimension) = (2, 70)
Away FW: true

Away FW: false

(seed, dimension) = (3, 70)
Away FW: true

Away FW: false

(seed, dimension) = (4, 70)
Away FW: true

Away FW: false

(seed, dimension) = (5, 70)
Away FW: true

Away FW: false

(seed, dimension) = (6, 70)
Away FW: true

Away FW: false

(seed, dimension) = (7, 70)
Away FW: true

Away FW: false

(seed, dimension) = (8, 70)
Away FW: true

Away FW: false

(seed, dimension) = (9, 70)
Away FW: true

Away FW: false

(seed, dimension) = (10, 70)
Away FW: true

Away FW: false

(seed, dimension) = (1, 80)
Away FW: true

Away FW: false

(seed, dimension) = (2, 80)
Away FW: true

Away FW: false

(seed, dimension) = (3, 80)
Away FW: true

Away FW: false

(seed, dimension) = (4, 80)
Away FW: true

Away FW: false

(seed, dimension) = (5, 80)
Away FW: true

Away FW: false

(seed, dimension) = (6, 80)
Away FW: true

Away FW: false

(seed, dimension) = (7, 80)
Away FW: true

Away FW: false

(seed, dimension) = (8, 80)
Away FW: true

Away FW: false

(seed, dimension) = (9, 80)
Away FW: true

Away FW: false

(seed, dimension) = (10, 80)
Away FW: true

Away FW: false

(seed, dimension) = (1, 90)
Away FW: true

Away FW: false

(seed, dimension) = (2, 90)
Away FW: true

Away FW: false

(seed, dimension) = (3, 90)
Away FW: true

Away FW: false

(seed, dimension) = (4, 90)
Away FW: true

Away FW: false

(seed, dimension) = (5, 90)
Away FW: true

Away FW: false

(seed, dimension) = (6, 90)
Away FW: true

Away FW: false

(seed, dimension) = (7, 90)
Away FW: true

Away FW: false

(seed, dimension) = (8, 90)
Away FW: true

Away FW: false

(seed, dimension) = (9, 90)
Away FW: true

Away FW: false

(seed, dimension) = (10, 90)
Away FW: true

Away FW: false

(seed, dimension) = (1, 100)
Away FW: true

Away FW: false

(seed, dimension) = (2, 100)
Away FW: true

Away FW: false

(seed, dimension) = (3, 100)
Away FW: true

Away FW: false

(seed, dimension) = (4, 100)
Away FW: true

Away FW: false

(seed, dimension) = (5, 100)
Away FW: true

Away FW: false

(seed, dimension) = (6, 100)
Away FW: true

Away FW: false

(seed, dimension) = (7, 100)
Away FW: true

Away FW: false

(seed, dimension) = (8, 100)
Away FW: true

Away FW: false

(seed, dimension) = (9, 100)
Away FW: true

Away FW: false

(seed, dimension) = (10, 100)
Away FW: true

Away FW: false

(seed, dimension) = (1, 110)
Away FW: true

Away FW: false

(seed, dimension) = (2, 110)
Away FW: true

Away FW: false

(seed, dimension) = (3, 110)
Away FW: true

Away FW: false

(seed, dimension) = (4, 110)
Away FW: true

Away FW: false

(seed, dimension) = (5, 110)
Away FW: true

Away FW: false

(seed, dimension) = (6, 110)
Away FW: true

Away FW: false

(seed, dimension) = (7, 110)
Away FW: true

Away FW: false

(seed, dimension) = (8, 110)
Away FW: true

Away FW: false

(seed, dimension) = (9, 110)
Away FW: true

Away FW: false

(seed, dimension) = (10, 110)
Away FW: true

Away FW: false

(seed, dimension) = (1, 120)
Away FW: true

Away FW: false

(seed, dimension) = (2, 120)
Away FW: true

Away FW: false

(seed, dimension) = (3, 120)
Away FW: true

Away FW: false

(seed, dimension) = (4, 120)
Away FW: true

Away FW: false

(seed, dimension) = (5, 120)
Away FW: true

Away FW: false

(seed, dimension) = (6, 120)
Away FW: true

Away FW: false

(seed, dimension) = (7, 120)
Away FW: true

Away FW: false

(seed, dimension) = (8, 120)
Away FW: true

Away FW: false

(seed, dimension) = (9, 120)
Away FW: true

Away FW: false

(seed, dimension) = (10, 120)
Away FW: true

Away FW: false

(seed, dimension) = (1, 130)
Away FW: true

Away FW: false

(seed, dimension) = (2, 130)
Away FW: true

Away FW: false

(seed, dimension) = (3, 130)
Away FW: true

Away FW: false

(seed, dimension) = (4, 130)
Away FW: true

Away FW: false

(seed, dimension) = (5, 130)
Away FW: true

Away FW: false

(seed, dimension) = (6, 130)
Away FW: true

Away FW: false

(seed, dimension) = (7, 130)
Away FW: true

Away FW: false

(seed, dimension) = (8, 130)
Away FW: true

Away FW: false

(seed, dimension) = (9, 130)
Away FW: true

Away FW: false

(seed, dimension) = (10, 130)
Away FW: true

Away FW: false

(seed, dimension) = (1, 140)
Away FW: true

Away FW: false

(seed, dimension) = (2, 140)
Away FW: true

Away FW: false

(seed, dimension) = (3, 140)
Away FW: true

Away FW: false

(seed, dimension) = (4, 140)
Away FW: true

Away FW: false

(seed, dimension) = (5, 140)
Away FW: true

Away FW: false

(seed, dimension) = (6, 140)
Away FW: true

Away FW: false

(seed, dimension) = (7, 140)
Away FW: true

Away FW: false

(seed, dimension) = (8, 140)
Away FW: true

Away FW: false

(seed, dimension) = (9, 140)
Away FW: true

Away FW: false

(seed, dimension) = (10, 140)
Away FW: true

Away FW: false

(seed, dimension) = (1, 150)
Away FW: true

Away FW: false

(seed, dimension) = (2, 150)
Away FW: true

Away FW: false

(seed, dimension) = (3, 150)
Away FW: true

Away FW: false

(seed, dimension) = (4, 150)
Away FW: true

Away FW: false

(seed, dimension) = (5, 150)
Away FW: true

Away FW: false

(seed, dimension) = (6, 150)
Away FW: true

Away FW: false

(seed, dimension) = (7, 150)
Away FW: true

Away FW: false

(seed, dimension) = (8, 150)
Away FW: true

Away FW: false

(seed, dimension) = (9, 150)
Away FW: true

Away FW: false

(seed, dimension) = (10, 150)
Away FW: true

Away FW: false

(seed, dimension) = (1, 50)
Away FW: true

Away FW: false

(seed, dimension) = (2, 50)
Away FW: true

Away FW: false

(seed, dimension) = (3, 50)
Away FW: true

Away FW: false

(seed, dimension) = (4, 50)
Away FW: true

Away FW: false

(seed, dimension) = (5, 50)
Away FW: true

Away FW: false

(seed, dimension) = (6, 50)
Away FW: true

Away FW: false

(seed, dimension) = (7, 50)
Away FW: true

Away FW: false

(seed, dimension) = (8, 50)
Away FW: true

Away FW: false

(seed, dimension) = (9, 50)
Away FW: true

Away FW: false

(seed, dimension) = (10, 50)
Away FW: true

Away FW: false

(seed, dimension) = (1, 60)
Away FW: true

Away FW: false

(seed, dimension) = (2, 60)
Away FW: true

Away FW: false

(seed, dimension) = (3, 60)
Away FW: true

Away FW: false

(seed, dimension) = (4, 60)
Away FW: true

Away FW: false

(seed, dimension) = (5, 60)
Away FW: true

Away FW: false

(seed, dimension) = (6, 60)
Away FW: true

Away FW: false

(seed, dimension) = (7, 60)
Away FW: true

Away FW: false

(seed, dimension) = (8, 60)
Away FW: true

Away FW: false

(seed, dimension) = (9, 60)
Away FW: true

Away FW: false

(seed, dimension) = (10, 60)
Away FW: true

Away FW: false

(seed, dimension) = (1, 70)
Away FW: true

Away FW: false

(seed, dimension) = (2, 70)
Away FW: true

Away FW: false

(seed, dimension) = (3, 70)
Away FW: true

Away FW: false

(seed, dimension) = (4, 70)
Away FW: true

Away FW: false

(seed, dimension) = (5, 70)
Away FW: true

Away FW: false

(seed, dimension) = (6, 70)
Away FW: true

Away FW: false

(seed, dimension) = (7, 70)
Away FW: true

Away FW: false

(seed, dimension) = (8, 70)
Away FW: true

Away FW: false

(seed, dimension) = (9, 70)
Away FW: true

Away FW: false

(seed, dimension) = (10, 70)
Away FW: true

Away FW: false

(seed, dimension) = (1, 80)
Away FW: true

Away FW: false

(seed, dimension) = (2, 80)
Away FW: true

Away FW: false

(seed, dimension) = (3, 80)
Away FW: true

Away FW: false

(seed, dimension) = (4, 80)
Away FW: true

Away FW: false

(seed, dimension) = (5, 80)
Away FW: true

Away FW: false

(seed, dimension) = (6, 80)
Away FW: true

Away FW: false

(seed, dimension) = (7, 80)
Away FW: true

Away FW: false

(seed, dimension) = (8, 80)
Away FW: true

Away FW: false

(seed, dimension) = (9, 80)
Away FW: true

Away FW: false

(seed, dimension) = (10, 80)
Away FW: true

Away FW: false

(seed, dimension) = (1, 90)
Away FW: true

Away FW: false

(seed, dimension) = (2, 90)
Away FW: true

Away FW: false

(seed, dimension) = (3, 90)
Away FW: true

Away FW: false

(seed, dimension) = (4, 90)
Away FW: true

Away FW: false

(seed, dimension) = (5, 90)
Away FW: true

Away FW: false

(seed, dimension) = (6, 90)
Away FW: true

Away FW: false

(seed, dimension) = (7, 90)
Away FW: true

Away FW: false

(seed, dimension) = (8, 90)
Away FW: true

Away FW: false

(seed, dimension) = (9, 90)
Away FW: true

Away FW: false

(seed, dimension) = (10, 90)
Away FW: true

Away FW: false

(seed, dimension) = (1, 100)
Away FW: true

Away FW: false

(seed, dimension) = (2, 100)
Away FW: true

Away FW: false

(seed, dimension) = (3, 100)
Away FW: true

Away FW: false

(seed, dimension) = (4, 100)
Away FW: true

Away FW: false

(seed, dimension) = (5, 100)
Away FW: true

Away FW: false

(seed, dimension) = (6, 100)
Away FW: true

Away FW: false

(seed, dimension) = (7, 100)
Away FW: true

Away FW: false

(seed, dimension) = (8, 100)
Away FW: true

Away FW: false

(seed, dimension) = (9, 100)
Away FW: true

Away FW: false

(seed, dimension) = (10, 100)
Away FW: true

Away FW: false

(seed, dimension) = (1, 110)
Away FW: true

Away FW: false

(seed, dimension) = (2, 110)
Away FW: true

Away FW: false

(seed, dimension) = (3, 110)
Away FW: true

Away FW: false

(seed, dimension) = (4, 110)
Away FW: true

Away FW: false

(seed, dimension) = (5, 110)
Away FW: true

Away FW: false

(seed, dimension) = (6, 110)
Away FW: true

Away FW: false

(seed, dimension) = (7, 110)
Away FW: true

Away FW: false

(seed, dimension) = (8, 110)
Away FW: true

Away FW: false

(seed, dimension) = (9, 110)
Away FW: true

Away FW: false

(seed, dimension) = (10, 110)
Away FW: true

Away FW: false

(seed, dimension) = (1, 120)
Away FW: true

Away FW: false

(seed, dimension) = (2, 120)
Away FW: true

Away FW: false

(seed, dimension) = (3, 120)
Away FW: true

Away FW: false

(seed, dimension) = (4, 120)
Away FW: true

Away FW: false

(seed, dimension) = (5, 120)
Away FW: true

Away FW: false

(seed, dimension) = (6, 120)
Away FW: true

Away FW: false

(seed, dimension) = (7, 120)
Away FW: true

Away FW: false

(seed, dimension) = (8, 120)
Away FW: true

Away FW: false

(seed, dimension) = (9, 120)
Away FW: true

Away FW: false

(seed, dimension) = (10, 120)
Away FW: true

Away FW: false

(seed, dimension) = (1, 130)
Away FW: true

Away FW: false

(seed, dimension) = (2, 130)
Away FW: true

Away FW: false

(seed, dimension) = (3, 130)
Away FW: true

Away FW: false

(seed, dimension) = (4, 130)
Away FW: true

Away FW: false

(seed, dimension) = (5, 130)
Away FW: true

Away FW: false

(seed, dimension) = (6, 130)
Away FW: true

Away FW: false

(seed, dimension) = (7, 130)
Away FW: true

Away FW: false

(seed, dimension) = (8, 130)
Away FW: true

Away FW: false

(seed, dimension) = (9, 130)
Away FW: true

Away FW: false

(seed, dimension) = (10, 130)
Away FW: true

Away FW: false

(seed, dimension) = (1, 140)
Away FW: true

Away FW: false

(seed, dimension) = (2, 140)
Away FW: true

Away FW: false

(seed, dimension) = (3, 140)
Away FW: true

Away FW: false

(seed, dimension) = (4, 140)
Away FW: true

Away FW: false

(seed, dimension) = (5, 140)
Away FW: true

Away FW: false

(seed, dimension) = (6, 140)
Away FW: true

Away FW: false

(seed, dimension) = (7, 140)
Away FW: true

Away FW: false

(seed, dimension) = (8, 140)
Away FW: true

Away FW: false

(seed, dimension) = (9, 140)
Away FW: true

Away FW: false

(seed, dimension) = (10, 140)
Away FW: true

Away FW: false

(seed, dimension) = (1, 150)
Away FW: true

Away FW: false

(seed, dimension) = (2, 150)
Away FW: true

Away FW: false

(seed, dimension) = (3, 150)
Away FW: true

Away FW: false

(seed, dimension) = (4, 150)
Away FW: true

Away FW: false

(seed, dimension) = (5, 150)
Away FW: true

Away FW: false

(seed, dimension) = (6, 150)
Away FW: true

Away FW: false

(seed, dimension) = (7, 150)
Away FW: true

Away FW: false

(seed, dimension) = (8, 150)
Away FW: true

Away FW: false

(seed, dimension) = (9, 150)
Away FW: true

Away FW: false

(seed, dimension) = (10, 150)
Away FW: true

Away FW: false

(seed, dimension) = (1, 50)
Away FW: true

Away FW: false

(seed, dimension) = (2, 50)
Away FW: true

Away FW: false

(seed, dimension) = (3, 50)
Away FW: true

Away FW: false

(seed, dimension) = (4, 50)
Away FW: true

Away FW: false

(seed, dimension) = (5, 50)
Away FW: true

Away FW: false

(seed, dimension) = (6, 50)
Away FW: true

Away FW: false

(seed, dimension) = (7, 50)
Away FW: true

Away FW: false

(seed, dimension) = (8, 50)
Away FW: true

Away FW: false

(seed, dimension) = (9, 50)
Away FW: true

Away FW: false

(seed, dimension) = (10, 50)
Away FW: true

Away FW: false

(seed, dimension) = (1, 60)
Away FW: true

Away FW: false

(seed, dimension) = (2, 60)
Away FW: true

Away FW: false

(seed, dimension) = (3, 60)
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
Away FW: true

Away FW: false

(seed, dimension) = (4, 60)
Away FW: true

Away FW: false

(seed, dimension) = (5, 60)
Away FW: true

Away FW: false

(seed, dimension) = (6, 60)
Away FW: true

Away FW: false

(seed, dimension) = (7, 60)
Away FW: true

Away FW: false

(seed, dimension) = (8, 60)
Away FW: true

Away FW: false

(seed, dimension) = (9, 60)
Away FW: true

Away FW: false

(seed, dimension) = (10, 60)
Away FW: true

Away FW: false

(seed, dimension) = (1, 70)
Away FW: true

Away FW: false

(seed, dimension) = (2, 70)
Away FW: true

Away FW: false

(seed, dimension) = (3, 70)
Away FW: true

Away FW: false

(seed, dimension) = (4, 70)
Away FW: true

Away FW: false

(seed, dimension) = (5, 70)
Away FW: true

Away FW: false

(seed, dimension) = (6, 70)
Away FW: true

Away FW: false

(seed, dimension) = (7, 70)
Away FW: true

Away FW: false

(seed, dimension) = (8, 70)
Away FW: true

Away FW: false

(seed, dimension) = (9, 70)
Away FW: true

Away FW: false

(seed, dimension) = (10, 70)
Away FW: true

Away FW: false

(seed, dimension) = (1, 80)
Away FW: true

Away FW: false

(seed, dimension) = (2, 80)
Away FW: true

Away FW: false

(seed, dimension) = (3, 80)
Away FW: true

Away FW: false

(seed, dimension) = (4, 80)
Away FW: true

Away FW: false

(seed, dimension) = (5, 80)
Away FW: true

Away FW: false

(seed, dimension) = (6, 80)
Away FW: true

Away FW: false

(seed, dimension) = (7, 80)
Away FW: true

Away FW: false

(seed, dimension) = (8, 80)
Away FW: true

Away FW: false

(seed, dimension) = (9, 80)
Away FW: true

Away FW: false

(seed, dimension) = (10, 80)
Away FW: true

Away FW: false

(seed, dimension) = (1, 90)
Away FW: true

Away FW: false

(seed, dimension) = (2, 90)
Away FW: true

Away FW: false

(seed, dimension) = (3, 90)
Away FW: true

Away FW: false

(seed, dimension) = (4, 90)
Away FW: true

Away FW: false

(seed, dimension) = (5, 90)
Away FW: true

Away FW: false

(seed, dimension) = (6, 90)
Away FW: true

Away FW: false

(seed, dimension) = (7, 90)
Away FW: true

Away FW: false

(seed, dimension) = (8, 90)
Away FW: true

Away FW: false

(seed, dimension) = (9, 90)
Away FW: true

Away FW: false

(seed, dimension) = (10, 90)
Away FW: true

Away FW: false

(seed, dimension) = (1, 100)
Away FW: true

Away FW: false

(seed, dimension) = (2, 100)
Away FW: true

Away FW: false

(seed, dimension) = (3, 100)
Away FW: true

Away FW: false

(seed, dimension) = (4, 100)
Away FW: true

Away FW: false

(seed, dimension) = (5, 100)
Away FW: true

Away FW: false

(seed, dimension) = (6, 100)
Away FW: true

Away FW: false

(seed, dimension) = (7, 100)
Away FW: true

Away FW: false

(seed, dimension) = (8, 100)
Away FW: true

Away FW: false

(seed, dimension) = (9, 100)
Away FW: true

Away FW: false

(seed, dimension) = (10, 100)
Away FW: true

Away FW: false

(seed, dimension) = (1, 110)
Away FW: true

Away FW: false

(seed, dimension) = (2, 110)
Away FW: true

Away FW: false

(seed, dimension) = (3, 110)
Away FW: true

Away FW: false

(seed, dimension) = (4, 110)
Away FW: true

Away FW: false

(seed, dimension) = (5, 110)
Away FW: true

Away FW: false

(seed, dimension) = (6, 110)
Away FW: true

Away FW: false

(seed, dimension) = (7, 110)
Away FW: true

Away FW: false

(seed, dimension) = (8, 110)
Away FW: true

Away FW: false

(seed, dimension) = (9, 110)
Away FW: true

Away FW: false

(seed, dimension) = (10, 110)
Away FW: true

Away FW: false

(seed, dimension) = (1, 120)
Away FW: true

Away FW: false

(seed, dimension) = (2, 120)
Away FW: true

Away FW: false

(seed, dimension) = (3, 120)
Away FW: true

Away FW: false

(seed, dimension) = (4, 120)
Away FW: true

Away FW: false

(seed, dimension) = (5, 120)
Away FW: true

Away FW: false

(seed, dimension) = (6, 120)
Away FW: true

Away FW: false

(seed, dimension) = (7, 120)
Away FW: true

Away FW: false

(seed, dimension) = (8, 120)
Away FW: true

Away FW: false

(seed, dimension) = (9, 120)
Away FW: true

Away FW: false

(seed, dimension) = (10, 120)
Away FW: true

Away FW: false

(seed, dimension) = (1, 130)
Away FW: true

Away FW: false

(seed, dimension) = (2, 130)
Away FW: true

Away FW: false

(seed, dimension) = (3, 130)
Away FW: true

Away FW: false

(seed, dimension) = (4, 130)
Away FW: true

Away FW: false

(seed, dimension) = (5, 130)
Away FW: true

Away FW: false

(seed, dimension) = (6, 130)
Away FW: true

Away FW: false

(seed, dimension) = (7, 130)
Away FW: true

Away FW: false

(seed, dimension) = (8, 130)
Away FW: true

Away FW: false

(seed, dimension) = (9, 130)
Away FW: true

Away FW: false

(seed, dimension) = (10, 130)
Away FW: true

Away FW: false

(seed, dimension) = (1, 140)
Away FW: true

Away FW: false

(seed, dimension) = (2, 140)
Away FW: true

Away FW: false

(seed, dimension) = (3, 140)
Away FW: true

Away FW: false

(seed, dimension) = (4, 140)
Away FW: true

Away FW: false

(seed, dimension) = (5, 140)
Away FW: true

Away FW: false

(seed, dimension) = (6, 140)
Away FW: true

Away FW: false

(seed, dimension) = (7, 140)
Away FW: true

Away FW: false

(seed, dimension) = (8, 140)
Away FW: true

Away FW: false

(seed, dimension) = (9, 140)
Away FW: true

Away FW: false

(seed, dimension) = (10, 140)
Away FW: true

Away FW: false

(seed, dimension) = (1, 150)
Away FW: true

Away FW: false

(seed, dimension) = (2, 150)
Away FW: true

Away FW: false

(seed, dimension) = (3, 150)
Away FW: true

Away FW: false

(seed, dimension) = (4, 150)
Away FW: true

Away FW: false

(seed, dimension) = (5, 150)
Away FW: true

Away FW: false

(seed, dimension) = (6, 150)
Away FW: true

Away FW: false

(seed, dimension) = (7, 150)
Away FW: true

Away FW: false

(seed, dimension) = (8, 150)
Away FW: true

Away FW: false

(seed, dimension) = (9, 150)
Away FW: true

Away FW: false

(seed, dimension) = (10, 150)
Away FW: true

Away FW: false

(seed, dimension) = (1, 50)
Away FW: true

Away FW: false

(seed, dimension) = (2, 50)
Away FW: true

Away FW: false

(seed, dimension) = (3, 50)
Away FW: true

Away FW: false

(seed, dimension) = (4, 50)
Away FW: true

Away FW: false

(seed, dimension) = (5, 50)
Away FW: true

Away FW: false

(seed, dimension) = (6, 50)
Away FW: true

Away FW: false

(seed, dimension) = (7, 50)
Away FW: true

Away FW: false

(seed, dimension) = (8, 50)
Away FW: true

Away FW: false

(seed, dimension) = (9, 50)
Away FW: true

Away FW: false

(seed, dimension) = (10, 50)
Away FW: true

Away FW: false

(seed, dimension) = (1, 60)
Away FW: true

Away FW: false

(seed, dimension) = (2, 60)
Away FW: true

Away FW: false

(seed, dimension) = (3, 60)
Away FW: true

Away FW: false

(seed, dimension) = (4, 60)
Away FW: true

Away FW: false

(seed, dimension) = (5, 60)
Away FW: true

Away FW: false

(seed, dimension) = (6, 60)
Away FW: true

Away FW: false

(seed, dimension) = (7, 60)
Away FW: true

Away FW: false

(seed, dimension) = (8, 60)
Away FW: true

Away FW: false

(seed, dimension) = (9, 60)
Away FW: true

Away FW: false

(seed, dimension) = (10, 60)
Away FW: true

Away FW: false

(seed, dimension) = (1, 70)
Away FW: true

Away FW: false

(seed, dimension) = (2, 70)
Away FW: true

Away FW: false

(seed, dimension) = (3, 70)
Away FW: true

Away FW: false

(seed, dimension) = (4, 70)
Away FW: true

Away FW: false

(seed, dimension) = (5, 70)
Away FW: true

Away FW: false

(seed, dimension) = (6, 70)
Away FW: true

Away FW: false

(seed, dimension) = (7, 70)
Away FW: true

Away FW: false

(seed, dimension) = (8, 70)
Away FW: true

Away FW: false

(seed, dimension) = (9, 70)
Away FW: true

Away FW: false

(seed, dimension) = (10, 70)
Away FW: true

Away FW: false

(seed, dimension) = (1, 80)
Away FW: true

Away FW: false

(seed, dimension) = (2, 80)
Away FW: true

Away FW: false

(seed, dimension) = (3, 80)
Away FW: true

Away FW: false

(seed, dimension) = (4, 80)
Away FW: true

Away FW: false

(seed, dimension) = (5, 80)
Away FW: true

Away FW: false

(seed, dimension) = (6, 80)
Away FW: true

Away FW: false

(seed, dimension) = (7, 80)
Away FW: true

Away FW: false

(seed, dimension) = (8, 80)
Away FW: true

Away FW: false

(seed, dimension) = (9, 80)
Away FW: true

Away FW: false

(seed, dimension) = (10, 80)
Away FW: true

Away FW: false

(seed, dimension) = (1, 90)
Away FW: true

Away FW: false

(seed, dimension) = (2, 90)
Away FW: true

Away FW: false

(seed, dimension) = (3, 90)
Away FW: true

Away FW: false

(seed, dimension) = (4, 90)
Away FW: true

Away FW: false

(seed, dimension) = (5, 90)
Away FW: true

Away FW: false

(seed, dimension) = (6, 90)
Away FW: true

Away FW: false

(seed, dimension) = (7, 90)
Away FW: true

Away FW: false

(seed, dimension) = (8, 90)
Away FW: true

Away FW: false

(seed, dimension) = (9, 90)
Away FW: true

Away FW: false

(seed, dimension) = (10, 90)
Away FW: true

Away FW: false

(seed, dimension) = (1, 100)
Away FW: true

Away FW: false

(seed, dimension) = (2, 100)
Away FW: true

Away FW: false

(seed, dimension) = (3, 100)
Away FW: true

Away FW: false

(seed, dimension) = (4, 100)
Away FW: true

Away FW: false

(seed, dimension) = (5, 100)
Away FW: true

Away FW: false

(seed, dimension) = (6, 100)
Away FW: true

Away FW: false

(seed, dimension) = (7, 100)
Away FW: true

Away FW: false

(seed, dimension) = (8, 100)
Away FW: true

Away FW: false

(seed, dimension) = (9, 100)
Away FW: true

Away FW: false

(seed, dimension) = (10, 100)
Away FW: true

Away FW: false

(seed, dimension) = (1, 110)
Away FW: true

Away FW: false

(seed, dimension) = (2, 110)
Away FW: true

Away FW: false

(seed, dimension) = (3, 110)
Away FW: true

Away FW: false

(seed, dimension) = (4, 110)
Away FW: true

Away FW: false

(seed, dimension) = (5, 110)
Away FW: true

Away FW: false

(seed, dimension) = (6, 110)
Away FW: true

Away FW: false

(seed, dimension) = (7, 110)
Away FW: true

Away FW: false

(seed, dimension) = (8, 110)
Away FW: true

Away FW: false

(seed, dimension) = (9, 110)
Away FW: true

Away FW: false

(seed, dimension) = (10, 110)
Away FW: true

Away FW: false

(seed, dimension) = (1, 120)
Away FW: true

Away FW: false

(seed, dimension) = (2, 120)
Away FW: true

Away FW: false

(seed, dimension) = (3, 120)
Away FW: true

Away FW: false

(seed, dimension) = (4, 120)
Away FW: true

Away FW: false

(seed, dimension) = (5, 120)
Away FW: true

Away FW: false

(seed, dimension) = (6, 120)
Away FW: true

Away FW: false

(seed, dimension) = (7, 120)
Away FW: true

Away FW: false

(seed, dimension) = (8, 120)
Away FW: true

Away FW: false

(seed, dimension) = (9, 120)
Away FW: true

Away FW: false

(seed, dimension) = (10, 120)
Away FW: true

Away FW: false

(seed, dimension) = (1, 130)
Away FW: true

Away FW: false

(seed, dimension) = (2, 130)
Away FW: true

Away FW: false

(seed, dimension) = (3, 130)
Away FW: true

Away FW: false

(seed, dimension) = (4, 130)
Away FW: true

Away FW: false

(seed, dimension) = (5, 130)
Away FW: true

Away FW: false

(seed, dimension) = (6, 130)
Away FW: true

Away FW: false

(seed, dimension) = (7, 130)
Away FW: true

Away FW: false

(seed, dimension) = (8, 130)
Away FW: true

Away FW: false

(seed, dimension) = (9, 130)
Away FW: true

Away FW: false

(seed, dimension) = (10, 130)
Away FW: true

Away FW: false

(seed, dimension) = (1, 140)
Away FW: true

Away FW: false

(seed, dimension) = (2, 140)
Away FW: true

Away FW: false

(seed, dimension) = (3, 140)
Away FW: true

Away FW: false

(seed, dimension) = (4, 140)
Away FW: true

Away FW: false

(seed, dimension) = (5, 140)
Away FW: true

Away FW: false

(seed, dimension) = (6, 140)
Away FW: true

Away FW: false

(seed, dimension) = (7, 140)
Away FW: true

Away FW: false

(seed, dimension) = (8, 140)
Away FW: true

Away FW: false

(seed, dimension) = (9, 140)
Away FW: true

Away FW: false

(seed, dimension) = (10, 140)
Away FW: true

Away FW: false

(seed, dimension) = (1, 150)
Away FW: true

Away FW: false

(seed, dimension) = (2, 150)
Away FW: true

Away FW: false

(seed, dimension) = (3, 150)
Away FW: true

Away FW: false

(seed, dimension) = (4, 150)
Away FW: true

Away FW: false

(seed, dimension) = (5, 150)
Away FW: true

Away FW: false

(seed, dimension) = (6, 150)
Away FW: true

Away FW: false

(seed, dimension) = (7, 150)
Away FW: true

Away FW: false

(seed, dimension) = (8, 150)
Away FW: true

Away FW: false

(seed, dimension) = (9, 150)
Away FW: true

Away FW: false

(seed, dimension) = (10, 150)
Away FW: true

Away FW: false

(seed, dimension) = (1, 50)
Away FW: true

Away FW: true

(seed, dimension) = (2, 50)
Away FW: true

Away FW: true

(seed, dimension) = (3, 50)
Away FW: true

Away FW: true

(seed, dimension) = (4, 50)
Away FW: true

Away FW: true

(seed, dimension) = (5, 50)
Away FW: true

Away FW: true

(seed, dimension) = (6, 50)
Away FW: true

Away FW: true

(seed, dimension) = (7, 50)
Away FW: true

Away FW: true

(seed, dimension) = (8, 50)
Away FW: true

Away FW: true

(seed, dimension) = (9, 50)
Away FW: true

Away FW: true

(seed, dimension) = (10, 50)
Away FW: true

Away FW: true

(seed, dimension) = (1, 60)
Away FW: true

Away FW: true

(seed, dimension) = (2, 60)
Away FW: true

Away FW: true

(seed, dimension) = (3, 60)
Away FW: true

Away FW: true

(seed, dimension) = (4, 60)
Away FW: true

Away FW: true

(seed, dimension) = (5, 60)
Away FW: true

Away FW: true

(seed, dimension) = (6, 60)
Away FW: true

Away FW: true

(seed, dimension) = (7, 60)
Away FW: true

Away FW: true

(seed, dimension) = (8, 60)
Away FW: true

Away FW: true

(seed, dimension) = (9, 60)
Away FW: true

Away FW: true

(seed, dimension) = (10, 60)
Away FW: true

Away FW: true

(seed, dimension) = (1, 70)
Away FW: true

Away FW: true

(seed, dimension) = (2, 70)
Away FW: true

Away FW: true

(seed, dimension) = (3, 70)
Away FW: true

Away FW: true

(seed, dimension) = (4, 70)
Away FW: true

Away FW: true

(seed, dimension) = (5, 70)
Away FW: true

Away FW: true

(seed, dimension) = (6, 70)
Away FW: true

Away FW: true

(seed, dimension) = (7, 70)
Away FW: true

Away FW: true

(seed, dimension) = (8, 70)
Away FW: true

Away FW: true

(seed, dimension) = (9, 70)
Away FW: true

Away FW: true

(seed, dimension) = (10, 70)
Away FW: true

Away FW: true

(seed, dimension) = (1, 80)
Away FW: true

Away FW: true

(seed, dimension) = (2, 80)
Away FW: true

Away FW: true

(seed, dimension) = (3, 80)
Away FW: true

Away FW: true

(seed, dimension) = (4, 80)
Away FW: true

Away FW: true

(seed, dimension) = (5, 80)
Away FW: true

Away FW: true

(seed, dimension) = (6, 80)
Away FW: true

Away FW: true

(seed, dimension) = (7, 80)
Away FW: true

Away FW: true

(seed, dimension) = (8, 80)
Away FW: true

Away FW: true

(seed, dimension) = (9, 80)
Away FW: true

Away FW: true

(seed, dimension) = (10, 80)
Away FW: true

Away FW: true

(seed, dimension) = (1, 90)
Away FW: true

Away FW: true

(seed, dimension) = (2, 90)
Away FW: true

Away FW: true

(seed, dimension) = (3, 90)
Away FW: true

Away FW: true

(seed, dimension) = (4, 90)
Away FW: true

Away FW: true

(seed, dimension) = (5, 90)
Away FW: true

Away FW: true

(seed, dimension) = (6, 90)
Away FW: true

Away FW: true

(seed, dimension) = (7, 90)
Away FW: true

Away FW: true

(seed, dimension) = (8, 90)
Away FW: true

Away FW: true

(seed, dimension) = (9, 90)
Away FW: true

Away FW: true

(seed, dimension) = (10, 90)
Away FW: true

Away FW: true

(seed, dimension) = (1, 100)
Away FW: true

Away FW: true

(seed, dimension) = (2, 100)
Away FW: true

Away FW: true

(seed, dimension) = (3, 100)
Away FW: true

Away FW: true

(seed, dimension) = (4, 100)
Away FW: true

Away FW: true

(seed, dimension) = (5, 100)
Away FW: true

Away FW: true

(seed, dimension) = (6, 100)
Away FW: true

Away FW: true

(seed, dimension) = (7, 100)
Away FW: true

Away FW: true

(seed, dimension) = (8, 100)
Away FW: true

Away FW: true

(seed, dimension) = (9, 100)
Away FW: true

Away FW: true

(seed, dimension) = (10, 100)
Away FW: true

Away FW: true

(seed, dimension) = (1, 110)
Away FW: true

Away FW: true

(seed, dimension) = (2, 110)
Away FW: true

Away FW: true

(seed, dimension) = (3, 110)
Away FW: true

Away FW: true

(seed, dimension) = (4, 110)
Away FW: true

Away FW: true

(seed, dimension) = (5, 110)
Away FW: true

Away FW: true

(seed, dimension) = (6, 110)
Away FW: true

Away FW: true

(seed, dimension) = (7, 110)
Away FW: true

Away FW: true

(seed, dimension) = (8, 110)
Away FW: true

Away FW: true

(seed, dimension) = (9, 110)
Away FW: true

Away FW: true

(seed, dimension) = (10, 110)
Away FW: true

Away FW: true

(seed, dimension) = (1, 120)
Away FW: true

Away FW: true

(seed, dimension) = (2, 120)
Away FW: true

Away FW: true

(seed, dimension) = (3, 120)
Away FW: true

Away FW: true

(seed, dimension) = (4, 120)
Away FW: true

Away FW: true

(seed, dimension) = (5, 120)
Away FW: true

Away FW: true

(seed, dimension) = (6, 120)
Away FW: true

Away FW: true

(seed, dimension) = (7, 120)
Away FW: true

Away FW: true

(seed, dimension) = (8, 120)
Away FW: true

Away FW: true

(seed, dimension) = (9, 120)
Away FW: true

Away FW: true

(seed, dimension) = (10, 120)
Away FW: true

Away FW: true

(seed, dimension) = (1, 130)
Away FW: true

Away FW: true

(seed, dimension) = (2, 130)
Away FW: true

Away FW: true

(seed, dimension) = (3, 130)
Away FW: true

Away FW: true

(seed, dimension) = (4, 130)
Away FW: true

Away FW: true

(seed, dimension) = (5, 130)
Away FW: true

Away FW: true

(seed, dimension) = (6, 130)
Away FW: true

Away FW: true

(seed, dimension) = (7, 130)
Away FW: true

Away FW: true

(seed, dimension) = (8, 130)
Away FW: true

Away FW: true

(seed, dimension) = (9, 130)
Away FW: true

Away FW: true

(seed, dimension) = (10, 130)
Away FW: true

Away FW: true

(seed, dimension) = (1, 140)
Away FW: true

Away FW: true

(seed, dimension) = (2, 140)
Away FW: true

Away FW: true

(seed, dimension) = (3, 140)
Away FW: true

Away FW: true

(seed, dimension) = (4, 140)
Away FW: true

Away FW: true

(seed, dimension) = (5, 140)
Away FW: true

Away FW: true

(seed, dimension) = (6, 140)
Away FW: true

Away FW: true

(seed, dimension) = (7, 140)
Away FW: true

Away FW: true

(seed, dimension) = (8, 140)
Away FW: true

Away FW: true

(seed, dimension) = (9, 140)
Away FW: true

Away FW: true

(seed, dimension) = (10, 140)
Away FW: true

Away FW: true

(seed, dimension) = (1, 150)
Away FW: true

Away FW: true

(seed, dimension) = (2, 150)
Away FW: true

Away FW: true

(seed, dimension) = (3, 150)
Away FW: true

Away FW: true

(seed, dimension) = (4, 150)
Away FW: true

Away FW: true

(seed, dimension) = (5, 150)
Away FW: true

Away FW: true

(seed, dimension) = (6, 150)
Away FW: true

Away FW: true

(seed, dimension) = (7, 150)
Away FW: true

Away FW: true

(seed, dimension) = (8, 150)
Away FW: true

Away FW: true

(seed, dimension) = (9, 150)
Away FW: true

Away FW: true

(seed, dimension) = (10, 150)
Away FW: true

Away FW: true

(seed, dimension) = (1, 30)
Away FW: false


Boscia Algorithm.

Parameter settings.
	 Tree traversal strategy: Move best bound
	 Branching strategy: Most infeasible
	 Absolute dual gap tolerance: 1.000000e-06
	 Relative dual gap tolerance: 1.000000e-02
	 Frank-Wolfe subproblem tolerance: 1.000000e-02
	 Frank-Wolfe dual gap decay factor: 8.000000e-01
	 Additional kwargs: 
Away FW: false
	 Total number of variables: 300
	 Number of integer variables: 0
	 Number of binary variables: 150


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Iter  Open          Bound      Incumbent      Gap (abs)      Gap (rel)       Time (s)      Nodes/sec      FW (ms)   LMO (ms)  LMO (calls c)   FW (its) #activeset  #shadow
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*     1     2   3.219937e+00   3.717062e+00   4.971256e-01   1.543899e-01   1.693000e+00   1.772002e+00          938        324             43        307        8        1
*    13    14   3.309535e+00   3.680463e+00   3.709276e-01   1.120785e-01   1.456000e+01   1.854396e+00         1236        349            411        219        7        2
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
*    33    34   3.360753e+00   3.666072e+00   3.053196e-01   9.084857e-02   3.491000e+01   1.919221e+00          943        280           1059        175        8        1
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
*    39    40   3.369121e+00   3.635730e+00   2.666085e-01   7.913295e-02   4.068900e+01   1.941557e+00         1167        357           1272        227       11        2
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
    100   101   3.419994e+00   3.635730e+00   2.157361e-01   6.308084e-02   1.043420e+02   1.926358e+00         1063        232           3258        264        8        3
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
    200   201   3.456452e+00   3.635730e+00   1.792776e-01   5.186753e-02   1.953790e+02   2.052421e+00          305         95           6417        158       11        1
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
*   223   224   3.462394e+00   3.622367e+00   1.599737e-01   4.620322e-02   2.130210e+02   2.098385e+00         1491        179           7150        524        9        3
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
*   285   286   3.474390e+00   3.617797e+00   1.434074e-01   4.127557e-02   2.572670e+02   2.219484e+00         1010        125           9113        521        8        3
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
    300   301   3.477012e+00   3.617797e+00   1.407851e-01   4.049026e-02   2.711990e+02   2.216085e+00          749        200           9609        147       13        3
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
    400   401   3.494736e+00   3.617797e+00   1.230610e-01   3.521325e-02   3.797830e+02   2.109099e+00          712        207          12725        126        6        3
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
    500   501   3.506427e+00   3.617797e+00   1.113697e-01   3.176160e-02   4.812330e+02   2.080073e+00          562        154          15833        203       13        5
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
    600   601   3.516154e+00   3.617797e+00   1.016434e-01   2.890754e-02   5.679810e+02   2.114507e+00         1115        199          18810        269       11        4
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
    700   693   3.524406e+00   3.617797e+00   9.339126e-02   2.649844e-02   6.709440e+02   2.076179e+00          497        141          21873        107        9        4
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
    800   771   3.532489e+00   3.617797e+00   8.530837e-02   2.414965e-02   7.749140e+02   2.027322e+00          631        192          24848        127       11        2
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
    900   825   3.538471e+00   3.617797e+00   7.932626e-02   2.241823e-02   8.763780e+02   1.968329e+00          478         93          27730         96        7        2
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
   1000   865   3.544772e+00   3.617797e+00   7.302490e-02   2.060073e-02   1.104794e+03   1.688098e+00         3026        262          30550        249        9        5
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
   1100   905   3.549087e+00   3.617797e+00   6.871052e-02   1.936006e-02   1.326358e+03   1.511658e+00         2073        348          33373        234       13        3
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
   1200   923   3.553317e+00   3.617797e+00   6.448027e-02   1.814650e-02   1.535270e+03   1.382819e+00         3307        293          35972        246       16        3
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
   1300   937   3.557658e+00   3.617797e+00   6.013894e-02   1.690408e-02   1.748323e+03   1.279512e+00          305         68          38555         92        5        3
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
   1369   940   3.560153e+00   3.617797e+00   5.764452e-02   1.619159e-02   1.801279e+03   1.281867e+00         2170        393          40290        435       10        7
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Postprocessing

Blended Pairwise Conditional Gradient Algorithm.
MEMORY_MODE: FrankWolfe.InplaceEmphasis() STEPSIZE: Adaptive EPSILON: 1.0e-7 MAXITERATION: 10000 TYPE: Float64
GRADIENTTYPE: Nothing LAZY: true lazy_tolerance: 2.0

----------------------------------------------------------------------------------------------------------------
  Type     Iteration         Primal           Dual       Dual Gap           Time         It/sec     #ActiveSet
----------------------------------------------------------------------------------------------------------------
     I             1   3.217097e+01  -2.322638e+01   5.539734e+01   0.000000e+00            Inf              1
    LD             4   7.964431e+00  -9.339975e-02   8.057831e+00   8.103742e-01   4.935991e+00              2
    LD             9   3.673470e+00   3.602680e+00   7.078947e-02   8.751590e-01   1.028385e+01              2
    LD            11   3.617797e+00   3.617797e+00  -2.220446e-16   8.812164e-01   1.248275e+01              1
  Last            11   3.617797e+00   3.617797e+00   0.000000e+00   8.937523e-01   1.230766e+01              1
----------------------------------------------------------------------------------------------------------------
    PP            11   3.617797e+00   3.617797e+00   0.000000e+00   9.018978e-01   1.219650e+01              1
----------------------------------------------------------------------------------------------------------------

Solution Statistics.
	 Solution Status: Time limit reached
	 Primal Objective: 3.6177972196873176
	 Dual Bound: 3.56015269666405
	 Dual Gap (relative): 0.016191587253345043

Search Statistics.
	 Total number of nodes processed: 2309
	 Total number of lmo calls: 40297
	 Total time (s): 1802.218
	 LMO calls / sec: 22.359670139794407
	 Nodes / sec: 1.2811990558300939
	 LMO calls / node: 17.452143785188394


(seed, dimension) = (2, 30)
Away FW: false


Boscia Algorithm.

Parameter settings.
	 Tree traversal strategy: Move best bound
	 Branching strategy: Most infeasible
	 Absolute dual gap tolerance: 1.000000e-06
	 Relative dual gap tolerance: 1.000000e-02
	 Frank-Wolfe subproblem tolerance: 1.000000e-02
	 Frank-Wolfe dual gap decay factor: 8.000000e-01
	 Additional kwargs: 
Away FW: false
	 Total number of variables: 300
	 Number of integer variables: 0
	 Number of binary variables: 150


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Iter  Open          Bound      Incumbent      Gap (abs)      Gap (rel)       Time (s)      Nodes/sec      FW (ms)   LMO (ms)  LMO (calls c)   FW (its) #activeset  #shadow
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*     1     2   3.574775e+00   4.283115e+00   7.083401e-01   1.981496e-01   5.920000e-01   5.067568e+00          587        218             40        272        8        1
*    13    14   3.682086e+00   4.220716e+00   5.386296e-01   1.462838e-01   9.105000e+00   2.965404e+00         1836        466            445        329       10        3
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
*    55    56   3.771939e+00   4.177943e+00   4.060039e-01   1.076380e-01   5.752400e+01   1.929629e+00         1285        345           1921        282        9        1
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
    100   101   3.808965e+00   4.177943e+00   3.689779e-01   9.687090e-02   1.236430e+02   1.625648e+00         1376        361           3522        324       20        8
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
    200   201   3.857724e+00   4.177943e+00   3.202193e-01   8.300732e-02   2.476420e+02   1.619273e+00         1397        225           7126        365       16        4
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
*   249   250   3.874437e+00   4.115567e+00   2.411295e-01   6.223600e-02   3.349560e+02   1.489748e+00         2150        197           8829        247        7        3
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
    300   301   3.882489e+00   4.115567e+00   2.330778e-01   6.003308e-02   4.456050e+02   1.348728e+00          652        174          10565        239       13        2
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
    400   401   3.903124e+00   4.115567e+00   2.124429e-01   5.442895e-02   6.655200e+02   1.203570e+00         1203        110          13826        120       10        3
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
    500   501   3.917380e+00   4.115567e+00   1.981869e-01   5.059171e-02   9.560400e+02   1.047027e+00         1614        246          17140        141       10        2
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
    600   601   3.928567e+00   4.115567e+00   1.869995e-01   4.759993e-02   1.291920e+03   9.296241e-01         2591        341          20431        186       10        6
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
    700   701   3.939066e+00   4.115567e+00   1.765004e-01   4.480767e-02   1.625916e+03   8.616681e-01         1449         76          23656        107        6        2
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
set = MathOptInterface.LessThan{Float64}(0.0)
v[idx] = 1.0
    771   772   3.945826e+00   4.115567e+00   1.697410e-01   4.301786e-02   1.801097e+03   8.567001e-01         1765        254          25825        322        4        1
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Postprocessing

Blended Pairwise Conditional Gradient Algorithm.
MEMORY_MODE: FrankWolfe.InplaceEmphasis() STEPSIZE: Adaptive EPSILON: 1.0e-7 MAXITERATION: 10000 TYPE: Float64
GRADIENTTYPE: Nothing LAZY: true lazy_tolerance: 2.0

----------------------------------------------------------------------------------------------------------------
  Type     Iteration         Primal           Dual       Dual Gap           Time         It/sec     #ActiveSet
----------------------------------------------------------------------------------------------------------------
     I             1   2.611131e+01  -1.445758e+01   4.056888e+01   0.000000e+00            Inf              1
    LD             4   7.615111e+00   1.819429e+00   5.795683e+00   3.276993e-02   1.220631e+02              2
    LD             9   4.115567e+00   4.115567e+00   0.000000e+00   4.388434e-02   2.050845e+02              1
  Last             9   4.115567e+00   4.115567e+00   0.000000e+00   6.361326e-02   1.414799e+02              1
----------------------------------------------------------------------------------------------------------------
    PP             9   4.115567e+00   4.115567e+00   0.000000e+00   7.017505e-02   1.282507e+02              1
----------------------------------------------------------------------------------------------------------------

Solution Statistics.
	 Solution Status: Time limit reached
	 Primal Objective: 4.115566751961235
	 Dual Bound: 3.9458257884270447
	 Dual Gap (relative): 0.04301785548465772

Search Statistics.
	 Total number of nodes processed: 1543
	 Total number of lmo calls: 25831
	 Total time (s): 1801.223
	 LMO calls / sec: 14.340811770669152
	 Nodes / sec: 0.8566401828091247
	 LMO calls / node: 16.740764744005183


(seed, dimension) = (1, 30)
Away FW: false


Boscia Algorithm.

Parameter settings.
	 Tree traversal strategy: Move best bound
	 Branching strategy: Most infeasible
	 Absolute dual gap tolerance: 1.000000e-06
	 Relative dual gap tolerance: 1.000000e-02
	 Frank-Wolfe subproblem tolerance: 1.000000e-02
	 Frank-Wolfe dual gap decay factor: 8.000000e-01
	 Additional kwargs: 
Away FW: false
	 Total number of variables: 300
	 Number of integer variables: 0
	 Number of binary variables: 150


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Iter  Open          Bound      Incumbent      Gap (abs)      Gap (rel)       Time (s)      Nodes/sec      FW (ms)   LMO (ms)  LMO (calls c)   FW (its) #activeset  #shadow
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*     1     2   3.219937e+00   3.717062e+00   4.971256e-01   1.543899e-01   1.813000e+00   1.654716e+00         1794        545             43        307        8        1
*    13    14   3.309535e+00   3.680463e+00   3.709276e-01   1.120785e-01   1.362100e+01   1.982233e+00          521        205            411        219        7        2
*    33    34   3.360753e+00   3.666072e+00   3.053196e-01   9.084857e-02   3.342000e+01   2.004788e+00         1295        375           1059        175        8        3
*    39    40   3.369121e+00   3.635730e+00   2.666085e-01   7.913295e-02   3.890500e+01   2.030587e+00         1000        293           1272        227       11        7
    100   101   3.419994e+00   3.635730e+00   2.157361e-01   6.308084e-02   1.014420e+02   1.981428e+00         1143        258           3304        278       11        4
    200   201   3.456026e+00   3.635730e+00   1.797041e-01   5.199734e-02   2.148050e+02   1.866809e+00         1008        304           6685        209       10        3
*   229   230   3.463296e+00   3.622367e+00   1.590717e-01   4.593073e-02   2.459990e+02   1.865861e+00         1918        404           7628        369       10        2
*   293   294   3.474603e+00   3.617797e+00   1.431939e-01   4.121159e-02   3.109700e+02   1.887642e+00         1531        214           9859        482        8        4
    300   301   3.475125e+00   3.617797e+00   1.426724e-01   4.105534e-02   3.182650e+02   1.888363e+00          825        261          10090        162       12        3
    400   401   3.492487e+00   3.617797e+00   1.253100e-01   3.587988e-02   4.170090e+02   1.920822e+00          345        123          13542        160       14        4
    500   501   3.503818e+00   3.617797e+00   1.139788e-01   3.252989e-02   4.920040e+02   2.034536e+00         1681        265          17101        301       18        3
    600   601   3.513036e+00   3.617797e+00   1.047615e-01   2.982079e-02   5.872020e+02   2.045293e+00          629        200          20523        318       12        3
    700   691   3.521751e+00   3.617797e+00   9.604662e-02   2.727241e-02   6.890040e+02   2.018856e+00          514        146          24047        259       11        4
    800   769   3.527436e+00   3.617797e+00   9.036107e-02   2.561664e-02   8.077780e+02   1.942365e+00         1192        267          27567        317       17        8
    900   831   3.534436e+00   3.617797e+00   8.336110e-02   2.358540e-02   8.738020e+02   1.980998e+00          985        260          31058        235       15        4
   1000   881   3.539943e+00   3.617797e+00   7.785376e-02   2.199294e-02   9.770470e+02   1.925189e+00         1310        362          34462        294       19        8
   1100   917   3.544292e+00   3.617797e+00   7.350488e-02   2.073894e-02   1.066738e+03   1.890811e+00          960        267          37699        206        8        7
   1200   945   3.547845e+00   3.617797e+00   6.995181e-02   1.971670e-02   1.154444e+03   1.858037e+00         1372        393          40834        241       11        2
   1300   969   3.551308e+00   3.617797e+00   6.648880e-02   1.872234e-02   1.328783e+03   1.707578e+00         2327        445          43986        338       16        4
   1400   981   3.555591e+00   3.617797e+00   6.220646e-02   1.749539e-02   1.504001e+03   1.583111e+00          497        113          46946         52        8        3
   1500   989   3.558991e+00   3.617797e+00   5.880661e-02   1.652340e-02   1.651259e+03   1.507335e+00         1745        340          49873        229       13        5
   1600   993   3.561272e+00   3.617797e+00   5.652486e-02   1.587210e-02   1.780682e+03   1.456184e+00          922        157          52450        190       15       10
   1616   993   3.562536e+00   3.617797e+00   5.526107e-02   1.551172e-02   1.801406e+03   1.448313e+00         2134        290          52824        248       18        6
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Postprocessing

Blended Pairwise Conditional Gradient Algorithm.
MEMORY_MODE: FrankWolfe.InplaceEmphasis() STEPSIZE: Adaptive EPSILON: 1.0e-7 MAXITERATION: 10000 TYPE: Float64
GRADIENTTYPE: Nothing LAZY: true lazy_tolerance: 2.0

----------------------------------------------------------------------------------------------------------------
  Type     Iteration         Primal           Dual       Dual Gap           Time         It/sec     #ActiveSet
----------------------------------------------------------------------------------------------------------------
     I             1   3.217097e+01  -2.322638e+01   5.539734e+01   0.000000e+00            Inf              1
    LD             4   7.964431e+00  -9.339975e-02   8.057831e+00   7.392171e-03   5.411130e+02              2
    LD             9   3.673470e+00   3.602680e+00   7.078947e-02   2.372162e-02   3.794007e+02              2
    LD            11   3.617797e+00   3.617797e+00  -2.220446e-16   3.925979e-02   2.801849e+02              1
  Last            11   3.617797e+00   3.617797e+00   0.000000e+00   6.757217e-02   1.627889e+02              1
----------------------------------------------------------------------------------------------------------------
    PP            11   3.617797e+00   3.617797e+00   0.000000e+00   8.374382e-02   1.313530e+02              1
----------------------------------------------------------------------------------------------------------------

Solution Statistics.
	 Solution Status: Time limit reached
	 Primal Objective: 3.6177972196873176
	 Dual Bound: 3.5625361491705925
	 Dual Gap (relative): 0.01551172204374422

Search Statistics.
	 Total number of nodes processed: 2609
	 Total number of lmo calls: 52831
	 Total time (s): 1801.526
	 LMO calls / sec: 29.325693883962817
	 Nodes / sec: 1.448216678526982
	 LMO calls / node: 20.24952088922959


(seed, dimension) = (2, 30)
Away FW: false


Boscia Algorithm.

Parameter settings.
	 Tree traversal strategy: Move best bound
	 Branching strategy: Most infeasible
	 Absolute dual gap tolerance: 1.000000e-06
	 Relative dual gap tolerance: 1.000000e-02
	 Frank-Wolfe subproblem tolerance: 1.000000e-02
	 Frank-Wolfe dual gap decay factor: 8.000000e-01
	 Additional kwargs: 
Away FW: false
	 Total number of variables: 300
	 Number of integer variables: 0
	 Number of binary variables: 150


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Iter  Open          Bound      Incumbent      Gap (abs)      Gap (rel)       Time (s)      Nodes/sec      FW (ms)   LMO (ms)  LMO (calls c)   FW (its) #activeset  #shadow
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*     1     2   3.574775e+00   4.339892e+00   7.651176e-01   2.140324e-01   2.115000e+00   1.418440e+00         2099        480             40        272        8        1
*     7     8   3.641860e+00   4.337613e+00   6.957521e-01   1.910430e-01   1.302200e+01   1.151897e+00         2421        352            231        236       12        2
*    11    12   3.668516e+00   4.283115e+00   6.145985e-01   1.675333e-01   2.268700e+01   1.013796e+00         2498        341            378        292       13        3
*    13    14   3.682086e+00   4.220716e+00   5.386296e-01   1.462838e-01   2.727000e+01   9.900990e-01         2712        390            445        329       10        3
*    55    56   3.771939e+00   4.177943e+00   4.060039e-01   1.076380e-01   9.428800e+01   1.177244e+00         1073        259           1921        282        9        4
    100   101   3.808965e+00   4.177943e+00   3.689779e-01   9.687090e-02   1.807920e+02   1.111775e+00         2265        370           3522        324       20        9
    200   201   3.856632e+00   4.177943e+00   3.213105e-01   8.331375e-02   4.058800e+02   9.879767e-01         2595        588           7274        407       14        6
*   249   250   3.874577e+00   4.115567e+00   2.409898e-01   6.219770e-02   5.178660e+02   9.635697e-01         1883        283           9146        295        7        4
    300   301   3.882374e+00   4.115567e+00   2.331929e-01   6.006450e-02   6.232700e+02   9.642691e-01         2008        295          11026        268       15        3
    400   401   3.901686e+00   4.115567e+00   2.138806e-01   5.481749e-02   7.557160e+02   1.059922e+00         1577        375          14635        408       21        9
    500   501   3.915110e+00   4.115567e+00   2.004565e-01   5.120072e-02   8.665060e+02   1.155214e+00          419        152          18186        205       16        1
    600   601   3.926145e+00   4.115567e+00   1.894220e-01   4.824630e-02   9.242560e+02   1.299424e+00          553        165          21771        313       16        8
    700   701   3.936588e+00   4.115567e+00   1.789787e-01   4.546544e-02   9.820250e+02   1.426644e+00          407        139          25306        208       13        5
    800   801   3.945262e+00   4.115567e+00   1.703045e-01   4.316683e-02   1.065860e+03   1.502073e+00          376        134          28930        189       14        6
    900   899   3.951691e+00   4.115567e+00   1.638753e-01   4.146965e-02   1.186720e+03   1.515943e+00          919        233          32713        220       14        4
   1000   995   3.958887e+00   4.115567e+00   1.566795e-01   3.957665e-02   1.325877e+03   1.504664e+00          758        248          36418        160       14        5
   1100  1087   3.966645e+00   4.115567e+00   1.489222e-01   3.754361e-02   1.397887e+03   1.564504e+00          410        122          40032        220       16        8
   1200  1173   3.970837e+00   4.115567e+00   1.447301e-01   3.644827e-02   1.482981e+03   1.600155e+00          639        170          43705        241       17        6
   1300  1247   3.976008e+00   4.115567e+00   1.395592e-01   3.510034e-02   1.613853e+03   1.578211e+00          966        232          47278        215       17        8
   1400  1315   3.980781e+00   4.115567e+00   1.347859e-01   3.385916e-02   1.745815e+03   1.555148e+00          668        220          50842        203       12        6
   1461  1350   3.983315e+00   4.115567e+00   1.322514e-01   3.320135e-02   1.800573e+03   1.561170e+00          904        192          52940        325        9        5
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Postprocessing

Blended Pairwise Conditional Gradient Algorithm.
MEMORY_MODE: FrankWolfe.InplaceEmphasis() STEPSIZE: Adaptive EPSILON: 1.0e-7 MAXITERATION: 10000 TYPE: Float64
GRADIENTTYPE: Nothing LAZY: true lazy_tolerance: 2.0

----------------------------------------------------------------------------------------------------------------
  Type     Iteration         Primal           Dual       Dual Gap           Time         It/sec     #ActiveSet
----------------------------------------------------------------------------------------------------------------
     I             1   2.611131e+01  -1.445758e+01   4.056888e+01   0.000000e+00            Inf              1
    LD             4   7.615111e+00   1.819429e+00   5.795683e+00   2.933873e-03   1.363386e+03              2
    LD             9   4.115567e+00   4.115567e+00   0.000000e+00   1.279288e-02   7.035161e+02              1
  Last             9   4.115567e+00   4.115567e+00   0.000000e+00   2.927086e-02   3.074730e+02              1
----------------------------------------------------------------------------------------------------------------
    PP             9   4.115567e+00   4.115567e+00   0.000000e+00   3.672758e-02   2.450475e+02              1
----------------------------------------------------------------------------------------------------------------

Solution Statistics.
	 Solution Status: Time limit reached
	 Primal Objective: 4.115566751961235
	 Dual Bound: 3.983315308180082
	 Dual Gap (relative): 0.03320134951646009

Search Statistics.
	 Total number of nodes processed: 2811
	 Total number of lmo calls: 52946
	 Total time (s): 1800.633
	 LMO calls / sec: 29.404104001204022
	 Nodes / sec: 1.561117673618111
	 LMO calls / node: 18.835289932408397


(seed, dimension) = (1, 30)
Away FW: false


Boscia Algorithm.

Parameter settings.
	 Tree traversal strategy: Move best bound
	 Branching strategy: Most infeasible
	 Absolute dual gap tolerance: 1.000000e-06
	 Relative dual gap tolerance: 1.000000e-02
	 Frank-Wolfe subproblem tolerance: 1.000000e-02
	 Frank-Wolfe dual gap decay factor: 8.000000e-01
	 Additional kwargs: 
Away FW: false
	 Total number of variables: 300
	 Number of integer variables: 0
	 Number of binary variables: 150


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Iter  Open          Bound      Incumbent      Gap (abs)      Gap (rel)       Time (s)      Nodes/sec      FW (ms)   LMO (ms)  LMO (calls c)   FW (its) #activeset  #shadow
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*     1     2   3.219937e+00   3.717062e+00   4.971256e-01   1.543899e-01   7.560000e-01   3.968254e+00          746        241             43        307        8        1
*    13    14   3.309535e+00   3.680463e+00   3.709276e-01   1.120785e-01   7.566000e+00   3.568596e+00          477        183            411        219        7        2
*    33    34   3.360753e+00   3.666072e+00   3.053196e-01   9.084857e-02   1.835200e+01   3.650828e+00          552        151           1059        175        8        3
*    39    40   3.369121e+00   3.635730e+00   2.666085e-01   7.913295e-02   2.203600e+01   3.585043e+00          515        178           1272        227       11        7
    100   101   3.419994e+00   3.635730e+00   2.157361e-01   6.308084e-02   6.524400e+01   3.080743e+00          719        245           3304        278       11        4
    200   201   3.456026e+00   3.635730e+00   1.797041e-01   5.199734e-02   1.397090e+02   2.870252e+00          989        229           6685        209       10        3
*   229   230   3.463296e+00   3.622367e+00   1.590717e-01   4.593073e-02   1.597670e+02   2.872934e+00          663        185           7628        369       10        2
*   293   294   3.474603e+00   3.617797e+00   1.431939e-01   4.121159e-02   2.220700e+02   2.643311e+00         1580        255           9859        482        8        4
    300   301   3.475125e+00   3.617797e+00   1.426724e-01   4.105534e-02   2.281720e+02   2.633978e+00          575        210          10090        162       12        3
    400   401   3.492487e+00   3.617797e+00   1.253100e-01   3.587988e-02   3.350380e+02   2.390774e+00          736        214          13542        160       14        4
    500   501   3.503818e+00   3.617797e+00   1.139788e-01   3.252989e-02   4.420140e+02   2.264634e+00         1234        340          17101        301       18        3
    600   601   3.513036e+00   3.617797e+00   1.047615e-01   2.982079e-02   5.642650e+02   2.128433e+00         1373        375          20523        318       12        3
    700   691   3.521751e+00   3.617797e+00   9.604662e-02   2.727241e-02   6.691130e+02   2.078872e+00          926        216          24047        259       11        4
    800   769   3.527436e+00   3.617797e+00   9.036107e-02   2.561664e-02   7.936850e+02   1.976855e+00         1376        337          27567        317       17        8
    900   831   3.534436e+00   3.617797e+00   8.336110e-02   2.358540e-02   9.086050e+02   1.905118e+00         1014        250          31058        235       15        4
   1000   881   3.539943e+00   3.617797e+00   7.785376e-02   2.199294e-02   1.011890e+03   1.858898e+00         1361        392          34462        294       19        8
   1100   917   3.544292e+00   3.617797e+00   7.350488e-02   2.073894e-02   1.121695e+03   1.798172e+00          915        290          37699        206        8        7
   1200   945   3.547845e+00   3.617797e+00   6.995181e-02   1.971670e-02   1.224430e+03   1.751836e+00         1225        353          40834        241       11        2
   1300   969   3.551308e+00   3.617797e+00   6.648880e-02   1.872234e-02   1.339990e+03   1.693296e+00         1407        371          43986        338       16        4
   1400   981   3.555591e+00   3.617797e+00   6.220646e-02   1.749539e-02   1.447156e+03   1.645296e+00          265         88          46946         52        8        3
   1500   989   3.558991e+00   3.617797e+00   5.880661e-02   1.652340e-02   1.546463e+03   1.609479e+00         1106        294          49873        229       13        5
   1600   993   3.561272e+00   3.617797e+00   5.652486e-02   1.587210e-02   1.633002e+03   1.587873e+00          802        243          52450        190       15       10
   1700   993   3.565135e+00   3.617797e+00   5.266260e-02   1.477156e-02   1.708465e+03   1.576269e+00          793        217          54995        181        9        3
   1800   993   3.567856e+00   3.617797e+00   4.994156e-02   1.399764e-02   1.795127e+03   1.555879e+00          716        261          57627        211       16       12
   1812   993   3.568064e+00   3.617797e+00   4.973318e-02   1.393842e-02   1.800155e+03   1.558199e+00          206         53          57878         42        7        3
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Postprocessing

Blended Pairwise Conditional Gradient Algorithm.
MEMORY_MODE: FrankWolfe.InplaceEmphasis() STEPSIZE: Adaptive EPSILON: 1.0e-7 MAXITERATION: 10000 TYPE: Float64
GRADIENTTYPE: Nothing LAZY: true lazy_tolerance: 2.0

----------------------------------------------------------------------------------------------------------------
  Type     Iteration         Primal           Dual       Dual Gap           Time         It/sec     #ActiveSet
----------------------------------------------------------------------------------------------------------------
     I             1   3.217097e+01  -2.322638e+01   5.539734e+01   0.000000e+00            Inf              1
    LD             4   7.964431e+00  -9.339975e-02   8.057831e+00   2.325006e-02   1.720426e+02              2
    LD             9   3.673470e+00   3.602680e+00   7.078947e-02   4.738856e-02   1.899192e+02              2
    LD            11   3.617797e+00   3.617797e+00  -2.220446e-16   6.325748e-02   1.738925e+02              1
  Last            11   3.617797e+00   3.617797e+00   0.000000e+00   7.267623e-02   1.513562e+02              1
----------------------------------------------------------------------------------------------------------------
    PP            11   3.617797e+00   3.617797e+00   0.000000e+00   8.342882e-02   1.318489e+02              1
----------------------------------------------------------------------------------------------------------------

Solution Statistics.
	 Solution Status: Time limit reached
	 Primal Objective: 3.6177972196873176
	 Dual Bound: 3.5680640435882096
	 Dual Gap (relative): 0.013938420244580032

Search Statistics.
	 Total number of nodes processed: 2805
	 Total number of lmo calls: 57885
	 Total time (s): 1800.249
	 LMO calls / sec: 32.15388537918921
	 Nodes / sec: 1.5581177937052042
	 LMO calls / node: 20.636363636363637


(seed, dimension) = (2, 30)
Away FW: false


Boscia Algorithm.

Parameter settings.
	 Tree traversal strategy: Move best bound
	 Branching strategy: Most infeasible
	 Absolute dual gap tolerance: 1.000000e-06
	 Relative dual gap tolerance: 1.000000e-02
	 Frank-Wolfe subproblem tolerance: 1.000000e-02
	 Frank-Wolfe dual gap decay factor: 8.000000e-01
	 Additional kwargs: 
Away FW: false
	 Total number of variables: 300
	 Number of integer variables: 0
	 Number of binary variables: 150


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Iter  Open          Bound      Incumbent      Gap (abs)      Gap (rel)       Time (s)      Nodes/sec      FW (ms)   LMO (ms)  LMO (calls c)   FW (its) #activeset  #shadow
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*     1     2   3.574775e+00   4.220716e+00   6.459410e-01   1.806942e-01   1.326000e+00   2.262443e+00         1314        416             40        272        8        1
*    55    56   3.771939e+00   4.177943e+00   4.060039e-01   1.076380e-01   6.689100e+01   1.659416e+00         1195        309           1921        282        9        4
    100   101   3.808965e+00   4.177943e+00   3.689779e-01   9.687090e-02   1.150190e+02   1.747537e+00          597        182           3522        324       20        9
    200   201   3.856632e+00   4.177943e+00   3.213105e-01   8.331375e-02   2.322900e+02   1.726290e+00         1644        398           7274        407       14        6
*   249   250   3.874577e+00   4.115567e+00   2.409898e-01   6.219770e-02   3.026380e+02   1.648835e+00         1067        246           9146        295        7        4
    300   301   3.882374e+00   4.115567e+00   2.331929e-01   6.006450e-02   3.615490e+02   1.662292e+00         1028        220          11026        268       15        3
    400   401   3.901686e+00   4.115567e+00   2.138806e-01   5.481749e-02   4.459600e+02   1.796125e+00          695        203          14635        408       21        9
    500   501   3.915110e+00   4.115567e+00   2.004565e-01   5.120072e-02   5.031090e+02   1.989628e+00          413        151          18186        205       16        1
    600   601   3.926145e+00   4.115567e+00   1.894220e-01   4.824630e-02   6.059320e+02   1.982071e+00         1042        228          21771        313       16        8
    700   701   3.936588e+00   4.115567e+00   1.789787e-01   4.546544e-02   7.342380e+02   1.908101e+00          938        242          25306        208       13        5
    800   801   3.945262e+00   4.115567e+00   1.703045e-01   4.316683e-02   8.700450e+02   1.840135e+00          859        241          28930        189       14        6
    900   899   3.951691e+00   4.115567e+00   1.638753e-01   4.146965e-02   9.984730e+02   1.801751e+00          942        228          32713        220       14        4
   1000   995   3.958887e+00   4.115567e+00   1.566795e-01   3.957665e-02   1.130282e+03   1.765046e+00          762        230          36418        160       14        5
   1100  1087   3.966645e+00   4.115567e+00   1.489222e-01   3.754361e-02   1.268390e+03   1.724233e+00          863        220          40032        220       16        8
   1200  1173   3.970837e+00   4.115567e+00   1.447301e-01   3.644827e-02   1.405654e+03   1.688182e+00         1148        234          43705        241       17        6
   1300  1247   3.976008e+00   4.115567e+00   1.395592e-01   3.510034e-02   1.536420e+03   1.657750e+00          411        126          47278        215       17        8
   1400  1315   3.980781e+00   4.115567e+00   1.347859e-01   3.385916e-02   1.670677e+03   1.625090e+00          410        141          50842        203       12        6
   1500  1369   3.985688e+00   4.115567e+00   1.298787e-01   3.258627e-02   1.766363e+03   1.624241e+00          385        131          54254        143       13        2
   1528  1385   3.986440e+00   4.115567e+00   1.291269e-01   3.239154e-02   1.800260e+03   1.618100e+00          746        282          55365        193       16        5
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Postprocessing

Blended Pairwise Conditional Gradient Algorithm.
MEMORY_MODE: FrankWolfe.InplaceEmphasis() STEPSIZE: Adaptive EPSILON: 1.0e-7 MAXITERATION: 10000 TYPE: Float64
GRADIENTTYPE: Nothing LAZY: true lazy_tolerance: 2.0

----------------------------------------------------------------------------------------------------------------
  Type     Iteration         Primal           Dual       Dual Gap           Time         It/sec     #ActiveSet
----------------------------------------------------------------------------------------------------------------
     I             1   2.611131e+01  -1.445758e+01   4.056888e+01   0.000000e+00            Inf              1
    LD             4   7.615111e+00   1.819429e+00   5.795683e+00   1.326565e-02   3.015307e+02              2
    LD             9   4.115567e+00   4.115567e+00   0.000000e+00   1.935299e-02   4.650444e+02              1
  Last             9   4.115567e+00   4.115567e+00   0.000000e+00   3.818932e-02   2.356680e+02              1
----------------------------------------------------------------------------------------------------------------
    PP             9   4.115567e+00   4.115567e+00   0.000000e+00   4.593631e-02   1.959235e+02              1
----------------------------------------------------------------------------------------------------------------

Solution Statistics.
	 Solution Status: Time limit reached
	 Primal Objective: 4.115566751961235
	 Dual Bound: 3.9864398241052186
	 Dual Gap (relative): 0.03239154071139144

Search Statistics.
	 Total number of nodes processed: 2913
	 Total number of lmo calls: 55371
	 Total time (s): 1800.317
	 LMO calls / sec: 30.756250149279264
	 Nodes / sec: 1.618048377035822
	 LMO calls / node: 19.00823892893924


(seed, dimension) = (1, 18)
Away FW: true

Away FW: false

(seed, dimension) = (2, 18)
Away FW: true

Away FW: false

(seed, dimension) = (1, 18)
Away FW: true


Boscia Algorithm.

Parameter settings.
	 Tree traversal strategy: Move best bound
	 Branching strategy: Most infeasible
	 Absolute dual gap tolerance: 1.000000e-06
	 Relative dual gap tolerance: 1.000000e-02
	 Frank-Wolfe subproblem tolerance: 1.000000e-02
	 Frank-Wolfe dual gap decay factor: 8.000000e-01
	 Additional kwargs: 
Away FW: false
	 Total number of variables: 180
	 Number of integer variables: 0
	 Number of binary variables: 90


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Iter  Open          Bound      Incumbent      Gap (abs)      Gap (rel)       Time (s)      Nodes/sec      FW (ms)   LMO (ms)  LMO (calls c)   FW (its) #activeset  #shadow
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*     1     2   5.840216e-01   6.931472e-01   1.091255e-01   1.868519e-01   1.270000e-01   2.362205e+01          124         90             31         34       10        0
*    65    64   5.937379e-01   6.304698e-01   3.673191e-02   6.186553e-02   3.308300e+01   3.899284e+00          231        115           4482        123       15        0
    100    99   5.943173e-01   6.304698e-01   3.615245e-02   6.083021e-02   4.338200e+01   4.587156e+00          322        212           6682        147       40        8
    200   199   5.950235e-01   6.304698e-01   3.544630e-02   5.957126e-02   8.247500e+01   4.837830e+00          324        227          14526        146       32        4
*   225   222   5.951119e-01   6.304519e-01   3.533991e-02   5.938363e-02   9.633400e+01   4.640106e+00          171        110          16601         80       15        0
    300   291   5.952929e-01   6.304519e-01   3.515895e-02   5.906160e-02   1.540530e+02   3.836342e+00          309        193          23062        112       29        4
    400   387   5.954860e-01   6.304519e-01   3.496582e-02   5.871812e-02   2.153670e+02   3.654227e+00          479        307          31965        245       40        8
    500   485   5.956288e-01   6.304519e-01   3.482307e-02   5.846438e-02   2.815010e+02   3.499099e+00          395        256          41699        227       43        7
    600   573   5.957050e-01   6.304519e-01   3.474690e-02   5.832905e-02   3.884760e+02   3.019492e+00          330        232          51668        147       48        8
    700   667   5.957828e-01   6.304519e-01   3.466901e-02   5.819068e-02   4.677000e+02   2.922814e+00          390        253          61621        185       37        4
    800   757   5.958503e-01   6.304519e-01   3.460151e-02   5.807080e-02   5.594380e+02   2.783150e+00          491        319          71840        293       46        7
    900   847   5.958973e-01   6.304519e-01   3.455456e-02   5.798744e-02   6.462240e+02   2.703397e+00         1635        425          81926       2577       87       20
   1000   939   5.959577e-01   6.304519e-01   3.449414e-02   5.788017e-02   7.342440e+02   2.640812e+00          527        302          92600        329       50        8
   1100  1033   5.959910e-01   6.304519e-01   3.446083e-02   5.782106e-02   8.303710e+02   2.568731e+00         1449        390         103571       2298       87       22
   1200  1121   5.960246e-01   6.304519e-01   3.442721e-02   5.776138e-02   9.399850e+02   2.469188e+00          685        344         114377        587       58       17
   1300  1213   5.960535e-01   6.304519e-01   3.439840e-02   5.771026e-02   1.033575e+03   2.431367e+00         1036        381         125068       1386       81       18
   1400  1305   5.960805e-01   6.304519e-01   3.437135e-02   5.766225e-02   1.139626e+03   2.373586e+00          287        193         136385        115       35        6
   1500  1395   5.961053e-01   6.304519e-01   3.434652e-02   5.761820e-02   1.252863e+03   2.310708e+00          343        227         146781        153       36        4
   1600  1483   5.961280e-01   6.304519e-01   3.432390e-02   5.757807e-02   1.375023e+03   2.242144e+00         1337        297         158708       2436       97       35
   1700  1571   5.961505e-01   6.304519e-01   3.430134e-02   5.753805e-02   1.498053e+03   2.183501e+00         1270        364         169676       2034       84       18
   1800  1663   5.961749e-01   6.304519e-01   3.427698e-02   5.749484e-02   1.617818e+03   2.140537e+00         1177        419         181401       1672       83       18
   1900  1743   5.961915e-01   6.304519e-01   3.426032e-02   5.746530e-02   1.748076e+03   2.084006e+00         4311        256         192413      10001       89       16
   1946  1783   5.962009e-01   6.304519e-01   3.425096e-02   5.744869e-02   1.801691e+03   2.069722e+00         2192        282         197355       4636       88       16
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Postprocessing

Blended Pairwise Conditional Gradient Algorithm.
MEMORY_MODE: FrankWolfe.InplaceEmphasis() STEPSIZE: Adaptive EPSILON: 1.0e-7 MAXITERATION: 10000 TYPE: Float64
GRADIENTTYPE: Nothing LAZY: true lazy_tolerance: 2.0

----------------------------------------------------------------------------------------------------------------
  Type     Iteration         Primal           Dual       Dual Gap           Time         It/sec     #ActiveSet
----------------------------------------------------------------------------------------------------------------
     I             1   4.419784e+01  -1.292126e+02   1.734105e+02   0.000000e+00            Inf              1
    LD             2   1.366125e+00  -1.085639e+01   1.222252e+01   3.756203e-02   5.324525e+01              2
    LD             5   7.008586e-01  -2.805738e+00   3.506597e+00   1.280995e-01   3.903216e+01              2
    LD             7   6.933804e-01  -2.782067e+00   3.475447e+00   1.310385e-01   5.341943e+01              2
    LD             9   6.331349e-01   9.508224e-02   5.380527e-01   1.363773e-01   6.599340e+01              3
    LD            13   6.311008e-01   3.377760e-01   2.933248e-01   1.417869e-01   9.168686e+01              4
    LD            15   6.306650e-01   4.635440e-01   1.671210e-01   1.472507e-01   1.018671e+02              5
    LD            17   6.306344e-01   4.709989e-01   1.596355e-01   1.502206e-01   1.131669e+02              5
    LD            19   6.305002e-01   5.586400e-01   7.186024e-02   1.558846e-01   1.218850e+02              6
    LD            21   6.304939e-01   5.605097e-01   6.998420e-02   1.588785e-01   1.321764e+02              6
    LD            23   6.304672e-01   5.915010e-01   3.896620e-02   1.647591e-01   1.395978e+02              7
    LD            25   6.304650e-01   5.951867e-01   3.527830e-02   1.678336e-01   1.489571e+02              7
    LD            27   6.304641e-01   5.952597e-01   3.520445e-02   1.709274e-01   1.579618e+02              7
    LD            29   6.304579e-01   6.100179e-01   2.043998e-02   1.766272e-01   1.641876e+02              8
    LD            34   6.304563e-01   6.109977e-01   1.945862e-02   1.796739e-01   1.892317e+02              8
    LD            38   6.304538e-01   6.191512e-01   1.130258e-02   1.853119e-01   2.050597e+02              9
    LD            45   6.304531e-01   6.210492e-01   9.403814e-03   1.882900e-01   2.389931e+02              9
    LD            47   6.304526e-01   6.237918e-01   6.660786e-03   1.938164e-01   2.424976e+02             10
    LD            53   6.304524e-01   6.238352e-01   6.617206e-03   1.967629e-01   2.693597e+02             10
    LD            56   6.304521e-01   6.263078e-01   4.144321e-03   2.022421e-01   2.768958e+02             11
    LD            61   6.304520e-01   6.268537e-01   3.598315e-03   2.052709e-01   2.971683e+02             11
    LD            64   6.304520e-01   6.269936e-01   3.458384e-03   2.082405e-01   3.073369e+02             11
    LD            66   6.304519e-01   6.283701e-01   2.081838e-03   2.137924e-01   3.087107e+02             12
    LD            71   6.304519e-01   6.287460e-01   1.705930e-03   2.172962e-01   3.267429e+02             12
    LD            77   6.304519e-01   6.287905e-01   1.661405e-03   2.204343e-01   3.493105e+02             12
    LD            80   6.304519e-01   6.289274e-01   1.524501e-03   2.234102e-01   3.580857e+02             12
    LD            84   6.304519e-01   6.294899e-01   9.619989e-04   2.290781e-01   3.666872e+02             13
    LD            89   6.304519e-01   6.296793e-01   7.725388e-04   2.320282e-01   3.835741e+02             13
    LD            92   6.304519e-01   6.296892e-01   7.626590e-04   2.349691e-01   3.915409e+02             13
    LD            94   6.304519e-01   6.299927e-01   4.591769e-04   2.405296e-01   3.908043e+02             14
    LD            98   6.304519e-01   6.300714e-01   3.804820e-04   2.434190e-01   4.025981e+02             14
    LD           102   6.304519e-01   6.301002e-01   3.516845e-04   2.464478e-01   4.138808e+02             14
    LD           107   6.304519e-01   6.301189e-01   3.329970e-04   2.494804e-01   4.288915e+02             14
    LD           109   6.304519e-01   6.302690e-01   1.828906e-04   2.550424e-01   4.273799e+02             15
    LD           115   6.304519e-01   6.303118e-01   1.400566e-04   2.580159e-01   4.457089e+02             15
    LD           118   6.304519e-01   6.303242e-01   1.276956e-04   2.610117e-01   4.520870e+02             15
    LD           120   6.304519e-01   6.303788e-01   7.302569e-05   2.664220e-01   4.504133e+02             16
    LD           125   6.304519e-01   6.304042e-01   4.764492e-05   2.694563e-01   4.638971e+02             16
    LD           132   6.304519e-01   6.304120e-01   3.984164e-05   2.725750e-01   4.842704e+02             16
    LD           135   6.304519e-01   6.304278e-01   2.404907e-05   2.782085e-01   4.852476e+02             17
    LD           143   6.304519e-01   6.304365e-01   1.531171e-05   2.812611e-01   5.084245e+02             17
    LD           148   6.304519e-01   6.304401e-01   1.177784e-05   2.843401e-01   5.205034e+02             17
    LD           155   6.304519e-01   6.304408e-01   1.108573e-05   2.874335e-01   5.392552e+02             17
    LD           157   6.304519e-01   6.304414e-01   1.043874e-05   2.903656e-01   5.406976e+02             17
    LD           159   6.304519e-01   6.304444e-01   7.451282e-06   2.960035e-01   5.371559e+02             18
    LD           162   6.304519e-01   6.304456e-01   6.256935e-06   2.988993e-01   5.419885e+02             18
    LD           164   6.304519e-01   6.304463e-01   5.604564e-06   3.018981e-01   5.432296e+02             18
    LD           167   6.304519e-01   6.304485e-01   3.353999e-06   3.073764e-01   5.433078e+02             19
    LD           171   6.304519e-01   6.304494e-01   2.496459e-06   3.103137e-01   5.510552e+02             19
    LD           174   6.304519e-01   6.304500e-01   1.889831e-06   3.132964e-01   5.553847e+02             19
    LD           178   6.304519e-01   6.304502e-01   1.707118e-06   3.163170e-01   5.627266e+02             19
    LD           181   6.304519e-01   6.304511e-01   7.752424e-07   3.219023e-01   5.622824e+02             20
    LD           186   6.304519e-01   6.304514e-01   4.811311e-07   3.248505e-01   5.725710e+02             20
    LD           192   6.304519e-01   6.304515e-01   4.033863e-07   3.280429e-01   5.852894e+02             20
     P          1000   6.304519e-01   6.304515e-01   4.033863e-07   3.909053e-01   2.558164e+03             20
     P          2000   6.304519e-01   6.304515e-01   4.033863e-07   4.836954e-01   4.134834e+03             20
     P          3000   6.304519e-01   6.304515e-01   4.033863e-07   5.879810e-01   5.102206e+03             20
     P          4000   6.304519e-01   6.304515e-01   4.033863e-07   6.548299e-01   6.108457e+03             20
     P          5000   6.304519e-01   6.304515e-01   4.033863e-07   7.434596e-01   6.725315e+03             20
     P          6000   6.304519e-01   6.304515e-01   4.033863e-07   8.357196e-01   7.179441e+03             20
     P          7000   6.304519e-01   6.304515e-01   4.033863e-07   8.977517e-01   7.797256e+03             20
     P          8000   6.304519e-01   6.304515e-01   4.033863e-07   9.799698e-01   8.163517e+03             20
     P          9000   6.304519e-01   6.304515e-01   4.033863e-07   1.081585e+00   8.321125e+03             20
     P         10000   6.304519e-01   6.304515e-01   4.033863e-07   1.139556e+00   8.775344e+03             20
  Last         10001   6.304519e-01   6.304515e-01   4.033710e-07   1.143610e+00   8.745116e+03             20
----------------------------------------------------------------------------------------------------------------
    PP         10001   6.304519e-01   6.304515e-01   4.033710e-07   1.146518e+00   8.722930e+03             20
----------------------------------------------------------------------------------------------------------------

Solution Statistics.
	 Solution Status: Time limit reached
	 Primal Objective: 0.6304518575314905
	 Dual Bound: 0.5962008980998906
	 Dual Gap (relative): 0.05744868808611095

Search Statistics.
	 Total number of nodes processed: 3729
	 Total number of lmo calls: 197430
	 Total time (s): 1802.844
	 LMO calls / sec: 109.51030704819718
	 Nodes / sec: 2.0683985968835907
	 LMO calls / node: 52.9444891391794


(seed, dimension) = (2, 18)
Away FW: true


Boscia Algorithm.

Parameter settings.
	 Tree traversal strategy: Move best bound
	 Branching strategy: Most infeasible
	 Absolute dual gap tolerance: 1.000000e-06
	 Relative dual gap tolerance: 1.000000e-02
	 Frank-Wolfe subproblem tolerance: 1.000000e-02
	 Frank-Wolfe dual gap decay factor: 8.000000e-01
	 Additional kwargs: 
Away FW: false
	 Total number of variables: 180
	 Number of integer variables: 0
	 Number of binary variables: 90


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Iter  Open          Bound      Incumbent      Gap (abs)      Gap (rel)       Time (s)      Nodes/sec      FW (ms)   LMO (ms)  LMO (calls c)   FW (its) #activeset  #shadow
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*     1     2   6.150512e-01   6.931472e-01   7.809596e-02   1.269747e-01   1.370000e-01   2.189781e+01          133         96             33         37        6        0
    100   101   6.210355e-01   6.931472e-01   7.211170e-02   1.161153e-01   2.925000e+01   6.871795e+00          312        219           6399        138       31        3
    200   201   6.215852e-01   6.931472e-01   7.156200e-02   1.151282e-01   6.519100e+01   6.151156e+00          441        272          14039        205       39        6
    300   301   6.217848e-01   6.931472e-01   7.136237e-02   1.147702e-01   1.060670e+02   5.666230e+00          665        349          22479        566       63       11
    400   401   6.219358e-01   6.931472e-01   7.121139e-02   1.144996e-01   1.519370e+02   5.271922e+00          382        258          31512        184       39        7
    500   501   6.220321e-01   6.931472e-01   7.111505e-02   1.143270e-01   2.019800e+02   4.955936e+00          452        278          40998        206       40        7
*   587   586   6.221058e-01   6.619055e-01   3.979963e-02   6.397566e-02   2.577470e+02   4.550974e+00          214        139          49851        118       17        0
    600   597   6.221094e-01   6.619055e-01   3.979606e-02   6.396956e-02   2.726700e+02   4.389922e+00          443        281          51167        224       59       31
    700   697   6.221584e-01   6.619055e-01   3.974703e-02   6.388571e-02   3.300240e+02   4.233025e+00         1660        466          61363       2583       89       22
    800   793   6.222061e-01   6.619055e-01   3.969939e-02   6.380425e-02   4.108980e+02   3.876875e+00          578        351          72278        387       48       10
*   859   848   6.222253e-01   6.616922e-01   3.946689e-02   6.342862e-02   4.612730e+02   3.700628e+00          214        136          78363        136       18        0
    900   889   6.222368e-01   6.616922e-01   3.945538e-02   6.340895e-02   4.946590e+02   3.616633e+00          652        379          82929        476       59       11
*   925   910   6.222471e-01   6.575093e-01   3.526219e-02   5.666912e-02   5.245390e+02   3.498310e+00          202        135          85845        104       17        0
   1000   975   6.222756e-01   6.575093e-01   3.523369e-02   5.662071e-02   6.149480e+02   3.211654e+00          505        314          94408        287       43       14
*  1041  1014   6.222843e-01   6.566488e-01   3.436450e-02   5.522315e-02   6.532220e+02   3.145944e+00          225        141          99190        111       18        0
*  1087  1058   6.223022e-01   6.559475e-01   3.364531e-02   5.406588e-02   6.974860e+02   3.075331e+00          275        153         104434        142       18        0
   1100  1071   6.223035e-01   6.559475e-01   3.364401e-02   5.406367e-02   7.069160e+02   3.071086e+00          362        237         105873        162       36        6
   1200  1169   6.223247e-01   6.559475e-01   3.362277e-02   5.402770e-02   7.827460e+02   3.026525e+00          460        296         117208        262       57       13
   1300  1259   6.223467e-01   6.559475e-01   3.360082e-02   5.399052e-02   8.906320e+02   2.873241e+00          440        294         128251        183       36        6
   1400  1349   6.223641e-01   6.559475e-01   3.358343e-02   5.396107e-02   9.819020e+02   2.799668e+00          719        358         139399        653       75       29
   1500  1441   6.223824e-01   6.559475e-01   3.356511e-02   5.393005e-02   1.086658e+03   2.706463e+00          592        303         151094        455       56       13
   1600  1537   6.224006e-01   6.559475e-01   3.354688e-02   5.389918e-02   1.175404e+03   2.668870e+00          568        311         162957        403       69       21
   1700  1623   6.224115e-01   6.559475e-01   3.353598e-02   5.388071e-02   1.299794e+03   2.556559e+00          845        393         175320        864       68       18
   1800  1707   6.224243e-01   6.559475e-01   3.352317e-02   5.385902e-02   1.419677e+03   2.470280e+00          393        247         186602        152       32        8
   1900  1783   6.224350e-01   6.559475e-01   3.351251e-02   5.384098e-02   1.539471e+03   2.392380e+00          820        429         197303        664       67       12
   2000  1873   6.224470e-01   6.559475e-01   3.350053e-02   5.382069e-02   1.665654e+03   2.325213e+00         1559        416         209131       2491       85       30
   2100  1965   6.224573e-01   6.559475e-01   3.349019e-02   5.380319e-02   1.783145e+03   2.279680e+00          753        370         221108        653       67       14
   2122  1987   6.224596e-01   6.559475e-01   3.348787e-02   5.379927e-02   1.803308e+03   2.278590e+00         3738        324         223802       8013       87        6
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Postprocessing

Blended Pairwise Conditional Gradient Algorithm.
MEMORY_MODE: FrankWolfe.InplaceEmphasis() STEPSIZE: Adaptive EPSILON: 1.0e-7 MAXITERATION: 10000 TYPE: Float64
GRADIENTTYPE: Nothing LAZY: true lazy_tolerance: 2.0

----------------------------------------------------------------------------------------------------------------
  Type     Iteration         Primal           Dual       Dual Gap           Time         It/sec     #ActiveSet
----------------------------------------------------------------------------------------------------------------
     I             1   7.708970e+01  -2.273160e+02   3.044057e+02   0.000000e+00            Inf              1
    LD             2   1.810210e+00  -1.901524e+01   2.082545e+01   9.378155e-03   2.132616e+02              2
    LD             5   7.061492e-01  -2.815959e+00   3.522108e+00   1.266616e-02   3.947527e+02              2
    LD             7   6.937089e-01  -2.326938e+00   3.020647e+00   1.554070e-02   4.504303e+02              2
    LD             9   6.659034e-01  -7.839474e-01   1.449851e+00   2.052248e-02   4.385434e+02              3
    LD            11   6.592048e-01   3.113759e-02   6.280673e-01   2.544368e-02   4.323275e+02              4
    LD            14   6.577903e-01   1.116595e-01   5.461309e-01   3.035875e-02   4.611521e+02              5
    LD            16   6.569373e-01   3.069328e-01   3.500045e-01   3.584391e-02   4.463799e+02              6
    LD            22   6.565993e-01   3.910979e-01   2.655013e-01   3.889076e-02   5.656871e+02              6
    LD            28   6.561176e-01   5.053168e-01   1.508008e-01   4.440419e-02   6.305711e+02              7
    LD            31   6.560198e-01   5.500715e-01   1.059483e-01   4.952023e-02   6.260068e+02              8
    LD            33   6.560146e-01   5.619071e-01   9.410752e-02   5.226279e-02   6.314244e+02              8
    LD            35   6.559888e-01   5.866618e-01   6.932694e-02   5.858811e-02   5.973908e+02              9
    LD            40   6.559803e-01   5.896864e-01   6.629387e-02   6.182476e-02   6.469900e+02              9
    LD            43   6.559657e-01   6.102513e-01   4.571432e-02   6.778727e-02   6.343374e+02             10
    LD            46   6.559632e-01   6.121238e-01   4.383934e-02   7.099653e-02   6.479189e+02             10
    LD            51   6.559541e-01   6.287285e-01   2.722558e-02   7.699157e-02   6.624102e+02             11
    LD            54   6.559532e-01   6.305283e-01   2.542487e-02   8.006528e-02   6.744496e+02             11
    LD            60   6.559514e-01   6.314133e-01   2.453805e-02   8.341180e-02   7.193227e+02             11
    LD            66   6.559486e-01   6.442305e-01   1.171809e-02   8.942976e-02   7.380094e+02             12
    LD            70   6.559483e-01   6.443174e-01   1.163085e-02   9.263944e-02   7.556177e+02             12
    LD            72   6.559478e-01   6.503259e-01   5.621935e-03   9.845101e-02   7.313282e+02             13
    LD            82   6.559476e-01   6.518585e-01   4.089131e-03   1.018789e-01   8.048771e+02             13
    LD            86   6.559476e-01   6.523894e-01   3.558212e-03   1.051756e-01   8.176804e+02             13
    LD            92   6.559476e-01   6.526611e-01   3.286498e-03   1.084824e-01   8.480640e+02             13
    LD            95   6.559475e-01   6.540267e-01   1.920842e-03   1.143542e-01   8.307524e+02             14
    LD           101   6.559475e-01   6.544731e-01   1.474353e-03   1.176453e-01   8.585129e+02             14
    LD           103   6.559475e-01   6.552411e-01   7.064214e-04   1.235462e-01   8.336961e+02             15
    LD           109   6.559475e-01   6.553920e-01   5.554792e-04   1.267491e-01   8.599669e+02             15
    LD           111   6.559475e-01   6.554258e-01   5.216995e-04   1.298763e-01   8.546591e+02             15
    LD           118   6.559475e-01   6.555308e-01   4.167358e-04   1.332344e-01   8.856575e+02             15
    LD           120   6.559475e-01   6.556968e-01   2.506486e-04   1.391046e-01   8.626600e+02             16
    LD           123   6.559475e-01   6.558021e-01   1.454402e-04   1.448385e-01   8.492217e+02             17
    LD           131   6.559475e-01   6.558672e-01   8.032507e-05   1.481897e-01   8.840020e+02             17
    LD           135   6.559475e-01   6.558750e-01   7.250748e-05   1.515103e-01   8.910284e+02             17
    LD           138   6.559475e-01   6.558771e-01   7.041007e-05   1.546896e-01   8.921094e+02             17
    LD           141   6.559475e-01   6.559054e-01   4.208562e-05   1.604643e-01   8.787001e+02             18
    LD           147   6.559475e-01   6.559199e-01   2.763224e-05   1.637625e-01   8.976415e+02             18
    LD           152   6.559475e-01   6.559207e-01   2.676479e-05   1.670425e-01   9.099478e+02             18
    LD           155   6.559475e-01   6.559329e-01   1.462554e-05   1.729599e-01   8.961614e+02             19
    LD           161   6.559475e-01   6.559390e-01   8.448838e-06   1.762275e-01   9.135917e+02             19
    LD           167   6.559475e-01   6.559415e-01   6.004839e-06   1.795834e-01   9.299302e+02             19
    LD           173   6.559475e-01   6.559432e-01   4.321622e-06   1.829476e-01   9.456262e+02             19
    LD           178   6.559475e-01   6.559443e-01   3.190546e-06   1.861846e-01   9.560406e+02             19
    LD           185   6.559475e-01   6.559450e-01   2.457690e-06   1.896119e-01   9.756774e+02             19
    LD           187   6.559475e-01   6.559452e-01   2.300092e-06   1.928146e-01   9.698436e+02             19
    LD           190   6.559475e-01   6.559460e-01   1.442373e-06   1.986442e-01   9.564841e+02             20
    LD           195   6.559475e-01   6.559464e-01   1.134205e-06   2.018351e-01   9.661352e+02             20
    LD           198   6.559475e-01   6.559464e-01   1.080687e-06   2.049777e-01   9.659587e+02             20
    LD           200   6.559475e-01   6.559470e-01   4.666202e-07   2.107721e-01   9.488920e+02             21
    LD           207   6.559475e-01   6.559473e-01   2.197437e-07   2.152489e-01   9.616775e+02             21
    LD           212   6.559475e-01   6.559473e-01   1.744995e-07   2.194551e-01   9.660292e+02             21
     P          1000   6.559475e-01   6.559473e-01   1.744995e-07   2.873336e-01   3.480275e+03             21
     P          2000   6.559475e-01   6.559473e-01   1.744995e-07   3.956740e-01   5.054667e+03             21
     P          3000   6.559475e-01   6.559473e-01   1.744995e-07   4.648089e-01   6.454265e+03             21
     P          4000   6.559475e-01   6.559473e-01   1.744995e-07   5.611597e-01   7.128095e+03             21
     P          5000   6.559475e-01   6.559473e-01   1.744995e-07   6.343754e-01   7.881769e+03             21
     P          6000   6.559475e-01   6.559473e-01   1.744995e-07   7.410639e-01   8.096468e+03             21
     P          7000   6.559475e-01   6.559473e-01   1.744995e-07   8.195303e-01   8.541478e+03             21
     P          8000   6.559475e-01   6.559473e-01   1.744995e-07   9.244176e-01   8.654098e+03             21
     P          9000   6.559475e-01   6.559473e-01   1.744995e-07   9.975137e-01   9.022432e+03             21
     P         10000   6.559475e-01   6.559473e-01   1.744995e-07   1.105103e+00   9.048926e+03             21
  Last         10001   6.559475e-01   6.559473e-01   1.726272e-07   1.110161e+00   9.008601e+03             21
----------------------------------------------------------------------------------------------------------------
    PP         10001   6.559475e-01   6.559473e-01   1.726272e-07   1.113150e+00   8.984411e+03             21
----------------------------------------------------------------------------------------------------------------

Solution Statistics.
	 Solution Status: Time limit reached
	 Primal Objective: 0.6559474923102904
	 Dual Bound: 0.6224596202639222
	 Dual Gap (relative): 0.05379926818733935

Search Statistics.
	 Total number of nodes processed: 4109
	 Total number of lmo calls: 223876
	 Total time (s): 1804.428
	 LMO calls / sec: 124.07034251297364
	 Nodes / sec: 2.277175925002272
	 LMO calls / node: 54.48430275006084


(seed, dimension) = (1, 18)
Away FW: true


Boscia Algorithm.

Parameter settings.
	 Tree traversal strategy: Move best bound
	 Branching strategy: Most infeasible
	 Absolute dual gap tolerance: 1.000000e-06
	 Relative dual gap tolerance: 1.000000e-02
	 Frank-Wolfe subproblem tolerance: 1.000000e-02
	 Frank-Wolfe dual gap decay factor: 8.000000e-01
	 Additional kwargs: 
Away FW: false
	 Total number of variables: 180
	 Number of integer variables: 0
	 Number of binary variables: 90


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Iter  Open          Bound      Incumbent      Gap (abs)      Gap (rel)       Time (s)      Nodes/sec      FW (ms)   LMO (ms)  LMO (calls c)   FW (its) #activeset  #shadow
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*     1     2   5.840216e-01   6.931472e-01   1.091255e-01   1.868519e-01   1.280000e-01   2.343750e+01          126         91             31         34       10        0
*    65    64   5.937379e-01   6.304698e-01   3.673191e-02   6.186553e-02   3.205200e+01   4.024710e+00          196        115           4482        123       15        0
    100    99   5.943173e-01   6.304698e-01   3.615245e-02   6.083021e-02   4.214000e+01   4.722354e+00          322        218           6682        147       40        8
    200   199   5.950235e-01   6.304698e-01   3.544630e-02   5.957126e-02   8.124200e+01   4.911253e+00          325        227          14526        146       32        4
*   225   222   5.951119e-01   6.304519e-01   3.533991e-02   5.938363e-02   9.513000e+01   4.698833e+00          173        112          16601         80       15        0
    300   291   5.952929e-01   6.304519e-01   3.515895e-02   5.906160e-02   1.526090e+02   3.872642e+00          270        192          23062        112       29        4
    400   387   5.954860e-01   6.304519e-01   3.496582e-02   5.871812e-02   2.139090e+02   3.679135e+00          478        307          31965        245       40        8
    500   485   5.956288e-01   6.304519e-01   3.482307e-02   5.846438e-02   2.800210e+02   3.517593e+00          409        256          41699        227       43        7
    600   573   5.957050e-01   6.304519e-01   3.474690e-02   5.832905e-02   3.867560e+02   3.032920e+00          342        227          51668        147       48        8
    700   667   5.957828e-01   6.304519e-01   3.466901e-02   5.819068e-02   4.660480e+02   2.933174e+00          381        258          61621        185       37        4
    800   757   5.958503e-01   6.304519e-01   3.460151e-02   5.807080e-02   5.576840e+02   2.791904e+00          515        322          71840        293       46        7
    900   847   5.958973e-01   6.304519e-01   3.455456e-02   5.798744e-02   6.444730e+02   2.710742e+00         1601        427          81926       2577       87       20
   1000   939   5.959577e-01   6.304519e-01   3.449414e-02   5.788017e-02   7.326870e+02   2.646423e+00          510        304          92600        329       50        8
   1100  1033   5.959910e-01   6.304519e-01   3.446083e-02   5.782106e-02   8.288320e+02   2.573501e+00         1422        378         103571       2298       87       22
   1200  1121   5.960246e-01   6.304519e-01   3.442721e-02   5.776138e-02   9.375840e+02   2.475512e+00          662        345         114377        587       58       17
   1300  1213   5.960535e-01   6.304519e-01   3.439840e-02   5.771026e-02   1.027937e+03   2.444702e+00          999        375         125068       1386       81       18
   1400  1305   5.960805e-01   6.304519e-01   3.437135e-02   5.766225e-02   1.130301e+03   2.393168e+00          304        199         136385        115       35        6
   1500  1395   5.961053e-01   6.304519e-01   3.434652e-02   5.761820e-02   1.239291e+03   2.336013e+00          327        229         146781        153       36        4
   1600  1483   5.961280e-01   6.304519e-01   3.432390e-02   5.757807e-02   1.359805e+03   2.267237e+00         1339        297         158708       2436       97       35
   1700  1571   5.961505e-01   6.304519e-01   3.430134e-02   5.753805e-02   1.482786e+03   2.205983e+00         1257        365         169676       2034       84       18
   1800  1663   5.961749e-01   6.304519e-01   3.427698e-02   5.749484e-02   1.602363e+03   2.161183e+00         1181        420         181401       1672       83       18
   1900  1743   5.961915e-01   6.304519e-01   3.426032e-02   5.746530e-02   1.732659e+03   2.102549e+00         4315        260         192413      10001       89       16
   1960  1795   5.962060e-01   6.304519e-01   3.424585e-02   5.743963e-02   1.800855e+03   2.085121e+00         1552        380         198919       2678       90       21
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Postprocessing

Blended Pairwise Conditional Gradient Algorithm.
MEMORY_MODE: FrankWolfe.InplaceEmphasis() STEPSIZE: Adaptive EPSILON: 1.0e-7 MAXITERATION: 10000 TYPE: Float64
GRADIENTTYPE: Nothing LAZY: true lazy_tolerance: 2.0

----------------------------------------------------------------------------------------------------------------
  Type     Iteration         Primal           Dual       Dual Gap           Time         It/sec     #ActiveSet
----------------------------------------------------------------------------------------------------------------
     I             1   4.419784e+01  -1.292126e+02   1.734105e+02   0.000000e+00            Inf              1
    LD             2   1.366125e+00  -1.085639e+01   1.222252e+01   1.020164e-03   1.960469e+03              2
    LD             5   7.008586e-01  -2.805738e+00   3.506597e+00   4.070222e-03   1.228434e+03              2
    LD             7   6.933804e-01  -2.782067e+00   3.475447e+00   6.961023e-03   1.005599e+03              2
    LD             9   6.331349e-01   9.508224e-02   5.380527e-01   1.239789e-02   7.259300e+02              3
    LD            13   6.311008e-01   3.377760e-01   2.933248e-01   1.809909e-02   7.182681e+02              4
    LD            15   6.306650e-01   4.635440e-01   1.671210e-01   2.373434e-02   6.319957e+02              5
    LD            17   6.306344e-01   4.709989e-01   1.596355e-01   2.674921e-02   6.355327e+02              5
    LD            19   6.305002e-01   5.586400e-01   7.186024e-02   3.258298e-02   5.831265e+02              6
    LD            21   6.304939e-01   5.605097e-01   6.998420e-02   3.558719e-02   5.901000e+02              6
    LD            23   6.304672e-01   5.915010e-01   3.896620e-02   4.147096e-02   5.546050e+02              7
    LD            25   6.304650e-01   5.951867e-01   3.527830e-02   4.455504e-02   5.611037e+02              7
    LD            27   6.304641e-01   5.952597e-01   3.520445e-02   4.767280e-02   5.663607e+02              7
    LD            29   6.304579e-01   6.100179e-01   2.043998e-02   5.350559e-02   5.419994e+02              8
    LD            34   6.304563e-01   6.109977e-01   1.945862e-02   5.667564e-02   5.999050e+02              8
    LD            38   6.304538e-01   6.191512e-01   1.130258e-02   6.244372e-02   6.085480e+02              9
    LD            45   6.304531e-01   6.210492e-01   9.403814e-03   6.552877e-02   6.867213e+02              9
    LD            47   6.304526e-01   6.237918e-01   6.660786e-03   7.129178e-02   6.592625e+02             10
    LD            53   6.304524e-01   6.238352e-01   6.617206e-03   7.436167e-02   7.127328e+02             10
    LD            56   6.304521e-01   6.263078e-01   4.144321e-03   8.002737e-02   6.997606e+02             11
    LD            61   6.304520e-01   6.268537e-01   3.598315e-03   8.354788e-02   7.301203e+02             11
    LD            64   6.304520e-01   6.269936e-01   3.458384e-03   8.665583e-02   7.385539e+02             11
    LD            66   6.304519e-01   6.283701e-01   2.081838e-03   9.220589e-02   7.157894e+02             12
    LD            71   6.304519e-01   6.287460e-01   1.705930e-03   9.525485e-02   7.453689e+02             12
    LD            77   6.304519e-01   6.287905e-01   1.661405e-03   9.839150e-02   7.825879e+02             12
    LD            80   6.304519e-01   6.289274e-01   1.524501e-03   1.014923e-01   7.882369e+02             12
    LD            84   6.304519e-01   6.294899e-01   9.619989e-04   1.073064e-01   7.828050e+02             13
    LD            89   6.304519e-01   6.296793e-01   7.725388e-04   1.103725e-01   8.063604e+02             13
    LD            92   6.304519e-01   6.296892e-01   7.626590e-04   1.133886e-01   8.113688e+02             13
    LD            94   6.304519e-01   6.299927e-01   4.591769e-04   1.191261e-01   7.890801e+02             14
    LD            98   6.304519e-01   6.300714e-01   3.804820e-04   1.221078e-01   8.025695e+02             14
    LD           102   6.304519e-01   6.301002e-01   3.516845e-04   1.251116e-01   8.152718e+02             14
    LD           107   6.304519e-01   6.301189e-01   3.329970e-04   1.281327e-01   8.350718e+02             14
    LD           109   6.304519e-01   6.302690e-01   1.828906e-04   1.338187e-01   8.145352e+02             15
    LD           115   6.304519e-01   6.303118e-01   1.400566e-04   1.368637e-01   8.402521e+02             15
    LD           118   6.304519e-01   6.303242e-01   1.276956e-04   1.399274e-01   8.432947e+02             15
    LD           120   6.304519e-01   6.303788e-01   7.302569e-05   1.455649e-01   8.243743e+02             16
    LD           125   6.304519e-01   6.304042e-01   4.764492e-05   1.485477e-01   8.414804e+02             16
    LD           132   6.304519e-01   6.304120e-01   3.984164e-05   1.516554e-01   8.703942e+02             16
    LD           135   6.304519e-01   6.304278e-01   2.404907e-05   1.573906e-01   8.577388e+02             17
    LD           143   6.304519e-01   6.304365e-01   1.531171e-05   1.605525e-01   8.906744e+02             17
    LD           148   6.304519e-01   6.304401e-01   1.177784e-05   1.636755e-01   9.042284e+02             17
    LD           155   6.304519e-01   6.304408e-01   1.108573e-05   1.668340e-01   9.290671e+02             17
    LD           157   6.304519e-01   6.304414e-01   1.043874e-05   1.698724e-01   9.242234e+02             17
    LD           159   6.304519e-01   6.304444e-01   7.451282e-06   1.756213e-01   9.053571e+02             18
    LD           162   6.304519e-01   6.304456e-01   6.256935e-06   1.786107e-01   9.070004e+02             18
    LD           164   6.304519e-01   6.304463e-01   5.604564e-06   1.815665e-01   9.032505e+02             18
    LD           167   6.304519e-01   6.304485e-01   3.353999e-06   1.871249e-01   8.924521e+02             19
    LD           171   6.304519e-01   6.304494e-01   2.496459e-06   1.901419e-01   8.993281e+02             19
    LD           174   6.304519e-01   6.304500e-01   1.889831e-06   1.931441e-01   9.008817e+02             19
    LD           178   6.304519e-01   6.304502e-01   1.707118e-06   1.962289e-01   9.071041e+02             19
    LD           181   6.304519e-01   6.304511e-01   7.752424e-07   2.019312e-01   8.963449e+02             20
    LD           186   6.304519e-01   6.304514e-01   4.811311e-07   2.048999e-01   9.077603e+02             20
    LD           192   6.304519e-01   6.304515e-01   4.033863e-07   2.081667e-01   9.223376e+02             20
     P          1000   6.304519e-01   6.304515e-01   4.033863e-07   2.733844e-01   3.657853e+03             20
     P          2000   6.304519e-01   6.304515e-01   4.033863e-07   3.553109e-01   5.628873e+03             20
     P          3000   6.304519e-01   6.304515e-01   4.033863e-07   4.567651e-01   6.567928e+03             20
     P          4000   6.304519e-01   6.304515e-01   4.033863e-07   5.234122e-01   7.642161e+03             20
     P          5000   6.304519e-01   6.304515e-01   4.033863e-07   6.103848e-01   8.191554e+03             20
     P          6000   6.304519e-01   6.304515e-01   4.033863e-07   7.013075e-01   8.555448e+03             20
     P          7000   6.304519e-01   6.304515e-01   4.033863e-07   7.649233e-01   9.151245e+03             20
     P          8000   6.304519e-01   6.304515e-01   4.033863e-07   8.473369e-01   9.441345e+03             20
     P          9000   6.304519e-01   6.304515e-01   4.033863e-07   9.483995e-01   9.489672e+03             20
     P         10000   6.304519e-01   6.304515e-01   4.033863e-07   1.006502e+00   9.935399e+03             20
  Last         10001   6.304519e-01   6.304515e-01   4.033710e-07   1.010677e+00   9.895345e+03             20
----------------------------------------------------------------------------------------------------------------
    PP         10001   6.304519e-01   6.304515e-01   4.033710e-07   1.013667e+00   9.866163e+03             20
----------------------------------------------------------------------------------------------------------------

Solution Statistics.
	 Solution Status: Time limit reached
	 Primal Objective: 0.6304518575314905
	 Dual Bound: 0.5962060048481607
	 Dual Gap (relative): 0.05743963060561827

Search Statistics.
	 Total number of nodes processed: 3755
	 Total number of lmo calls: 198994
	 Total time (s): 1801.875
	 LMO calls / sec: 110.43718348942075
	 Nodes / sec: 2.0839403399236907
	 LMO calls / node: 52.99440745672437


(seed, dimension) = (2, 18)
Away FW: true


Boscia Algorithm.

Parameter settings.
	 Tree traversal strategy: Move best bound
	 Branching strategy: Most infeasible
	 Absolute dual gap tolerance: 1.000000e-06
	 Relative dual gap tolerance: 1.000000e-02
	 Frank-Wolfe subproblem tolerance: 1.000000e-02
	 Frank-Wolfe dual gap decay factor: 8.000000e-01
	 Additional kwargs: 
Away FW: false
	 Total number of variables: 180
	 Number of integer variables: 0
	 Number of binary variables: 90


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Iter  Open          Bound      Incumbent      Gap (abs)      Gap (rel)       Time (s)      Nodes/sec      FW (ms)   LMO (ms)  LMO (calls c)   FW (its) #activeset  #shadow
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*     1     2   6.150512e-01   6.931472e-01   7.809596e-02   1.269747e-01   1.390000e-01   2.158273e+01          136        100             33         37        6        0
    100   101   6.210355e-01   6.931472e-01   7.211170e-02   1.161153e-01   2.916500e+01   6.891822e+00          312        221           6399        138       31        3
    200   201   6.215852e-01   6.931472e-01   7.156200e-02   1.151282e-01   6.503800e+01   6.165626e+00          420        272          14039        205       39        6
    300   301   6.217848e-01   6.931472e-01   7.136237e-02   1.147702e-01   1.060240e+02   5.668528e+00          664        346          22479        566       63       11
    400   401   6.219358e-01   6.931472e-01   7.121139e-02   1.144996e-01   1.519160e+02   5.272651e+00          408        255          31512        184       39        7
    500   501   6.220321e-01   6.931472e-01   7.111505e-02   1.143270e-01   2.020020e+02   4.955396e+00          430        278          40998        206       40        7
*   587   586   6.221058e-01   6.619055e-01   3.979963e-02   6.397566e-02   2.577840e+02   4.550321e+00          206        135          49851        118       17        0
    600   597   6.221094e-01   6.619055e-01   3.979606e-02   6.396956e-02   2.725760e+02   4.391436e+00          444        286          51167        224       59       31
    700   697   6.221584e-01   6.619055e-01   3.974703e-02   6.388571e-02   3.298170e+02   4.235682e+00         1642        462          61363       2583       89       22
    800   793   6.222061e-01   6.619055e-01   3.969939e-02   6.380425e-02   4.102370e+02   3.883121e+00          574        349          72278        387       48       10
*   859   848   6.222253e-01   6.616922e-01   3.946689e-02   6.342862e-02   4.603470e+02   3.708072e+00          262        142          78363        136       18        0
    900   889   6.222368e-01   6.616922e-01   3.945538e-02   6.340895e-02   4.935090e+02   3.625061e+00          642        380          82929        476       59       11
*   925   910   6.222471e-01   6.575093e-01   3.526219e-02   5.666912e-02   5.232250e+02   3.507095e+00          204        136          85845        104       17        0
   1000   975   6.222756e-01   6.575093e-01   3.523369e-02   5.662071e-02   6.131010e+02   3.221329e+00          489        314          94408        287       43       14
*  1041  1014   6.222843e-01   6.566488e-01   3.436450e-02   5.522315e-02   6.512390e+02   3.155524e+00          226        143          99190        111       18        0
*  1087  1058   6.223022e-01   6.559475e-01   3.364531e-02   5.406588e-02   6.953160e+02   3.084928e+00          250        153         104434        142       18        0
   1100  1071   6.223035e-01   6.559475e-01   3.364401e-02   5.406367e-02   7.047360e+02   3.080586e+00          354        239         105873        162       36        6
   1200  1169   6.223247e-01   6.559475e-01   3.362277e-02   5.402770e-02   7.802380e+02   3.036253e+00          457        296         117208        262       57       13
   1300  1259   6.223467e-01   6.559475e-01   3.360082e-02   5.399052e-02   8.873200e+02   2.883965e+00          414        293         128251        183       36        6
   1400  1349   6.223641e-01   6.559475e-01   3.358343e-02   5.396107e-02   9.822080e+02   2.798796e+00          714        356         139399        653       75       29
   1500  1441   6.223824e-01   6.559475e-01   3.356511e-02   5.393005e-02   1.087459e+03   2.704470e+00          654        363         151094        455       56       13
   1600  1537   6.224006e-01   6.559475e-01   3.354688e-02   5.389918e-02   1.178247e+03   2.662430e+00          538        313         162957        403       69       21
   1700  1623   6.224115e-01   6.559475e-01   3.353598e-02   5.388071e-02   1.306354e+03   2.543721e+00          838        388         175320        864       68       18
   1800  1707   6.224243e-01   6.559475e-01   3.352317e-02   5.385902e-02   1.427746e+03   2.456319e+00          371        249         186602        152       32        8
   1900  1783   6.224350e-01   6.559475e-01   3.351251e-02   5.384098e-02   1.549984e+03   2.376154e+00          818        431         197303        664       67       12
   2000  1873   6.224470e-01   6.559475e-01   3.350053e-02   5.382069e-02   1.676179e+03   2.310612e+00         1567        415         209131       2491       85       30
   2100  1965   6.224573e-01   6.559475e-01   3.349019e-02   5.380319e-02   1.792332e+03   2.267995e+00          713        374         221108        653       67       14
   2110  1975   6.224580e-01   6.559475e-01   3.348950e-02   5.380203e-02   1.800493e+03   2.268823e+00          757        376         222358        690       61       14
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Postprocessing

Blended Pairwise Conditional Gradient Algorithm.
MEMORY_MODE: FrankWolfe.InplaceEmphasis() STEPSIZE: Adaptive EPSILON: 1.0e-7 MAXITERATION: 10000 TYPE: Float64
GRADIENTTYPE: Nothing LAZY: true lazy_tolerance: 2.0

----------------------------------------------------------------------------------------------------------------
  Type     Iteration         Primal           Dual       Dual Gap           Time         It/sec     #ActiveSet
----------------------------------------------------------------------------------------------------------------
     I             1   7.708970e+01  -2.273160e+02   3.044057e+02   0.000000e+00            Inf              1
    LD             2   1.810210e+00  -1.901524e+01   2.082545e+01   7.497640e-04   2.667506e+03              2
    LD             5   7.061492e-01  -2.815959e+00   3.522108e+00   3.579401e-03   1.396882e+03              2
    LD             7   6.937089e-01  -2.326938e+00   3.020647e+00   6.422115e-03   1.089984e+03              2
    LD             9   6.659034e-01  -7.839474e-01   1.449851e+00   1.159077e-02   7.764796e+02              3
    LD            11   6.592048e-01   3.113759e-02   6.280673e-01   1.623848e-02   6.774031e+02              4
    LD            14   6.577903e-01   1.116595e-01   5.461309e-01   2.095650e-02   6.680504e+02              5
    LD            16   6.569373e-01   3.069328e-01   3.500045e-01   2.717519e-02   5.887723e+02              6
    LD            22   6.565993e-01   3.910979e-01   2.655013e-01   3.056430e-02   7.197940e+02              6
    LD            28   6.561176e-01   5.053168e-01   1.508008e-01   3.704722e-02   7.557923e+02              7
    LD            31   6.560198e-01   5.500715e-01   1.059483e-01   4.320676e-02   7.174804e+02              8
    LD            33   6.560146e-01   5.619071e-01   9.410752e-02   4.645749e-02   7.103268e+02              8
    LD            35   6.559888e-01   5.866618e-01   6.932694e-02   5.245601e-02   6.672257e+02              9
    LD            40   6.559803e-01   5.896864e-01   6.629387e-02   5.565343e-02   7.187338e+02              9
    LD            43   6.559657e-01   6.102513e-01   4.571432e-02   6.157408e-02   6.983458e+02             10
    LD            46   6.559632e-01   6.121238e-01   4.383934e-02   6.469965e-02   7.109775e+02             10
    LD            51   6.559541e-01   6.287285e-01   2.722558e-02   7.069417e-02   7.214173e+02             11
    LD            54   6.559532e-01   6.305283e-01   2.542487e-02   7.381262e-02   7.315822e+02             11
    LD            60   6.559514e-01   6.314133e-01   2.453805e-02   7.715408e-02   7.776646e+02             11
    LD            66   6.559486e-01   6.442305e-01   1.171809e-02   8.322927e-02   7.929902e+02             12
    LD            70   6.559483e-01   6.443174e-01   1.163085e-02   8.642102e-02   8.099881e+02             12
    LD            72   6.559478e-01   6.503259e-01   5.621935e-03   9.234874e-02   7.796533e+02             13
    LD            82   6.559476e-01   6.518585e-01   4.089131e-03   9.585499e-02   8.554589e+02             13
    LD            86   6.559476e-01   6.523894e-01   3.558212e-03   9.915249e-02   8.673508e+02             13
    LD            92   6.559476e-01   6.526611e-01   3.286498e-03   1.024834e-01   8.977063e+02             13
    LD            95   6.559475e-01   6.540267e-01   1.920842e-03   1.083980e-01   8.763996e+02             14
    LD           101   6.559475e-01   6.544731e-01   1.474353e-03   1.116619e-01   9.045164e+02             14
    LD           103   6.559475e-01   6.552411e-01   7.064214e-04   1.175595e-01   8.761522e+02             15
    LD           109   6.559475e-01   6.553920e-01   5.554792e-04   1.208656e-01   9.018284e+02             15
    LD           111   6.559475e-01   6.554258e-01   5.216995e-04   1.240047e-01   8.951273e+02             15
    LD           118   6.559475e-01   6.555308e-01   4.167358e-04   1.273210e-01   9.267914e+02             15
    LD           120   6.559475e-01   6.556968e-01   2.506486e-04   1.330994e-01   9.015820e+02             16
    LD           123   6.559475e-01   6.558021e-01   1.454402e-04   1.387321e-01   8.866011e+02             17
    LD           131   6.559475e-01   6.558672e-01   8.032507e-05   1.420825e-01   9.219994e+02             17
    LD           135   6.559475e-01   6.558750e-01   7.250748e-05   1.453138e-01   9.290241e+02             17
    LD           138   6.559475e-01   6.558771e-01   7.041007e-05   1.484238e-01   9.297697e+02             17
    LD           141   6.559475e-01   6.559054e-01   4.208562e-05   1.541578e-01   9.146470e+02             18
    LD           147   6.559475e-01   6.559199e-01   2.763224e-05   1.573627e-01   9.341475e+02             18
    LD           152   6.559475e-01   6.559207e-01   2.676479e-05   1.606410e-01   9.462094e+02             18
    LD           155   6.559475e-01   6.559329e-01   1.462554e-05   1.665664e-01   9.305600e+02             19
    LD           161   6.559475e-01   6.559390e-01   8.448838e-06   1.698318e-01   9.479965e+02             19
    LD           167   6.559475e-01   6.559415e-01   6.004839e-06   1.731592e-01   9.644304e+02             19
    LD           173   6.559475e-01   6.559432e-01   4.321622e-06   1.765592e-01   9.798413e+02             19
    LD           178   6.559475e-01   6.559443e-01   3.190546e-06   1.797995e-01   9.899919e+02             19
    LD           185   6.559475e-01   6.559450e-01   2.457690e-06   1.831473e-01   1.010116e+03             19
    LD           187   6.559475e-01   6.559452e-01   2.300092e-06   1.862382e-01   1.004090e+03             19
    LD           190   6.559475e-01   6.559460e-01   1.442373e-06   1.919839e-01   9.896663e+02             20
    LD           195   6.559475e-01   6.559464e-01   1.134205e-06   1.951175e-01   9.993979e+02             20
    LD           198   6.559475e-01   6.559464e-01   1.080687e-06   1.982128e-01   9.989266e+02             20
    LD           200   6.559475e-01   6.559470e-01   4.666202e-07   2.039075e-01   9.808370e+02             21
    LD           207   6.559475e-01   6.559473e-01   2.197437e-07   2.083691e-01   9.934296e+02             21
    LD           212   6.559475e-01   6.559473e-01   1.744995e-07   2.125646e-01   9.973439e+02             21
     P          1000   6.559475e-01   6.559473e-01   1.744995e-07   3.079906e-01   3.246852e+03             21
     P          2000   6.559475e-01   6.559473e-01   1.744995e-07   3.863948e-01   5.176053e+03             21
     P          3000   6.559475e-01   6.559473e-01   1.744995e-07   4.863898e-01   6.167892e+03             21
     P          4000   6.559475e-01   6.559473e-01   1.744995e-07   5.532868e-01   7.229524e+03             21
     P          5000   6.559475e-01   6.559473e-01   1.744995e-07   6.589011e-01   7.588392e+03             21
     P          6000   6.559475e-01   6.559473e-01   1.744995e-07   7.336453e-01   8.178339e+03             21
     P          7000   6.559475e-01   6.559473e-01   1.744995e-07   8.427536e-01   8.306105e+03             21
     P          8000   6.559475e-01   6.559473e-01   1.744995e-07   9.158019e-01   8.735513e+03             21
     P          9000   6.559475e-01   6.559473e-01   1.744995e-07   1.025001e+00   8.780481e+03             21
     P         10000   6.559475e-01   6.559473e-01   1.744995e-07   1.097536e+00   9.111318e+03             21
  Last         10001   6.559475e-01   6.559473e-01   1.726272e-07   1.101231e+00   9.081653e+03             21
----------------------------------------------------------------------------------------------------------------
    PP         10001   6.559475e-01   6.559473e-01   1.726272e-07   1.104109e+00   9.057980e+03             21
----------------------------------------------------------------------------------------------------------------

Solution Statistics.
	 Solution Status: Time limit reached
	 Primal Objective: 0.6559474923102904
	 Dual Bound: 0.6224579916722993
	 Dual Gap (relative): 0.05380202533510409

Search Statistics.
	 Total number of nodes processed: 4085
	 Total number of lmo calls: 222432
	 Total time (s): 1801.603
	 LMO calls / sec: 123.46338233228963
	 Nodes / sec: 2.2674251763568334
	 LMO calls / node: 54.45091799265606


(seed, dimension) = (1, 18)
Away FW: true


Boscia Algorithm.

Parameter settings.
	 Tree traversal strategy: Move best bound
	 Branching strategy: Most infeasible
	 Absolute dual gap tolerance: 1.000000e-06
	 Relative dual gap tolerance: 1.000000e-02
	 Frank-Wolfe subproblem tolerance: 1.000000e-02
	 Frank-Wolfe dual gap decay factor: 8.000000e-01
	 Additional kwargs: 
Away FW: false
	 Total number of variables: 180
	 Number of integer variables: 0
	 Number of binary variables: 90


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Iter  Open          Bound      Incumbent      Gap (abs)      Gap (rel)       Time (s)      Nodes/sec      FW (ms)   LMO (ms)  LMO (calls c)   FW (its) #activeset  #shadow
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*     1     2   5.840216e-01   6.931472e-01   1.091255e-01   1.868519e-01   1.250000e-01   2.400000e+01          123         90             31         34       10        0
*    65    64   5.937379e-01   6.304698e-01   3.673191e-02   6.186553e-02   3.188300e+01   4.046043e+00          202        121           4482        123       15        0
    100    99   5.943173e-01   6.304698e-01   3.615245e-02   6.083021e-02   4.192900e+01   4.746118e+00          309        213           6682        147       40        8
    200   199   5.950235e-01   6.304698e-01   3.544630e-02   5.957126e-02   8.088900e+01   4.932686e+00          370        226          14526        146       32        4
*   225   222   5.951119e-01   6.304519e-01   3.533991e-02   5.938363e-02   9.474200e+01   4.718076e+00          158        105          16601         80       15        0
    300   291   5.952929e-01   6.304519e-01   3.515895e-02   5.906160e-02   1.522820e+02   3.880958e+00          269        189          23062        112       29        4
    400   387   5.954860e-01   6.304519e-01   3.496582e-02   5.871812e-02   2.134450e+02   3.687133e+00          481        309          31965        245       40        8
    500   485   5.956288e-01   6.304519e-01   3.482307e-02   5.846438e-02   2.793720e+02   3.525765e+00          440        257          41699        227       43        7
    600   573   5.957050e-01   6.304519e-01   3.474690e-02   5.832905e-02   3.858340e+02   3.040168e+00          340        227          51668        147       48        8
    700   667   5.957828e-01   6.304519e-01   3.466901e-02   5.819068e-02   4.635450e+02   2.949013e+00          378        256          61621        185       37        4
    800   757   5.958503e-01   6.304519e-01   3.460151e-02   5.807080e-02   5.512940e+02   2.824264e+00          503        316          71840        293       46        7
    900   847   5.958973e-01   6.304519e-01   3.455456e-02   5.798744e-02   6.345200e+02   2.753262e+00         1531        425          81926       2577       87       20
   1000   939   5.959577e-01   6.304519e-01   3.449414e-02   5.788017e-02   7.193640e+02   2.695437e+00          490        303          92600        329       50        8
   1100  1033   5.959910e-01   6.304519e-01   3.446083e-02   5.782106e-02   8.117810e+02   2.627556e+00         1389        388         103571       2298       87       22
   1200  1121   5.960246e-01   6.304519e-01   3.442721e-02   5.776138e-02   9.169980e+02   2.531085e+00          671        342         114377        587       58       17
   1300  1213   5.960535e-01   6.304519e-01   3.439840e-02   5.771026e-02   1.007391e+03   2.494563e+00         1018        380         125068       1386       81       18
   1400  1305   5.960805e-01   6.304519e-01   3.437135e-02   5.766225e-02   1.109656e+03   2.437692e+00          296        201         136385        115       35        6
   1500  1395   5.961053e-01   6.304519e-01   3.434652e-02   5.761820e-02   1.218581e+03   2.375714e+00          368        232         146781        153       36        4
   1600  1483   5.961280e-01   6.304519e-01   3.432390e-02   5.757807e-02   1.339161e+03   2.302188e+00         1345        299         158708       2436       97       35
   1700  1571   5.961505e-01   6.304519e-01   3.430134e-02   5.753805e-02   1.462199e+03   2.237042e+00         1272        365         169676       2034       84       18
   1800  1663   5.961749e-01   6.304519e-01   3.427698e-02   5.749484e-02   1.581768e+03   2.189322e+00         1188        423         181401       1672       83       18
   1900  1743   5.961915e-01   6.304519e-01   3.426032e-02   5.746530e-02   1.711955e+03   2.127976e+00         4330        258         192413      10001       89       16
   1979  1814   5.962098e-01   6.304519e-01   3.424203e-02   5.743284e-02   1.801564e+03   2.105393e+00         1837        512         201285       3038       70        3
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Postprocessing

Blended Pairwise Conditional Gradient Algorithm.
MEMORY_MODE: FrankWolfe.InplaceEmphasis() STEPSIZE: Adaptive EPSILON: 1.0e-7 MAXITERATION: 10000 TYPE: Float64
GRADIENTTYPE: Nothing LAZY: true lazy_tolerance: 2.0

----------------------------------------------------------------------------------------------------------------
  Type     Iteration         Primal           Dual       Dual Gap           Time         It/sec     #ActiveSet
----------------------------------------------------------------------------------------------------------------
     I             1   4.419784e+01  -1.292126e+02   1.734105e+02   0.000000e+00            Inf              1
    LD             2   1.366125e+00  -1.085639e+01   1.222252e+01   1.237389e-02   1.616307e+02              2
    LD             5   7.008586e-01  -2.805738e+00   3.506597e+00   1.559196e-02   3.206780e+02              2
    LD             7   6.933804e-01  -2.782067e+00   3.475447e+00   1.842920e-02   3.798319e+02              2
    LD             9   6.331349e-01   9.508224e-02   5.380527e-01   2.367531e-02   3.801429e+02              3
    LD            13   6.311008e-01   3.377760e-01   2.933248e-01   2.923682e-02   4.446448e+02              4
    LD            15   6.306650e-01   4.635440e-01   1.671210e-01   3.415500e-02   4.391743e+02              5
    LD            17   6.306344e-01   4.709989e-01   1.596355e-01   3.707817e-02   4.584908e+02              5
    LD            19   6.305002e-01   5.586400e-01   7.186024e-02   4.441667e-02   4.277673e+02              6
    LD            21   6.304939e-01   5.605097e-01   6.998420e-02   4.806323e-02   4.369245e+02              6
    LD            23   6.304672e-01   5.915010e-01   3.896620e-02   5.512252e-02   4.172524e+02              7
    LD            25   6.304650e-01   5.951867e-01   3.527830e-02   5.882293e-02   4.250043e+02              7
    LD            27   6.304641e-01   5.952597e-01   3.520445e-02   6.257629e-02   4.314733e+02              7
    LD            29   6.304579e-01   6.100179e-01   2.043998e-02   6.965069e-02   4.163634e+02              8
    LD            34   6.304563e-01   6.109977e-01   1.945862e-02   7.350352e-02   4.625629e+02              8
    LD            38   6.304538e-01   6.191512e-01   1.130258e-02   8.034790e-02   4.729433e+02              9
    LD            45   6.304531e-01   6.210492e-01   9.403814e-03   8.414048e-02   5.348199e+02              9
    LD            47   6.304526e-01   6.237918e-01   6.660786e-03   9.138479e-02   5.143088e+02             10
    LD            53   6.304524e-01   6.238352e-01   6.617206e-03   9.510661e-02   5.572694e+02             10
    LD            56   6.304521e-01   6.263078e-01   4.144321e-03   1.017918e-01   5.501425e+02             11
    LD            61   6.304520e-01   6.268537e-01   3.598315e-03   1.054656e-01   5.783875e+02             11
    LD            64   6.304520e-01   6.269936e-01   3.458384e-03   1.091034e-01   5.865995e+02             11
    LD            66   6.304519e-01   6.283701e-01   2.081838e-03   1.155797e-01   5.710346e+02             12
    LD            71   6.304519e-01   6.287460e-01   1.705930e-03   1.191733e-01   5.957712e+02             12
    LD            77   6.304519e-01   6.287905e-01   1.661405e-03   1.229480e-01   6.262810e+02             12
    LD            80   6.304519e-01   6.289274e-01   1.524501e-03   1.266106e-01   6.318587e+02             12
    LD            84   6.304519e-01   6.294899e-01   9.619989e-04   1.333535e-01   6.299047e+02             13
    LD            89   6.304519e-01   6.296793e-01   7.725388e-04   1.369931e-01   6.496678e+02             13
    LD            92   6.304519e-01   6.296892e-01   7.626590e-04   1.405838e-01   6.544139e+02             13
    LD            94   6.304519e-01   6.299927e-01   4.591769e-04   1.473050e-01   6.381317e+02             14
    LD            98   6.304519e-01   6.300714e-01   3.804820e-04   1.508696e-01   6.495676e+02             14
    LD           102   6.304519e-01   6.301002e-01   3.516845e-04   1.545081e-01   6.601596e+02             14
    LD           107   6.304519e-01   6.301189e-01   3.329970e-04   1.584618e-01   6.752416e+02             14
    LD           109   6.304519e-01   6.302690e-01   1.828906e-04   1.642200e-01   6.637439e+02             15
    LD           115   6.304519e-01   6.303118e-01   1.400566e-04   1.674768e-01   6.866624e+02             15
    LD           118   6.304519e-01   6.303242e-01   1.276956e-04   1.706193e-01   6.915984e+02             15
    LD           120   6.304519e-01   6.303788e-01   7.302569e-05   1.763668e-01   6.804000e+02             16
    LD           125   6.304519e-01   6.304042e-01   4.764492e-05   1.794805e-01   6.964544e+02             16
    LD           132   6.304519e-01   6.304120e-01   3.984164e-05   1.828536e-01   7.218888e+02             16
    LD           135   6.304519e-01   6.304278e-01   2.404907e-05   1.886884e-01   7.154655e+02             17
    LD           143   6.304519e-01   6.304365e-01   1.531171e-05   1.921008e-01   7.444007e+02             17
    LD           148   6.304519e-01   6.304401e-01   1.177784e-05   1.954093e-01   7.573846e+02             17
    LD           155   6.304519e-01   6.304408e-01   1.108573e-05   1.987981e-01   7.796857e+02             17
    LD           157   6.304519e-01   6.304414e-01   1.043874e-05   2.019236e-01   7.775217e+02             17
    LD           159   6.304519e-01   6.304444e-01   7.451282e-06   2.077457e-01   7.653589e+02             18
    LD           162   6.304519e-01   6.304456e-01   6.256935e-06   2.108126e-01   7.684550e+02             18
    LD           164   6.304519e-01   6.304463e-01   5.604564e-06   2.138548e-01   7.668753e+02             18
    LD           167   6.304519e-01   6.304485e-01   3.353999e-06   2.196117e-01   7.604332e+02             19
    LD           171   6.304519e-01   6.304494e-01   2.496459e-06   2.228115e-01   7.674648e+02             19
    LD           174   6.304519e-01   6.304500e-01   1.889831e-06   2.259563e-01   7.700605e+02             19
    LD           178   6.304519e-01   6.304502e-01   1.707118e-06   2.292222e-01   7.765390e+02             19
    LD           181   6.304519e-01   6.304511e-01   7.752424e-07   2.351188e-01   7.698235e+02             20
    LD           186   6.304519e-01   6.304514e-01   4.811311e-07   2.382952e-01   7.805445e+02             20
    LD           192   6.304519e-01   6.304515e-01   4.033863e-07   2.420131e-01   7.933455e+02             20
     P          1000   6.304519e-01   6.304515e-01   4.033863e-07   3.233403e-01   3.092717e+03             20
     P          2000   6.304519e-01   6.304515e-01   4.033863e-07   4.157522e-01   4.810558e+03             20
     P          3000   6.304519e-01   6.304515e-01   4.033863e-07   4.897921e-01   6.125048e+03             20
     P          4000   6.304519e-01   6.304515e-01   4.033863e-07   5.741795e-01   6.966462e+03             20
     P          5000   6.304519e-01   6.304515e-01   4.033863e-07   6.702951e-01   7.459401e+03             20
     P          6000   6.304519e-01   6.304515e-01   4.033863e-07   7.306930e-01   8.211383e+03             20
     P          7000   6.304519e-01   6.304515e-01   4.033863e-07   8.161292e-01   8.577073e+03             20
     P          8000   6.304519e-01   6.304515e-01   4.033863e-07   8.818294e-01   9.072050e+03             20
     P          9000   6.304519e-01   6.304515e-01   4.033863e-07   9.735763e-01   9.244267e+03             20
     P         10000   6.304519e-01   6.304515e-01   4.033863e-07   1.062651e+00   9.410423e+03             20
  Last         10001   6.304519e-01   6.304515e-01   4.033710e-07   1.067970e+00   9.364495e+03             20
----------------------------------------------------------------------------------------------------------------
    PP         10001   6.304519e-01   6.304515e-01   4.033710e-07   1.070895e+00   9.338917e+03             20
----------------------------------------------------------------------------------------------------------------

Solution Statistics.
	 Solution Status: Time limit reached
	 Primal Objective: 0.6304518575314905
	 Dual Bound: 0.596209831252383
	 Dual Gap (relative): 0.05743284408306304

Search Statistics.
	 Total number of nodes processed: 3793
	 Total number of lmo calls: 201360
	 Total time (s): 1802.641
	 LMO calls / sec: 111.70277387455405
	 Nodes / sec: 2.1041349886083807
	 LMO calls / node: 53.0872660163459


(seed, dimension) = (2, 18)
Away FW: true


Boscia Algorithm.

Parameter settings.
	 Tree traversal strategy: Move best bound
	 Branching strategy: Most infeasible
	 Absolute dual gap tolerance: 1.000000e-06
	 Relative dual gap tolerance: 1.000000e-02
	 Frank-Wolfe subproblem tolerance: 1.000000e-02
	 Frank-Wolfe dual gap decay factor: 8.000000e-01
	 Additional kwargs: 
Away FW: false
	 Total number of variables: 180
	 Number of integer variables: 0
	 Number of binary variables: 90


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Iter  Open          Bound      Incumbent      Gap (abs)      Gap (rel)       Time (s)      Nodes/sec      FW (ms)   LMO (ms)  LMO (calls c)   FW (its) #activeset  #shadow
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*     1     2   6.150512e-01   6.931472e-01   7.809596e-02   1.269747e-01   1.390000e-01   2.158273e+01          137        100             33         37        6        0
    100   101   6.210355e-01   6.931472e-01   7.211170e-02   1.161153e-01   2.926900e+01   6.867334e+00          351        219           6399        138       31        3
    200   201   6.215852e-01   6.931472e-01   7.156200e-02   1.151282e-01   6.519600e+01   6.150684e+00          422        274          14039        205       39        6
    300   301   6.217848e-01   6.931472e-01   7.136237e-02   1.147702e-01   1.062520e+02   5.656364e+00          658        345          22479        566       63       11
    400   401   6.219358e-01   6.931472e-01   7.121139e-02   1.144996e-01   1.521480e+02   5.264611e+00          370        255          31512        184       39        7
    500   501   6.220321e-01   6.931472e-01   7.111505e-02   1.143270e-01   2.022160e+02   4.950152e+00          417        279          40998        206       40        7
*   587   586   6.221058e-01   6.619055e-01   3.979963e-02   6.397566e-02   2.579570e+02   4.547270e+00          222        138          49851        118       17        0
    600   597   6.221094e-01   6.619055e-01   3.979606e-02   6.396956e-02   2.727510e+02   4.388618e+00          442        284          51167        224       59       31
    700   697   6.221584e-01   6.619055e-01   3.974703e-02   6.388571e-02   3.300010e+02   4.233321e+00         1625        462          61363       2583       89       22
    800   793   6.222061e-01   6.619055e-01   3.969939e-02   6.380425e-02   4.102740e+02   3.882771e+00          586        347          72278        387       48       10
*   859   848   6.222253e-01   6.616922e-01   3.946689e-02   6.342862e-02   4.602970e+02   3.708475e+00          237        145          78363        136       18        0
    900   889   6.222368e-01   6.616922e-01   3.945538e-02   6.340895e-02   4.934690e+02   3.625354e+00          671        382          82929        476       59       11
*   925   910   6.222471e-01   6.575093e-01   3.526219e-02   5.666912e-02   5.230630e+02   3.508182e+00          210        133          85845        104       17        0
   1000   975   6.222756e-01   6.575093e-01   3.523369e-02   5.662071e-02   6.126550e+02   3.223674e+00          505        316          94408        287       43       14
*  1041  1014   6.222843e-01   6.566488e-01   3.436450e-02   5.522315e-02   6.506580e+02   3.158341e+00          220        138          99190        111       18        0
*  1087  1058   6.223022e-01   6.559475e-01   3.364531e-02   5.406588e-02   6.945910e+02   3.088148e+00          246        149         104434        142       18        0
   1100  1071   6.223035e-01   6.559475e-01   3.364401e-02   5.406367e-02   7.040570e+02   3.083557e+00          377        239         105873        162       36        6
   1200  1169   6.223247e-01   6.559475e-01   3.362277e-02   5.402770e-02   7.795230e+02   3.039038e+00          451        296         117208        262       57       13
   1300  1259   6.223467e-01   6.559475e-01   3.360082e-02   5.399052e-02   8.866560e+02   2.886125e+00          440        296         128251        183       36        6
   1400  1349   6.223641e-01   6.559475e-01   3.358343e-02   5.396107e-02   9.815210e+02   2.800755e+00          725        362         139399        653       75       29
   1500  1441   6.223824e-01   6.559475e-01   3.356511e-02   5.393005e-02   1.087365e+03   2.704704e+00          656        371         151094        455       56       13
   1600  1537   6.224006e-01   6.559475e-01   3.354688e-02   5.389918e-02   1.178307e+03   2.662294e+00          542        315         162957        403       69       21
   1700  1623   6.224115e-01   6.559475e-01   3.353598e-02   5.388071e-02   1.304476e+03   2.547383e+00          819        390         175320        864       68       18
   1800  1707   6.224243e-01   6.559475e-01   3.352317e-02   5.385902e-02   1.423665e+03   2.463360e+00          355        247         186602        152       32        8
   1900  1783   6.224350e-01   6.559475e-01   3.351251e-02   5.384098e-02   1.543365e+03   2.386344e+00          819        430         197303        664       67       12
   2000  1873   6.224470e-01   6.559475e-01   3.350053e-02   5.382069e-02   1.667420e+03   2.322750e+00         1521        417         209131       2491       85       30
   2100  1965   6.224573e-01   6.559475e-01   3.349019e-02   5.380319e-02   1.781677e+03   2.281558e+00          728        372         221108        653       67       14
   2122  1987   6.224596e-01   6.559475e-01   3.348787e-02   5.379927e-02   1.801533e+03   2.280835e+00         3618        322         223802       8013       87        6
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Postprocessing

Blended Pairwise Conditional Gradient Algorithm.
MEMORY_MODE: FrankWolfe.InplaceEmphasis() STEPSIZE: Adaptive EPSILON: 1.0e-7 MAXITERATION: 10000 TYPE: Float64
GRADIENTTYPE: Nothing LAZY: true lazy_tolerance: 2.0

----------------------------------------------------------------------------------------------------------------
  Type     Iteration         Primal           Dual       Dual Gap           Time         It/sec     #ActiveSet
----------------------------------------------------------------------------------------------------------------
     I             1   7.708970e+01  -2.273160e+02   3.044057e+02   0.000000e+00            Inf              1
    LD             2   1.810210e+00  -1.901524e+01   2.082545e+01   1.210169e-02   1.652662e+02              2
    LD             5   7.061492e-01  -2.815959e+00   3.522108e+00   1.513047e-02   3.304589e+02              2
    LD             7   6.937089e-01  -2.326938e+00   3.020647e+00   1.780908e-02   3.930580e+02              2
    LD             9   6.659034e-01  -7.839474e-01   1.449851e+00   2.241176e-02   4.015749e+02              3
    LD            11   6.592048e-01   3.113759e-02   6.280673e-01   2.689906e-02   4.089362e+02              4
    LD            14   6.577903e-01   1.116595e-01   5.461309e-01   3.147935e-02   4.447360e+02              5
    LD            16   6.569373e-01   3.069328e-01   3.500045e-01   3.622212e-02   4.417190e+02              6
    LD            22   6.565993e-01   3.910979e-01   2.655013e-01   3.913351e-02   5.621780e+02              6
    LD            28   6.561176e-01   5.053168e-01   1.508008e-01   4.469040e-02   6.265327e+02              7
    LD            31   6.560198e-01   5.500715e-01   1.059483e-01   4.957422e-02   6.253250e+02              8
    LD            33   6.560146e-01   5.619071e-01   9.410752e-02   5.228381e-02   6.311705e+02              8
    LD            35   6.559888e-01   5.866618e-01   6.932694e-02   5.860882e-02   5.971798e+02              9
    LD            40   6.559803e-01   5.896864e-01   6.629387e-02   6.176510e-02   6.476149e+02              9
    LD            43   6.559657e-01   6.102513e-01   4.571432e-02   6.764458e-02   6.356755e+02             10
    LD            46   6.559632e-01   6.121238e-01   4.383934e-02   7.071075e-02   6.505376e+02             10
    LD            51   6.559541e-01   6.287285e-01   2.722558e-02   7.668334e-02   6.650727e+02             11
    LD            54   6.559532e-01   6.305283e-01   2.542487e-02   7.984197e-02   6.763360e+02             11
    LD            60   6.559514e-01   6.314133e-01   2.453805e-02   8.324876e-02   7.207315e+02             11
    LD            66   6.559486e-01   6.442305e-01   1.171809e-02   8.934491e-02   7.387103e+02             12
    LD            70   6.559483e-01   6.443174e-01   1.163085e-02   9.253832e-02   7.564434e+02             12
    LD            72   6.559478e-01   6.503259e-01   5.621935e-03   9.834046e-02   7.321503e+02             13
    LD            82   6.559476e-01   6.518585e-01   4.089131e-03   1.018397e-01   8.051868e+02             13
    LD            86   6.559476e-01   6.523894e-01   3.558212e-03   1.051005e-01   8.182645e+02             13
    LD            92   6.559476e-01   6.526611e-01   3.286498e-03   1.084458e-01   8.483497e+02             13
    LD            95   6.559475e-01   6.540267e-01   1.920842e-03   1.142976e-01   8.311633e+02             14
    LD           101   6.559475e-01   6.544731e-01   1.474353e-03   1.175406e-01   8.592776e+02             14
    LD           103   6.559475e-01   6.552411e-01   7.064214e-04   1.233614e-01   8.349454e+02             15
    LD           109   6.559475e-01   6.553920e-01   5.554792e-04   1.265989e-01   8.609867e+02             15
    LD           111   6.559475e-01   6.554258e-01   5.216995e-04   1.296990e-01   8.558274e+02             15
    LD           118   6.559475e-01   6.555308e-01   4.167358e-04   1.330148e-01   8.871190e+02             15
    LD           120   6.559475e-01   6.556968e-01   2.506486e-04   1.389244e-01   8.637792e+02             16
    LD           123   6.559475e-01   6.558021e-01   1.454402e-04   1.447188e-01   8.499242e+02             17
    LD           131   6.559475e-01   6.558672e-01   8.032507e-05   1.481506e-01   8.842352e+02             17
    LD           135   6.559475e-01   6.558750e-01   7.250748e-05   1.514200e-01   8.915598e+02             17
    LD           138   6.559475e-01   6.558771e-01   7.041007e-05   1.545657e-01   8.928240e+02             17
    LD           141   6.559475e-01   6.559054e-01   4.208562e-05   1.603867e-01   8.791253e+02             18
    LD           147   6.559475e-01   6.559199e-01   2.763224e-05   1.636834e-01   8.980754e+02             18
    LD           152   6.559475e-01   6.559207e-01   2.676479e-05   1.669797e-01   9.102903e+02             18
    LD           155   6.559475e-01   6.559329e-01   1.462554e-05   1.728693e-01   8.966314e+02             19
    LD           161   6.559475e-01   6.559390e-01   8.448838e-06   1.761239e-01   9.141294e+02             19
    LD           167   6.559475e-01   6.559415e-01   6.004839e-06   1.794530e-01   9.306058e+02             19
    LD           173   6.559475e-01   6.559432e-01   4.321622e-06   1.828506e-01   9.461274e+02             19
    LD           178   6.559475e-01   6.559443e-01   3.190546e-06   1.861728e-01   9.561010e+02             19
    LD           185   6.559475e-01   6.559450e-01   2.457690e-06   1.896153e-01   9.756597e+02             19
    LD           187   6.559475e-01   6.559452e-01   2.300092e-06   1.927391e-01   9.702236e+02             19
    LD           190   6.559475e-01   6.559460e-01   1.442373e-06   1.986159e-01   9.566204e+02             20
    LD           195   6.559475e-01   6.559464e-01   1.134205e-06   2.018857e-01   9.658933e+02             20
    LD           198   6.559475e-01   6.559464e-01   1.080687e-06   2.050628e-01   9.655579e+02             20
    LD           200   6.559475e-01   6.559470e-01   4.666202e-07   2.108188e-01   9.486819e+02             21
    LD           207   6.559475e-01   6.559473e-01   2.197437e-07   2.382066e-01   8.689937e+02             21
    LD           212   6.559475e-01   6.559473e-01   1.744995e-07   2.424581e-01   8.743780e+02             21
     P          1000   6.559475e-01   6.559473e-01   1.744995e-07   3.033898e-01   3.296090e+03             21
     P          2000   6.559475e-01   6.559473e-01   1.744995e-07   4.019839e-01   4.975323e+03             21
     P          3000   6.559475e-01   6.559473e-01   1.744995e-07   4.993701e-01   6.007568e+03             21
     P          4000   6.559475e-01   6.559473e-01   1.744995e-07   5.590835e-01   7.154566e+03             21
     P          5000   6.559475e-01   6.559473e-01   1.744995e-07   6.527901e-01   7.659430e+03             21
     P          6000   6.559475e-01   6.559473e-01   1.744995e-07   7.568839e-01   7.927240e+03             21
     P          7000   6.559475e-01   6.559473e-01   1.744995e-07   8.278418e-01   8.455722e+03             21
     P          8000   6.559475e-01   6.559473e-01   1.744995e-07   9.222705e-01   8.674245e+03             21
     P          9000   6.559475e-01   6.559473e-01   1.744995e-07   1.017439e+00   8.845739e+03             21
     P         10000   6.559475e-01   6.559473e-01   1.744995e-07   1.094724e+00   9.134719e+03             21
  Last         10001   6.559475e-01   6.559473e-01   1.726272e-07   1.098324e+00   9.105696e+03             21
----------------------------------------------------------------------------------------------------------------
    PP         10001   6.559475e-01   6.559473e-01   1.726272e-07   1.101270e+00   9.081331e+03             21
----------------------------------------------------------------------------------------------------------------
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: In memory_mode memory iterates are written back into x0!
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: In memory_mode memory iterates are written back into x0!
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: In memory_mode memory iterates are written back into x0!
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: In memory_mode memory iterates are written back into x0!
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: In memory_mode memory iterates are written back into x0!
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: In memory_mode memory iterates are written back into x0!
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: In memory_mode memory iterates are written back into x0!
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: In memory_mode memory iterates are written back into x0!
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: In memory_mode memory iterates are written back into x0!
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: In memory_mode memory iterates are written back into x0!
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: In memory_mode memory iterates are written back into x0!
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: In memory_mode memory iterates are written back into x0!

Solution Statistics.
	 Solution Status: Time limit reached
	 Primal Objective: 0.6559474923102904
	 Dual Bound: 0.6224596202639222
	 Dual Gap (relative): 0.05379926818733935

Search Statistics.
	 Total number of nodes processed: 4109
	 Total number of lmo calls: 223876
	 Total time (s): 1802.641
	 LMO calls / sec: 124.19333633263639
	 Nodes / sec: 2.2794333425235527
	 LMO calls / node: 54.48430275006084


WARNING: using JuMP.MOI in module Main conflicts with an existing identifier.
(seed, dimension) = (4, 120)
Away FW: false
set = MathOptInterface.LessThan{Float64}(159.0)
v[idx] = 1564.0
set = MathOptInterface.LessThan{Float64}(84.0)
v[idx] = 589.0
set = MathOptInterface.LessThan{Float64}(133.0)
v[idx] = 631.0
set = MathOptInterface.LessThan{Float64}(274.0)
v[idx] = 473.0
set = MathOptInterface.LessThan{Float64}(25.0)
v[idx] = 577.0
set = MathOptInterface.LessThan{Float64}(149.0)
v[idx] = 1780.0
set = MathOptInterface.LessThan{Float64}(37.0)
v[idx] = 120.0
set = MathOptInterface.LessThan{Float64}(27.0)
v[idx] = 84.0
set = MathOptInterface.LessThan{Float64}(46.0)
v[idx] = 133.0
set = MathOptInterface.LessThan{Float64}(66.0)
v[idx] = 612.0
set = MathOptInterface.LessThan{Float64}(42.0)
v[idx] = 92.0
set = MathOptInterface.LessThan{Float64}(160.0)
v[idx] = 192.0


Boscia Algorithm.

Parameter settings.
	 Tree traversal strategy: Move best bound
	 Branching strategy: Most infeasible
	 Absolute dual gap tolerance: 1.000000e-06
	 Relative dual gap tolerance: 1.000000e-02
	 Frank-Wolfe subproblem tolerance: 1.000000e-02
	 Frank-Wolfe dual gap decay factor: 8.000000e-01
	 Additional kwargs: 
Away FW: true
	 Total number of variables: 120
	 Number of integer variables: 60
	 Number of binary variables: 0


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Iter  Open          Bound      Incumbent      Gap (abs)      Gap (rel)       Time (s)      Nodes/sec      FW (ms)   LMO (ms)  LMO (calls c)   FW (its) #activeset  #shadow
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*     1     2  -3.040405e+01   4.486188e-01   3.085267e+01            Inf   3.696000e+00   8.116883e-01         3039        501             97      10001       73        0
*     4     5  -2.858132e+01  -1.278011e+00   2.730331e+01   2.136392e+01   1.339900e+01   6.716919e-01         2745         74            253      10001       76        0
*     6     7  -2.858132e+01  -4.336397e+00   2.424493e+01   5.591030e+00   1.905800e+01   6.821282e-01         2733         43            388      10001       73        0
*     8     9  -2.858132e+01  -4.578978e+00   2.400235e+01   5.241856e+00   2.486500e+01   6.836919e-01         2766         65            524      10001       77        0
*    13    14  -2.777709e+01  -5.174344e+00   2.260275e+01   4.368234e+00   4.052900e+01   6.661896e-01         3235        311           1005      10001       67        0
*    22    23  -2.777709e+01  -6.047487e+00   2.172960e+01   3.593162e+00   6.678400e+01   6.738141e-01         2808         43           1558      10001       72        0
*    64    65  -2.637024e+01  -6.124104e+00   2.024614e+01   3.305976e+00   1.942540e+02   6.640790e-01         2874         57           4700      10001       67        0
    100   101  -2.559381e+01  -6.124104e+00   1.946971e+01   3.179193e+00   3.058150e+02   6.572601e-01         2914         66           7411      10001       71        0
*   118   119  -2.522925e+01  -7.029975e+00   1.819927e+01   2.588811e+00   3.625220e+02   6.537534e-01         2928         62           8770      10001       81        0
    200   197  -2.485410e+01  -7.029975e+00   1.782413e+01   2.535447e+00   6.214930e+02   6.387843e-01         1130         96          15426       3423       74        0
    300   293  -2.302217e+01  -7.029975e+00   1.599220e+01   2.274859e+00   9.317070e+02   6.364662e-01         2822         43          23478      10001       63        0
    400   391  -2.191688e+01  -7.029975e+00   1.488691e+01   2.117633e+00   1.239511e+03   6.381549e-01         2994         67          31590      10001       66        0
AssertionError("is_linear_feasible(tree.root.problem.lmo, state.v)")
(seed, dimension) = (5, 120)
Away FW: false
set = MathOptInterface.LessThan{Float64}(30.0)
v[idx] = 388.0
set = MathOptInterface.LessThan{Float64}(87.0)
v[idx] = 965.0
set = MathOptInterface.LessThan{Float64}(92.0)
v[idx] = 170.0
set = MathOptInterface.LessThan{Float64}(36.0)
v[idx] = 124.0
set = MathOptInterface.LessThan{Float64}(88.0)
v[idx] = 612.0
AssertionError("is_linear_feasible(tree.root.problem.lmo, state.v)")
(seed, dimension) = (6, 120)
Away FW: false
set = MathOptInterface.LessThan{Float64}(86.0)
v[idx] = 1387.0
set = MathOptInterface.LessThan{Float64}(42.0)
v[idx] = 218.0
set = MathOptInterface.LessThan{Float64}(67.0)
v[idx] = 88.0
set = MathOptInterface.LessThan{Float64}(144.0)
v[idx] = 217.0
set = MathOptInterface.LessThan{Float64}(174.0)
v[idx] = 193.0
set = MathOptInterface.LessThan{Float64}(195.0)
v[idx] = 264.0
set = MathOptInterface.LessThan{Float64}(41.0)
v[idx] = 321.0
set = MathOptInterface.LessThan{Float64}(241.0)
v[idx] = 421.0


Boscia Algorithm.

Parameter settings.
	 Tree traversal strategy: Move best bound
	 Branching strategy: Most infeasible
	 Absolute dual gap tolerance: 1.000000e-06
	 Relative dual gap tolerance: 1.000000e-02
	 Frank-Wolfe subproblem tolerance: 1.000000e-02
	 Frank-Wolfe dual gap decay factor: 8.000000e-01
	 Additional kwargs: 
Away FW: true
	 Total number of variables: 120
	 Number of integer variables: 60
	 Number of binary variables: 0


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Iter  Open          Bound      Incumbent      Gap (abs)      Gap (rel)       Time (s)      Nodes/sec      FW (ms)   LMO (ms)  LMO (calls c)   FW (its) #activeset  #shadow
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*     1     2  -4.171083e+01   1.584421e+01   5.755504e+01            Inf   2.861000e+00   1.048584e+00         2859        421             93      10001       72        0
*     2     3  -4.171083e+01   6.814344e+00   4.852517e+01            Inf   5.672000e+00   8.815233e-01         2807        242            141      10001       78        0
*     4     3  -1.393109e+01   2.921210e+00   1.685230e+01            Inf   1.051700e+01   6.655890e-01         2787        150            267      10001       82        0
*    26     7  -5.436477e+00   2.108504e+00   7.544981e+00            Inf   5.979000e+01   5.519318e-01         2941        167           1992      10001       87        0
*    28     7  -5.436477e+00   1.680159e+00   7.116636e+00            Inf   6.515200e+01   5.372053e-01         2982        193           2148      10001       86        0
*    30     5  -4.527003e+00   1.082640e+00   5.609643e+00            Inf   7.094200e+01   5.215528e-01         2998        204           2317      10001       86        0
*    32     5  -4.527003e+00   8.977520e-01   5.424755e+00            Inf   7.681300e+01   5.077266e-01         3063        237           2519      10001       93        0
*    38     3  -1.488901e+00   7.734908e-01   2.262392e+00            Inf   8.871000e+01   4.847255e-01         3046        188           2993      10001       99        0
*    40     3  -1.425050e+00   6.950255e-01   2.120075e+00            Inf   9.431000e+01   4.771498e-01         3460        283           3180      10001      101        0
*    42     3  -1.425050e+00   5.297031e-01   1.954753e+00            Inf   9.868700e+01   4.762532e-01         3340        256           3353      10001      103        0
*    44     3  -1.279474e+00   4.571610e-01   1.736635e+00            Inf   1.044340e+02   4.691959e-01         3369        313           3544      10001      105        0
*    46     3  -1.107630e+00   3.945201e-01   1.502150e+00            Inf   1.105410e+02   4.613673e-01         3372        383           3766      10001      119        0
*    48     3  -1.107630e+00   3.463712e-01   1.454001e+00            Inf   1.158800e+02   4.573697e-01         3334        353           3980      10001      107        0
*    52     3  -1.107630e+00   2.730335e-01   1.380663e+00            Inf   1.255600e+02   4.539662e-01         3390        414           4385      10001      100        0
*    54     3  -1.088262e+00   1.818004e-01   1.270063e+00            Inf   1.307110e+02   4.513775e-01         3191        264           4628      10001       89        0
*    58     3  -8.594661e-01   4.643245e-02   9.058986e-01            Inf   1.399620e+02   4.501222e-01         3155        242           4928      10001       82        0
*    60     3  -8.594661e-01  -2.719595e-02   8.322702e-01   3.060272e+01   1.449820e+02   4.483315e-01         3247        222           5103      10001       77        0
*    62     3  -7.376741e-01  -5.901474e-02   6.786593e-01   1.149983e+01   1.490940e+02   4.493809e-01         3294        286           5243      10001       77        0
*    66     3  -7.376741e-01  -7.288989e-02   6.647842e-01   9.120389e+00   1.567710e+02   4.528899e-01         3380        276           5538      10001       73        0
*    68     3  -7.376741e-01  -8.822910e-02   6.494450e-01   7.360893e+00   1.647290e+02   4.431521e-01         5063        407           5758      10001      117        0
*    70     3  -7.376741e-01  -1.003886e-01   6.372854e-01   6.348182e+00   1.712290e+02   4.380099e-01         5417        261           5934      10001       82        0
*    72     3  -6.145107e-01  -1.155897e-01   4.989210e-01   4.316310e+00   1.821430e+02   4.227448e-01         6662        342           6144      10001       67        0
*    74     3  -6.145107e-01  -1.487616e-01   4.657491e-01   3.130841e+00   1.885290e+02   4.190337e-01         5493        185           6263      10001       63        0
*    76     3  -4.850689e-01  -1.793821e-01   3.056869e-01   1.704111e+00   1.976780e+02   4.097573e-01         7339        480           6434      10001       84        0
*    78     3  -4.850689e-01  -2.007966e-01   2.842723e-01   1.415722e+00   2.059950e+02   4.029224e-01         5604        373           6615      10001       90        0
*    80     3  -4.785020e-01  -2.314952e-01   2.470069e-01   1.067007e+00   2.137270e+02   3.977036e-01         5878        199           6762      10001       62        0
*    82     3  -4.785020e-01  -2.399106e-01   2.385914e-01   9.945011e-01   2.206520e+02   3.942860e-01         6074        404           6925      10001       78        0
*    84     3  -4.785020e-01  -2.417127e-01   2.367894e-01   9.796315e-01   2.273970e+02   3.913860e-01         5567        442           7083      10001       72        0
*    86     3  -4.785020e-01  -2.456763e-01   2.328258e-01   9.476933e-01   2.343130e+02   3.883694e-01         5187        322           7240      10001       61        0
*    88     3  -4.785020e-01  -2.589698e-01   2.195322e-01   8.477134e-01   2.412020e+02   3.855689e-01         6056        513           7429      10001      100        0
*    94     3  -4.244300e-01  -2.655724e-01   1.588576e-01   5.981705e-01   2.679930e+02   3.694126e-01         7061        617           8011      10001      103        0
*    96     3  -3.843122e-01  -2.661670e-01   1.181452e-01   4.438763e-01   2.769300e+02   3.647131e-01         7125        451           8184      10001       96        0
*    98     3  -3.843122e-01  -2.684573e-01   1.158548e-01   4.315576e-01   2.867610e+02   3.591841e-01         8343        358           8344      10001       84        0
*   100     3  -3.843122e-01  -2.730120e-01   1.113002e-01   4.076751e-01   2.939760e+02   3.571720e-01         6479        480           8474      10001       72        0
*   102     3  -3.766347e-01  -2.730287e-01   1.036060e-01   3.794693e-01   3.018870e+02   3.544373e-01         6368        302           8606      10001       61        0
*   104     3  -3.309859e-01  -2.748392e-01   5.614668e-02   2.042892e-01   3.053080e+02   3.570165e-01         2700        181           8740      10001       58        0
*   106     3  -3.150874e-01  -2.752465e-01   3.984096e-02   1.447465e-01   3.089350e+02   3.592989e-01         3440        160           8851      10001       58        0
*   108     3  -3.132900e-01  -2.784405e-01   3.484948e-02   1.251595e-01   3.125640e+02   3.615260e-01         3269        200           8971      10001       56        0
*   110     3  -3.003141e-01  -2.847927e-01   1.552141e-02   5.450075e-02   3.169690e+02   3.628115e-01         4098        358           9127      10001       72        0
*   112     3  -3.003141e-01  -2.871849e-01   1.312920e-02   4.571689e-02   3.214980e+02   3.639214e-01         4004        143           9224      10001       58        0
*   114     3  -3.003141e-01  -2.878694e-01   1.244471e-02   4.323041e-02   3.253480e+02   3.657622e-01         3509        147           9311      10001       58        0
*   116     3  -2.955794e-01  -2.886236e-01   6.955786e-03   2.409985e-02   3.289440e+02   3.678438e-01         3355        117           9396      10001       58        0
*   118     3  -2.955794e-01  -2.888396e-01   6.739743e-03   2.333386e-02   3.327710e+02   3.696236e-01         3615        250           9501      10001       61        0
*   120     3  -2.933195e-01  -2.889676e-01   4.351882e-03   1.506011e-02   3.366280e+02   3.713298e-01         3729        156           9579      10001       59        0
*   122     3  -2.931592e-01  -2.892123e-01   3.946833e-03   1.364684e-02   3.408620e+02   3.725848e-01         3938        139           9667      10001       55        0
*   124     1  -2.931592e-01  -2.893002e-01   3.858978e-03   1.333901e-02   3.446820e+02   3.684556e-01         3572        113           9747      10001       52        0
    125     0  -2.931592e-01  -2.893002e-01   3.858978e-03   1.333901e-02   3.451390e+02   3.679677e-01          453         65           9794        453       36        0
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Postprocessing

Solution Statistics.
	 Solution Status: Optimal (tree empty)
	 Primal Objective: -0.2893001898743664
	 Dual Bound: -0.2931591680797371
	 Dual Gap (relative): 0.013339010275266345

Search Statistics.
	 Total number of nodes processed: 127
	 Total number of lmo calls: 9914
	 Total time (s): 345.594
	 LMO calls / sec: 28.686840628020164
	 Nodes / sec: 0.36748323176907005
	 LMO calls / node: 78.06299212598425


(seed, dimension) = (7, 120)
Away FW: false
set = MathOptInterface.LessThan{Float64}(34.0)
v[idx] = 1718.0
set = MathOptInterface.LessThan{Float64}(204.0)
v[idx] = 404.0
set = MathOptInterface.LessThan{Float64}(54.0)
v[idx] = 342.0
set = MathOptInterface.LessThan{Float64}(28.0)
v[idx] = 83.0


Boscia Algorithm.

Parameter settings.
	 Tree traversal strategy: Move best bound
	 Branching strategy: Most infeasible
	 Absolute dual gap tolerance: 1.000000e-06
	 Relative dual gap tolerance: 1.000000e-02
	 Frank-Wolfe subproblem tolerance: 1.000000e-02
	 Frank-Wolfe dual gap decay factor: 8.000000e-01
	 Additional kwargs: 
Away FW: true
	 Total number of variables: 120
	 Number of integer variables: 60
	 Number of binary variables: 0


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Iter  Open          Bound      Incumbent      Gap (abs)      Gap (rel)       Time (s)      Nodes/sec      FW (ms)   LMO (ms)  LMO (calls c)   FW (its) #activeset  #shadow
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*     1     2  -8.422990e+01   2.708815e+00   8.693872e+01            Inf   3.678000e+00   8.156607e-01         3671        621            107      10001       70        0
*     6     5  -3.246631e+00   1.470984e+00   4.717615e+00            Inf   2.005300e+01   6.482821e-01         3336        201            431      10001       73        0
*    10     7  -3.246631e+00   1.032188e+00   4.278819e+00            Inf   3.201900e+01   5.933977e-01         3680        409            807      10001       98        0
*    50     7  -2.526670e+00   6.071748e-01   3.133845e+00            Inf   1.444610e+02   4.361039e-01         3238        190           4354      10001       97        0
*    52     7  -1.939153e+00   3.790027e-01   2.318156e+00            Inf   1.504850e+02   4.319367e-01         3059        210           4555      10001       96        0
*    54     9  -1.939153e+00   1.341953e-01   2.073349e+00            Inf   1.567120e+02   4.402981e-01         3047        207           4775      10001      109        0
*    58    11  -1.939153e+00  -6.063398e-02   1.878519e+00   3.098129e+01   1.686760e+02   4.446394e-01         3111        266           5191      10001       99        0
*    74     7  -1.429340e+00  -1.321966e-01   1.297144e+00   9.812234e+00   2.049540e+02   4.244855e-01         3054        164           6703      10001       88        0
*    88     7  -1.335692e+00  -1.876492e-01   1.148043e+00   6.118029e+00   2.417710e+02   4.177507e-01         3271        369           8236      10001       99        0
*    90     7  -1.335692e+00  -2.688302e-01   1.066862e+00   3.968536e+00   2.477980e+02   4.156611e-01         3041        184           8408      10001       83        0
*    98     7  -1.162688e+00  -2.909359e-01   8.717517e-01   2.996371e+00   2.662220e+02   4.169453e-01         3305        221           9250      10001       82        0
*   100     5  -1.162688e+00  -3.073663e-01   8.553213e-01   2.782742e+00   2.708160e+02   4.172575e-01         3218        288           9425      10001       76        0
*   102     3  -1.162688e+00  -3.672523e-01   7.954352e-01   2.165909e+00   2.759540e+02   4.167361e-01         3064        195           9659      10001       68        0
*   104     3  -1.162688e+00  -4.545211e-01   7.081665e-01   1.558050e+00   2.806270e+02   4.169235e-01         3035        140           9795      10001       63        0
*   106     3  -8.694390e-01  -4.951755e-01   3.742635e-01   7.558199e-01   2.847480e+02   4.179134e-01         3218        207           9948      10001       65        0
*   108     3  -8.694390e-01  -5.184676e-01   3.509714e-01   6.769400e-01   2.895070e+02   4.179519e-01         3145        186          10145      10001       64        0
*   112     3  -8.227359e-01  -5.202866e-01   3.024492e-01   5.813127e-01   2.986700e+02   4.185221e-01         3573        362          10563      10001       83        0
*   114     3  -8.227359e-01  -5.290532e-01   2.936827e-01   5.551098e-01   3.044010e+02   4.172128e-01         3648        540          10872      10001      119        0
*   116     3  -8.227359e-01  -5.558434e-01   2.668924e-01   4.801576e-01   3.090130e+02   4.174582e-01         3503        416          11114      10001      144        0
*   118     3  -8.227359e-01  -5.695012e-01   2.532347e-01   4.446606e-01   3.137550e+02   4.175232e-01         3381        274          11379      10001      100        0
*   120     3  -8.227359e-01  -5.874672e-01   2.352687e-01   4.004798e-01   3.185170e+02   4.175601e-01         3398        340          11608      10001       79        0
*   122     3  -7.584382e-01  -5.885793e-01   1.698589e-01   2.885913e-01   3.230230e+02   4.179269e-01         3377        311          11819      10001       63        0
*   124     3  -7.513957e-01  -5.898219e-01   1.615738e-01   2.739366e-01   3.276640e+02   4.181112e-01         3471        382          12063      10001       83        0
*   126     3  -7.064285e-01  -5.937137e-01   1.127148e-01   1.898471e-01   3.317040e+02   4.190483e-01         3569        453          12269      10001      111        0
*   128     3  -7.064285e-01  -5.941151e-01   1.123134e-01   1.890432e-01   3.363470e+02   4.192099e-01         3478        396          12511      10001      128        0
*   136     3  -7.006840e-01  -5.960914e-01   1.045926e-01   1.754640e-01   3.544650e+02   4.203518e-01         3422        287          13283      10001       69        0
*   138     3  -7.006840e-01  -5.970487e-01   1.036353e-01   1.735794e-01   3.590210e+02   4.205882e-01         3525        337          13472      10001       75        0
*   140     3  -7.006840e-01  -5.990846e-01   1.015994e-01   1.695911e-01   3.634780e+02   4.209333e-01         3445        304          13653      10001       77        0
*   142     3  -7.006840e-01  -6.016956e-01   9.898838e-02   1.645157e-01   3.676720e+02   4.215714e-01         3726        475          13867      10001      115        0
*   144     3  -6.630533e-01  -6.028139e-01   6.023938e-02   9.993032e-02   3.716140e+02   4.224814e-01         3394        249          14018      10001       58        0
*   146     3  -6.613569e-01  -6.040711e-01   5.728585e-02   9.483297e-02   3.762220e+02   4.226228e-01         3504        293          14227      10001       99        0
*   148     3  -6.613569e-01  -6.049073e-01   5.644960e-02   9.331941e-02   3.797850e+02   4.239241e-01         3266        160          14311      10001       53        0
*   150     3  -6.613569e-01  -6.052327e-01   5.612425e-02   9.273169e-02   3.832800e+02   4.252766e-01         3176        129          14409      10001       52        0
*   152     3  -6.253370e-01  -6.064471e-01   1.888994e-02   3.114854e-02   3.869180e+02   4.264469e-01         3217        169          14523      10001       55        0
*   154     3  -6.253370e-01  -6.068393e-01   1.849775e-02   3.048212e-02   3.906320e+02   4.275123e-01         3431        262          14659      10001       95        0
*   156     3  -6.253370e-01  -6.069019e-01   1.843511e-02   3.037576e-02   3.941000e+02   4.288252e-01         3222        108          14738      10001       57        0
*   158     3  -6.253370e-01  -6.071904e-01   1.814660e-02   2.988618e-02   3.987950e+02   4.287917e-01         3329        194          14869      10001       61        0
    159     2  -6.109800e-01  -6.071904e-01   3.789639e-03   6.241270e-03   3.994660e+02   4.280715e-01          669        121          14950       1708       39        0
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Postprocessing

Solution Statistics.
	 Solution Status: Optimal (tolerance reached)
	 Primal Objective: -0.6071904092719482
	 Dual Bound: -0.6109800487189087
	 Dual Gap (relative): 0.006241270265622924

Search Statistics.
	 Total number of nodes processed: 171
	 Total number of lmo calls: 15055
	 Total time (s): 399.936
	 LMO calls / sec: 37.64352296367419
	 Nodes / sec: 0.4275684109457513
	 LMO calls / node: 88.04093567251462


(seed, dimension) = (8, 120)
Away FW: false
set = MathOptInterface.LessThan{Float64}(223.0)
v[idx] = 570.0
set = MathOptInterface.LessThan{Float64}(64.0)
v[idx] = 117.0
set = MathOptInterface.LessThan{Float64}(173.0)
v[idx] = 347.0
set = MathOptInterface.LessThan{Float64}(96.0)
v[idx] = 405.0
set = MathOptInterface.LessThan{Float64}(37.0)
v[idx] = 79.0
set = MathOptInterface.LessThan{Float64}(49.0)
v[idx] = 97.0
set = MathOptInterface.LessThan{Float64}(511.0)
v[idx] = 708.0
set = MathOptInterface.LessThan{Float64}(126.0)
v[idx] = 157.0
set = MathOptInterface.LessThan{Float64}(108.0)
v[idx] = 207.0


Boscia Algorithm.

Parameter settings.
	 Tree traversal strategy: Move best bound
	 Branching strategy: Most infeasible
	 Absolute dual gap tolerance: 1.000000e-06
	 Relative dual gap tolerance: 1.000000e-02
	 Frank-Wolfe subproblem tolerance: 1.000000e-02
	 Frank-Wolfe dual gap decay factor: 8.000000e-01
	 Additional kwargs: 
Away FW: true
	 Total number of variables: 120
	 Number of integer variables: 60
	 Number of binary variables: 0


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Iter  Open          Bound      Incumbent      Gap (abs)      Gap (rel)       Time (s)      Nodes/sec      FW (ms)   LMO (ms)  LMO (calls c)   FW (its) #activeset  #shadow
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*     1     2  -4.122910e+01   4.011438e+00   4.524053e+01            Inf   2.944000e+00   1.019022e+00         2941        499            112      10001       72        0
*     2     3  -4.122910e+01   1.901714e+00   4.313081e+01            Inf   5.919000e+00   8.447373e-01         2973        254            167      10001       78        0
*     4     3  -1.194013e+01   1.089618e+00   1.302974e+01            Inf   9.977000e+00   7.016137e-01         3010        232            308      10001       77        0
*     6     3  -8.839111e+00   5.622470e-01   9.401358e+00            Inf   1.496200e+01   6.015239e-01         3135        205            459      10001       79        0
*     8     3  -3.406862e+00   3.643541e-01   3.771216e+00            Inf   1.915900e+01   5.741427e-01         3092        275            605      10001       75        0
*    10     3  -9.126923e-01   1.458522e-01   1.058544e+00            Inf   2.366100e+01   5.494273e-01         3012        215            798      10001       77        0
*    12     3  -9.126923e-01   8.148601e-04   9.135071e-01            Inf   2.762200e+01   5.430454e-01         3127        228            956      10001       75        0
*    16     3  -6.955079e-01  -4.525211e-02   6.502558e-01   1.436962e+01   3.663700e+01   5.186014e-01         3260        219           1307      10001       70        0
*    86     1  -2.832819e-01  -2.832767e-01   5.268696e-06   1.859912e-05   1.141530e+02   7.621350e-01          379         74           5751        815      492        0
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Postprocessing

Solution Statistics.
	 Solution Status: Optimal (tolerance reached)
	 Primal Objective: -0.28327668052661187
	 Dual Bound: -0.2832819492221955
	 Dual Gap (relative): 1.8599115090781343e-5

Search Statistics.
	 Total number of nodes processed: 87
	 Total number of lmo calls: 5892
	 Total time (s): 114.663
	 LMO calls / sec: 51.38536406687423
	 Nodes / sec: 0.758745192433479
	 LMO calls / node: 67.72413793103448


(seed, dimension) = (9, 120)
Away FW: false
set = MathOptInterface.LessThan{Float64}(21.0)
v[idx] = 4460.0
set = MathOptInterface.LessThan{Float64}(50.0)
v[idx] = 441.0
set = MathOptInterface.LessThan{Float64}(27.0)
v[idx] = 399.0
set = MathOptInterface.LessThan{Float64}(172.0)
v[idx] = 413.0
set = MathOptInterface.LessThan{Float64}(21.0)
v[idx] = 80.0
set = MathOptInterface.LessThan{Float64}(25.0)
v[idx] = 93.0
set = MathOptInterface.LessThan{Float64}(15.0)
v[idx] = 71.0
set = MathOptInterface.LessThan{Float64}(52.0)
v[idx] = 78.0
set = MathOptInterface.LessThan{Float64}(41.0)
v[idx] = 247.0
set = MathOptInterface.LessThan{Float64}(28.0)
v[idx] = 114.0
set = MathOptInterface.LessThan{Float64}(54.0)
v[idx] = 2734.0
set = MathOptInterface.LessThan{Float64}(159.0)
v[idx] = 167.0


Boscia Algorithm.

Parameter settings.
	 Tree traversal strategy: Move best bound
	 Branching strategy: Most infeasible
	 Absolute dual gap tolerance: 1.000000e-06
	 Relative dual gap tolerance: 1.000000e-02
	 Frank-Wolfe subproblem tolerance: 1.000000e-02
	 Frank-Wolfe dual gap decay factor: 8.000000e-01
	 Additional kwargs: 
Away FW: true
	 Total number of variables: 120
	 Number of integer variables: 60
	 Number of binary variables: 0


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Iter  Open          Bound      Incumbent      Gap (abs)      Gap (rel)       Time (s)      Nodes/sec      FW (ms)   LMO (ms)  LMO (calls c)   FW (its) #activeset  #shadow
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*     1     2  -1.645463e+02   4.735221e+00   1.692815e+02            Inf   2.848000e+00   1.053371e+00         2846        463            102      10001       62        0
*     2     3  -1.645463e+02   3.736309e+00   1.682826e+02            Inf   5.752000e+00   8.692629e-01         2901        223            154      10001       69        0
*     4     3  -3.625706e+00   2.726738e+00   6.352444e+00            Inf   9.797000e+00   7.145044e-01         3033        247            297      10001       77        0
*     6     5  -3.625706e+00   1.757460e+00   5.383165e+00            Inf   1.604900e+01   6.854010e-01         3119        278            474      10001       77        0
*    10     5  -3.625706e+00   8.692149e-01   4.494921e+00            Inf   2.619700e+01   5.725846e-01         3181        305            879      10001       80        0
*    16     5  -9.965580e-01   6.835636e-01   1.680122e+00            Inf   4.179300e+01   5.024765e-01         3186        291           1500      10001       77        0
*    96     1  -1.865009e-02  -1.863280e-02   1.728903e-05   9.278816e-04   1.274700e+02   7.766533e-01          544         35           7039       1276      943        0
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Postprocessing

Solution Statistics.
	 Solution Status: Optimal (tolerance reached)
	 Primal Objective: -0.018632801121926
	 Dual Bound: -0.01865009015524044
	 Dual Gap (relative): 0.0009278815998359728

Search Statistics.
	 Total number of nodes processed: 99
	 Total number of lmo calls: 7191
	 Total time (s): 128.005
	 LMO calls / sec: 56.17749306667709
	 Nodes / sec: 0.7734072887777822
	 LMO calls / node: 72.63636363636364


(seed, dimension) = (10, 120)
Away FW: false
set = MathOptInterface.LessThan{Float64}(43.0)
v[idx] = 1335.0
set = MathOptInterface.LessThan{Float64}(27.0)
v[idx] = 386.0
set = MathOptInterface.LessThan{Float64}(16.0)
v[idx] = 142.0
set = MathOptInterface.LessThan{Float64}(140.0)
v[idx] = 240.0


Boscia Algorithm.

Parameter settings.
	 Tree traversal strategy: Move best bound
	 Branching strategy: Most infeasible
	 Absolute dual gap tolerance: 1.000000e-06
	 Relative dual gap tolerance: 1.000000e-02
	 Frank-Wolfe subproblem tolerance: 1.000000e-02
	 Frank-Wolfe dual gap decay factor: 8.000000e-01
	 Additional kwargs: 
Away FW: true
	 Total number of variables: 120
	 Number of integer variables: 60
	 Number of binary variables: 0


-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   Iter  Open          Bound      Incumbent      Gap (abs)      Gap (rel)       Time (s)      Nodes/sec      FW (ms)   LMO (ms)  LMO (calls c)   FW (its) #activeset  #shadow
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
*     1     2  -1.076609e+01   4.444711e+00   1.521081e+01            Inf   2.915000e+00   1.029160e+00         2913        505            106      10001       81        0
    100   101  -7.530553e+00   4.444711e+00   1.197526e+01            Inf   2.943370e+02   6.828907e-01         2730         64           7874      10001       64        0
    200   201  -7.172629e+00   4.444711e+00   1.161734e+01            Inf   5.951470e+02   6.737831e-01         2764        127          15982      10001       86        0
*   241   240  -7.141966e+00   4.242682e+00   1.138465e+01            Inf   7.176260e+02   6.702656e-01         2891        228          19376      10001       75        0
*   268   265  -7.141966e+00   3.894616e+00   1.103658e+01            Inf   7.973630e+02   6.709617e-01         2985        151          21522      10001      108        0
    300   297  -7.141966e+00   3.894616e+00   1.103658e+01            Inf   8.936340e+02   6.702968e-01         2866         94          24144      10001       77        0
    400   387  -6.868203e+00   3.894616e+00   1.076282e+01            Inf   1.193577e+03   6.610382e-01         2967         89          32184      10001       67        0
[ Info: Polish solution
[ Info: [-0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 0.0, 166.0, -0.0, 1.0, 2.0, -0.0, -0.0, -0.0, 1.0, -0.0, 1.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 2.0, 2.0, -0.0, -0.0, 1.0, 1.0, -0.0, 1.0, 2.0, 2.0, -0.0, -0.0, -0.0, -0.0, -0.0, 2.0, -0.0, 4.0, -0.0, 0.0, -0.0, -0.0, -0.0, -0.0, 1.0, 0.0, -0.0, -0.0, -0.0, 1.0, -0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -6.151971400791822e-5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
[ Info: [-0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 47.0, -0.0, -0.0, 1.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 30.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, -0.0, 117.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, -0.00011995796722885643, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
    500   487  -6.453094e+00   3.894616e+00   1.034771e+01            Inf   1.507176e+03   6.561941e-01         2742         54          40394      10001       74        0
    596   579  -6.453094e+00   3.894616e+00   1.034771e+01            Inf   1.800066e+03   6.538649e-01         3057        233          48525      10001      115        0
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------

Postprocessing

Solution Statistics.
	 Solution Status: Time limit reached
	 Primal Objective: 0.5898811316385144
	 Dual Bound: -6.453093974611377
	 Dual Gap (relative): Inf

Search Statistics.
	 Total number of nodes processed: 1177
	 Total number of lmo calls: 48598
	 Total time (s): 1800.375
	 LMO calls / sec: 26.993265291953065
	 Nodes / sec: 0.6537526904117198
	 LMO calls / node: 41.28971962616822


[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
┌ Warning: Tree empty but primal not equal to the incumbent.
└ @ Boscia /nfs/homeoptimi/htroppen/Boscia.jl/src/interface.jl:504
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
[ Info: Polish solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: primal >= tree.incumbent
[ Info: postsolve did not improve the solution
[ Info: Polish solution
(seed, dimension) = (1, 5)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 5)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 5)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 5)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 5)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 5)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 5)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 5)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 5)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 5)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 5)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 5)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 10)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 15)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (2, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (3, 20)
Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

Away FW: true

Away FW: false

(seed, dimension) = (1, 5)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (2, 5)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (3, 5)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (1, 10)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (2, 10)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (3, 10)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (1, 15)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (2, 15)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (3, 15)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (1, 20)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (2, 20)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

(seed, dimension) = (3, 20)
Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

Away FW: true

